{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../base/values');\n/* jshint ignore:line */\n\n\nvar CommandList;\nvar CommandPage;\nvar CommandInstance;\nvar CommandContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the CommandList\n *\n * @constructor Twilio.Wireless.V1.CommandList\n *\n * @param {Twilio.Wireless.V1} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nCommandList = function CommandList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function commands\n   * @memberof Twilio.Wireless.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Wireless.V1.CommandContext}\n   */\n\n  /* jshint ignore:end */\n  function CommandListInstance(sid) {\n    return CommandListInstance.get(sid);\n  }\n\n  CommandListInstance._version = version; // Path Solution\n\n  CommandListInstance._solution = {};\n  CommandListInstance._uri = `/Commands`;\n  /* jshint ignore:start */\n\n  /**\n   * Streams CommandInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Wireless.V1.CommandList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.sim] - The sid or unique_name of the Sim resources to read\n   * @param {command.status} [opts.status] - The status of the resources to read\n   * @param {command.direction} [opts.direction] -\n   *          Only return Commands with this direction value\n   * @param {command.transport} [opts.transport] -\n   *          Only return Commands with this transport value\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n  CommandListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists CommandInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Wireless.V1.CommandList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.sim] - The sid or unique_name of the Sim resources to read\n   * @param {command.status} [opts.status] - The status of the resources to read\n   * @param {command.direction} [opts.direction] -\n   *          Only return Commands with this direction value\n   * @param {command.transport} [opts.transport] -\n   *          Only return Commands with this transport value\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  CommandListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of CommandInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Wireless.V1.CommandList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.sim] - The sid or unique_name of the Sim resources to read\n   * @param {command.status} [opts.status] - The status of the resources to read\n   * @param {command.direction} [opts.direction] -\n   *          Only return Commands with this direction value\n   * @param {command.transport} [opts.transport] -\n   *          Only return Commands with this transport value\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  CommandListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'Sim': _.get(opts, 'sim'),\n      'Status': _.get(opts, 'status'),\n      'Direction': _.get(opts, 'direction'),\n      'Transport': _.get(opts, 'transport'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new CommandPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of CommandInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Wireless.V1.CommandList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  CommandListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new CommandPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * create a CommandInstance\n   *\n   * @function create\n   * @memberof Twilio.Wireless.V1.CommandList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.command -\n   *          The message body of the Command or a Base64 encoded byte string in binary mode\n   * @param {string} [opts.sim] -\n   *          The sid or unique_name of the SIM to send the Command to\n   * @param {string} [opts.callbackMethod] -\n   *          The HTTP method we use to call callback_url\n   * @param {string} [opts.callbackUrl] -\n   *          he URL we call when the Command has finished sending\n   * @param {command.command_mode} [opts.commandMode] -\n   *          The mode to use when sending the SMS message\n   * @param {string} [opts.includeSid] -\n   *          Whether to include the SID of the command in the message body\n   * @param {boolean} [opts.deliveryReceiptRequested] -\n   *          Whether to request delivery receipt from the recipient\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed CommandInstance\n   */\n\n  /* jshint ignore:end */\n\n\n  CommandListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n\n    if (_.isUndefined(opts['command'])) {\n      throw new Error('Required parameter \"opts[\\'command\\']\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Command': _.get(opts, 'command'),\n      'Sim': _.get(opts, 'sim'),\n      'CallbackMethod': _.get(opts, 'callbackMethod'),\n      'CallbackUrl': _.get(opts, 'callbackUrl'),\n      'CommandMode': _.get(opts, 'commandMode'),\n      'IncludeSid': _.get(opts, 'includeSid'),\n      'DeliveryReceiptRequested': serialize.bool(_.get(opts, 'deliveryReceiptRequested'))\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new CommandInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a command\n   *\n   * @function get\n   * @memberof Twilio.Wireless.V1.CommandList#\n   *\n   * @param {string} sid - The SID that identifies the resource to fetch\n   *\n   * @returns {Twilio.Wireless.V1.CommandContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  CommandListInstance.get = function get(sid) {\n    return new CommandContext(this._version, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Wireless.V1.CommandList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  CommandListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  CommandListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return CommandListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the CommandPage\n *\n * @constructor Twilio.Wireless.V1.CommandPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {CommandSolution} solution - Path solution\n *\n * @returns CommandPage\n */\n\n/* jshint ignore:end */\n\n\nCommandPage = function CommandPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(CommandPage.prototype, Page.prototype);\n\nCommandPage.prototype.constructor = CommandPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of CommandInstance\n *\n * @function getInstance\n * @memberof Twilio.Wireless.V1.CommandPage#\n *\n * @param {CommandPayload} payload - Payload response from the API\n *\n * @returns CommandInstance\n */\n\n/* jshint ignore:end */\n\nCommandPage.prototype.getInstance = function getInstance(payload) {\n  return new CommandInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Wireless.V1.CommandPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nCommandPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nCommandPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the CommandContext\n *\n * @constructor Twilio.Wireless.V1.CommandInstance\n *\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} simSid -\n *          The SID of the Sim resource that the Command was sent to or from\n * @property {string} command - The message being sent to or from the SIM\n * @property {command.command_mode} commandMode -\n *          The mode used to send the SMS message\n * @property {command.transport} transport - The type of transport used\n * @property {boolean} deliveryReceiptRequested -\n *          Whether to request a delivery receipt\n * @property {command.status} status - The status of the Command\n * @property {command.direction} direction - The direction of the Command\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the resource was last updated format\n * @property {string} url - The absolute URL of the resource\n *\n * @param {V1} version - Version of the resource\n * @param {CommandPayload} payload - The instance payload\n * @param {sid} sid - The SID that identifies the resource to fetch\n */\n\n/* jshint ignore:end */\n\n\nCommandInstance = function CommandInstance(version, payload, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.simSid = payload.sim_sid; // jshint ignore:line\n\n  this.command = payload.command; // jshint ignore:line\n\n  this.commandMode = payload.command_mode; // jshint ignore:line\n\n  this.transport = payload.transport; // jshint ignore:line\n\n  this.deliveryReceiptRequested = payload.delivery_receipt_requested; // jshint ignore:line\n\n  this.status = payload.status; // jshint ignore:line\n\n  this.direction = payload.direction; // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(CommandInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new CommandContext(this._version, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a CommandInstance\n *\n * @function fetch\n * @memberof Twilio.Wireless.V1.CommandInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CommandInstance\n */\n\n/* jshint ignore:end */\n\nCommandInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * remove a CommandInstance\n *\n * @function remove\n * @memberof Twilio.Wireless.V1.CommandInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CommandInstance\n */\n\n/* jshint ignore:end */\n\n\nCommandInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Wireless.V1.CommandInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nCommandInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nCommandInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the CommandContext\n *\n * @constructor Twilio.Wireless.V1.CommandContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} sid - The SID that identifies the resource to fetch\n */\n\n/* jshint ignore:end */\n\n\nCommandContext = function CommandContext(version, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    sid: sid\n  };\n  this._uri = `/Commands/${sid}`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a CommandInstance\n *\n * @function fetch\n * @memberof Twilio.Wireless.V1.CommandContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CommandInstance\n */\n\n/* jshint ignore:end */\n\n\nCommandContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new CommandInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * remove a CommandInstance\n *\n * @function remove\n * @memberof Twilio.Wireless.V1.CommandContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CommandInstance\n */\n\n/* jshint ignore:end */\n\n\nCommandContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Wireless.V1.CommandContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nCommandContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nCommandContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  CommandList: CommandList,\n  CommandPage: CommandPage,\n  CommandInstance: CommandInstance,\n  CommandContext: CommandContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","deserialize","serialize","values","CommandList","CommandPage","CommandInstance","CommandContext","version","CommandListInstance","sid","get","_version","_solution","_uri","each","opts","callback","isFunction","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","error","fetchNextPage","fn","promise","then","page","instances","instance","bind","nextPage","catch","merge","list","deferred","defer","allResources","resource","push","length","resolve","reject","nodeify","data","of","pageToken","pageNumber","uri","method","params","payload","getPage","targetUrl","_domain","twilio","request","create","bool","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","accountSid","account_sid","simSid","sim_sid","command","commandMode","command_mode","transport","deliveryReceiptRequested","delivery_receipt_requested","status","direction","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","url","_context","undefined","Object","defineProperty","fetch","_proxy","remove","module","exports"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/twilio/lib/rest/wireless/v1/command.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require('../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar CommandList;\nvar CommandPage;\nvar CommandInstance;\nvar CommandContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the CommandList\n *\n * @constructor Twilio.Wireless.V1.CommandList\n *\n * @param {Twilio.Wireless.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nCommandList = function CommandList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function commands\n   * @memberof Twilio.Wireless.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Wireless.V1.CommandContext}\n   */\n  /* jshint ignore:end */\n  function CommandListInstance(sid) {\n    return CommandListInstance.get(sid);\n  }\n\n  CommandListInstance._version = version;\n  // Path Solution\n  CommandListInstance._solution = {};\n  CommandListInstance._uri = `/Commands`;\n  /* jshint ignore:start */\n  /**\n   * Streams CommandInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Wireless.V1.CommandList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.sim] - The sid or unique_name of the Sim resources to read\n   * @param {command.status} [opts.status] - The status of the resources to read\n   * @param {command.direction} [opts.direction] -\n   *          Only return Commands with this direction value\n   * @param {command.transport} [opts.transport] -\n   *          Only return Commands with this transport value\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  CommandListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists CommandInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Wireless.V1.CommandList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.sim] - The sid or unique_name of the Sim resources to read\n   * @param {command.status} [opts.status] - The status of the resources to read\n   * @param {command.direction} [opts.direction] -\n   *          Only return Commands with this direction value\n   * @param {command.transport} [opts.transport] -\n   *          Only return Commands with this transport value\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  CommandListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of CommandInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Wireless.V1.CommandList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.sim] - The sid or unique_name of the Sim resources to read\n   * @param {command.status} [opts.status] - The status of the resources to read\n   * @param {command.direction} [opts.direction] -\n   *          Only return Commands with this direction value\n   * @param {command.transport} [opts.transport] -\n   *          Only return Commands with this transport value\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  CommandListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Sim': _.get(opts, 'sim'),\n      'Status': _.get(opts, 'status'),\n      'Direction': _.get(opts, 'direction'),\n      'Transport': _.get(opts, 'transport'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new CommandPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of CommandInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Wireless.V1.CommandList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  CommandListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new CommandPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * create a CommandInstance\n   *\n   * @function create\n   * @memberof Twilio.Wireless.V1.CommandList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.command -\n   *          The message body of the Command or a Base64 encoded byte string in binary mode\n   * @param {string} [opts.sim] -\n   *          The sid or unique_name of the SIM to send the Command to\n   * @param {string} [opts.callbackMethod] -\n   *          The HTTP method we use to call callback_url\n   * @param {string} [opts.callbackUrl] -\n   *          he URL we call when the Command has finished sending\n   * @param {command.command_mode} [opts.commandMode] -\n   *          The mode to use when sending the SMS message\n   * @param {string} [opts.includeSid] -\n   *          Whether to include the SID of the command in the message body\n   * @param {boolean} [opts.deliveryReceiptRequested] -\n   *          Whether to request delivery receipt from the recipient\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed CommandInstance\n   */\n  /* jshint ignore:end */\n  CommandListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts['command'])) {\n      throw new Error('Required parameter \"opts[\\'command\\']\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Command': _.get(opts, 'command'),\n      'Sim': _.get(opts, 'sim'),\n      'CallbackMethod': _.get(opts, 'callbackMethod'),\n      'CallbackUrl': _.get(opts, 'callbackUrl'),\n      'CommandMode': _.get(opts, 'commandMode'),\n      'IncludeSid': _.get(opts, 'includeSid'),\n      'DeliveryReceiptRequested': serialize.bool(_.get(opts, 'deliveryReceiptRequested'))\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new CommandInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a command\n   *\n   * @function get\n   * @memberof Twilio.Wireless.V1.CommandList#\n   *\n   * @param {string} sid - The SID that identifies the resource to fetch\n   *\n   * @returns {Twilio.Wireless.V1.CommandContext}\n   */\n  /* jshint ignore:end */\n  CommandListInstance.get = function get(sid) {\n    return new CommandContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Wireless.V1.CommandList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  CommandListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  CommandListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return CommandListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the CommandPage\n *\n * @constructor Twilio.Wireless.V1.CommandPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {CommandSolution} solution - Path solution\n *\n * @returns CommandPage\n */\n/* jshint ignore:end */\nCommandPage = function CommandPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(CommandPage.prototype, Page.prototype);\nCommandPage.prototype.constructor = CommandPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of CommandInstance\n *\n * @function getInstance\n * @memberof Twilio.Wireless.V1.CommandPage#\n *\n * @param {CommandPayload} payload - Payload response from the API\n *\n * @returns CommandInstance\n */\n/* jshint ignore:end */\nCommandPage.prototype.getInstance = function getInstance(payload) {\n  return new CommandInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Wireless.V1.CommandPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nCommandPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nCommandPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the CommandContext\n *\n * @constructor Twilio.Wireless.V1.CommandInstance\n *\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} simSid -\n *          The SID of the Sim resource that the Command was sent to or from\n * @property {string} command - The message being sent to or from the SIM\n * @property {command.command_mode} commandMode -\n *          The mode used to send the SMS message\n * @property {command.transport} transport - The type of transport used\n * @property {boolean} deliveryReceiptRequested -\n *          Whether to request a delivery receipt\n * @property {command.status} status - The status of the Command\n * @property {command.direction} direction - The direction of the Command\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the resource was last updated format\n * @property {string} url - The absolute URL of the resource\n *\n * @param {V1} version - Version of the resource\n * @param {CommandPayload} payload - The instance payload\n * @param {sid} sid - The SID that identifies the resource to fetch\n */\n/* jshint ignore:end */\nCommandInstance = function CommandInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.simSid = payload.sim_sid; // jshint ignore:line\n  this.command = payload.command; // jshint ignore:line\n  this.commandMode = payload.command_mode; // jshint ignore:line\n  this.transport = payload.transport; // jshint ignore:line\n  this.deliveryReceiptRequested = payload.delivery_receipt_requested; // jshint ignore:line\n  this.status = payload.status; // jshint ignore:line\n  this.direction = payload.direction; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {sid: sid || this.sid, };\n};\n\nObject.defineProperty(CommandInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new CommandContext(this._version, this._solution.sid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a CommandInstance\n *\n * @function fetch\n * @memberof Twilio.Wireless.V1.CommandInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CommandInstance\n */\n/* jshint ignore:end */\nCommandInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a CommandInstance\n *\n * @function remove\n * @memberof Twilio.Wireless.V1.CommandInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CommandInstance\n */\n/* jshint ignore:end */\nCommandInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Wireless.V1.CommandInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nCommandInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nCommandInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the CommandContext\n *\n * @constructor Twilio.Wireless.V1.CommandContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} sid - The SID that identifies the resource to fetch\n */\n/* jshint ignore:end */\nCommandContext = function CommandContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {sid: sid, };\n  this._uri = `/Commands/${sid}`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a CommandInstance\n *\n * @function fetch\n * @memberof Twilio.Wireless.V1.CommandContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CommandInstance\n */\n/* jshint ignore:end */\nCommandContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new CommandInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a CommandInstance\n *\n * @function remove\n * @memberof Twilio.Wireless.V1.CommandContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CommandInstance\n */\n/* jshint ignore:end */\nCommandContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Wireless.V1.CommandContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nCommandContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nCommandContext.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  CommandList: CommandList,\n  CommandPage: CommandPage,\n  CommandInstance: CommandInstance,\n  CommandContext: CommandContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}