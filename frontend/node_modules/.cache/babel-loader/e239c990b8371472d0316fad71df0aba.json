{"ast":null,"code":"// Generated by CoffeeScript 2.4.1\n(function () {\n  // Copies all enumerable own properties from `sources` to `target`\n  var assign,\n      getValue,\n      isArray,\n      isEmpty,\n      isFunction,\n      isObject,\n      isPlainObject,\n      hasProp = {}.hasOwnProperty;\n\n  assign = function (target) {\n    for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      sources[_key - 1] = arguments[_key];\n    }\n\n    var i, key, len, source;\n\n    if (isFunction(Object.assign)) {\n      Object.assign.apply(null, arguments);\n    } else {\n      for (i = 0, len = sources.length; i < len; i++) {\n        source = sources[i];\n\n        if (source != null) {\n          for (key in source) {\n            if (!hasProp.call(source, key)) continue;\n            target[key] = source[key];\n          }\n        }\n      }\n    }\n\n    return target;\n  }; // Determines if `val` is a Function object\n\n\n  isFunction = function (val) {\n    return !!val && Object.prototype.toString.call(val) === '[object Function]';\n  }; // Determines if `val` is an Object\n\n\n  isObject = function (val) {\n    var ref;\n    return !!val && ((ref = typeof val) === 'function' || ref === 'object');\n  }; // Determines if `val` is an Array\n\n\n  isArray = function (val) {\n    if (isFunction(Array.isArray)) {\n      return Array.isArray(val);\n    } else {\n      return Object.prototype.toString.call(val) === '[object Array]';\n    }\n  }; // Determines if `val` is an empty Array or an Object with no own properties\n\n\n  isEmpty = function (val) {\n    var key;\n\n    if (isArray(val)) {\n      return !val.length;\n    } else {\n      for (key in val) {\n        if (!hasProp.call(val, key)) continue;\n        return false;\n      }\n\n      return true;\n    }\n  }; // Determines if `val` is a plain Object\n\n\n  isPlainObject = function (val) {\n    var ctor, proto;\n    return isObject(val) && (proto = Object.getPrototypeOf(val)) && (ctor = proto.constructor) && typeof ctor === 'function' && ctor instanceof ctor && Function.prototype.toString.call(ctor) === Function.prototype.toString.call(Object);\n  }; // Gets the primitive value of an object\n\n\n  getValue = function (obj) {\n    if (isFunction(obj.valueOf)) {\n      return obj.valueOf();\n    } else {\n      return obj;\n    }\n  };\n\n  module.exports.assign = assign;\n  module.exports.isFunction = isFunction;\n  module.exports.isObject = isObject;\n  module.exports.isArray = isArray;\n  module.exports.isEmpty = isEmpty;\n  module.exports.isPlainObject = isPlainObject;\n  module.exports.getValue = getValue;\n}).call(this);","map":{"version":3,"names":["assign","getValue","isArray","isEmpty","isFunction","isObject","isPlainObject","hasProp","hasOwnProperty","target","sources","i","key","len","source","Object","apply","arguments","length","call","val","prototype","toString","ref","Array","ctor","proto","getPrototypeOf","constructor","Function","obj","valueOf","module","exports"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/xmlbuilder/lib/Utility.js"],"sourcesContent":["// Generated by CoffeeScript 2.4.1\n(function() {\n  // Copies all enumerable own properties from `sources` to `target`\n  var assign, getValue, isArray, isEmpty, isFunction, isObject, isPlainObject,\n    hasProp = {}.hasOwnProperty;\n\n  assign = function(target, ...sources) {\n    var i, key, len, source;\n    if (isFunction(Object.assign)) {\n      Object.assign.apply(null, arguments);\n    } else {\n      for (i = 0, len = sources.length; i < len; i++) {\n        source = sources[i];\n        if (source != null) {\n          for (key in source) {\n            if (!hasProp.call(source, key)) continue;\n            target[key] = source[key];\n          }\n        }\n      }\n    }\n    return target;\n  };\n\n  // Determines if `val` is a Function object\n  isFunction = function(val) {\n    return !!val && Object.prototype.toString.call(val) === '[object Function]';\n  };\n\n  // Determines if `val` is an Object\n  isObject = function(val) {\n    var ref;\n    return !!val && ((ref = typeof val) === 'function' || ref === 'object');\n  };\n\n  // Determines if `val` is an Array\n  isArray = function(val) {\n    if (isFunction(Array.isArray)) {\n      return Array.isArray(val);\n    } else {\n      return Object.prototype.toString.call(val) === '[object Array]';\n    }\n  };\n\n  // Determines if `val` is an empty Array or an Object with no own properties\n  isEmpty = function(val) {\n    var key;\n    if (isArray(val)) {\n      return !val.length;\n    } else {\n      for (key in val) {\n        if (!hasProp.call(val, key)) continue;\n        return false;\n      }\n      return true;\n    }\n  };\n\n  // Determines if `val` is a plain Object\n  isPlainObject = function(val) {\n    var ctor, proto;\n    return isObject(val) && (proto = Object.getPrototypeOf(val)) && (ctor = proto.constructor) && (typeof ctor === 'function') && (ctor instanceof ctor) && (Function.prototype.toString.call(ctor) === Function.prototype.toString.call(Object));\n  };\n\n  // Gets the primitive value of an object\n  getValue = function(obj) {\n    if (isFunction(obj.valueOf)) {\n      return obj.valueOf();\n    } else {\n      return obj;\n    }\n  };\n\n  module.exports.assign = assign;\n\n  module.exports.isFunction = isFunction;\n\n  module.exports.isObject = isObject;\n\n  module.exports.isArray = isArray;\n\n  module.exports.isEmpty = isEmpty;\n\n  module.exports.isPlainObject = isPlainObject;\n\n  module.exports.getValue = getValue;\n\n}).call(this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}