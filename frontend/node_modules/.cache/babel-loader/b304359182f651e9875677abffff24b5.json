{"ast":null,"code":"var _jsxFileName = \"/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/SignUpForm.js\",\n    _s = $RefreshSig$();\n\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport * as React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUpForm() {\n  _s();\n\n  const [isPasswordInvalid, setIsPasswordInvalid] = React.useState(false);\n  const [isPasswordConfirmed, setIsPasswordConfirmed] = React.useState(false);\n  let timeoutId;\n\n  const validatePassword = event => {\n    // Only validate a second after the user stops typing\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => {\n      /* A regex pattern that matches invalid passwords\n         - Anything with less than eight characters OR\n         - Anything with no numbers OR\n         - Anything with no uppercase letter OR\n         - Anything with no lowercase letter OR\n         - Anything with no special characters\n      */\n      const regex = '^(.{0,7}|[^0-9]*|[^A-Z]*|[^a-z]*|[a-zA-Z0-9]*)$';\n      setIsPasswordInvalid(event.target.value.match() ? false : true);\n    }, 1000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"mt-5 mb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-4\",\n      controlId: \"formSignupFirstName\",\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        required: true,\n        placeholder: \"First name\",\n        \"aria-label\": \"First name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-4\",\n      controlId: \"formSignupLastName\",\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        required: true,\n        placeholder: \"Last name\",\n        \"aria-label\": \"Last name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-5\",\n      controlId: \"formSignupEmail\",\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"email\",\n        required: true,\n        placeholder: \"Email\",\n        \"aria-label\": \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-4\",\n      controlId: \"formSignupPassword\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        required: true,\n        placeholder: \"Password\",\n        \"aria-label\": \"Password\",\n        onChange: validatePassword,\n        isInvalid: !!isPasswordInvalid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n        type: \"invalid\",\n        children: \"Use 8 or more character with a mix of lowercase and uppercase letters, numbers & symbols\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-2\",\n      controlId: \"formSignupPasswordConfirm\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        required: true,\n        placeholder: \"Confirm\",\n        \"aria-label\": \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n        className: \"text-muted\",\n        children: \"Use 8 or more character with a mix of lowercase and uppercase letters, numbers & symbols\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formSignupShowPassword\",\n      children: /*#__PURE__*/_jsxDEV(Form.Check, {\n        type: \"checkbox\",\n        label: \"Show password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUpForm, \"gg98bhV6SPfheoPbWE2XKjwFqrM=\");\n\n_c = SignUpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"names":["Button","Form","React","SignUpForm","isPasswordInvalid","setIsPasswordInvalid","useState","isPasswordConfirmed","setIsPasswordConfirmed","timeoutId","validatePassword","event","clearTimeout","setTimeout","regex","target","value","match"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/SignUpForm.js"],"sourcesContent":["import Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport * as React from \"react\";\n\nexport default function SignUpForm() {\n  const [isPasswordInvalid, setIsPasswordInvalid] = React.useState(false);\n  const [isPasswordConfirmed, setIsPasswordConfirmed] = React.useState(false);\n\n  let timeoutId;\n\n  const validatePassword = (event) => {\n    // Only validate a second after the user stops typing\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => {\n      /* A regex pattern that matches invalid passwords\n         - Anything with less than eight characters OR\n         - Anything with no numbers OR\n         - Anything with no uppercase letter OR\n         - Anything with no lowercase letter OR\n         - Anything with no special characters\n      */\n      const regex = '^(.{0,7}|[^0-9]*|[^A-Z]*|[^a-z]*|[a-zA-Z0-9]*)$'\n\n      setIsPasswordInvalid(event.target.value.match() ? false : true);\n    }, 1000);\n  };\n\n  return (\n    <Form className=\"mt-5 mb-5\">\n      <header>\n        <h1 className=\"text-center\">Sign Up</h1>\n      </header>\n      <Form.Group className=\"mb-4\" controlId=\"formSignupFirstName\">\n        <Form.Control\n          type=\"text\"\n          required\n          placeholder=\"First name\"\n          aria-label=\"First name\"\n        ></Form.Control>\n      </Form.Group>\n      <Form.Group className=\"mb-4\" controlId=\"formSignupLastName\">\n        <Form.Control\n          type=\"text\"\n          required\n          placeholder=\"Last name\"\n          aria-label=\"Last name\"\n        ></Form.Control>\n      </Form.Group>\n      <Form.Group className=\"mb-5\" controlId=\"formSignupEmail\">\n        <Form.Control\n          type=\"email\"\n          required\n          placeholder=\"Email\"\n          aria-label=\"Email\"\n        />\n      </Form.Group>\n\n      <Form.Group className=\"mb-4\" controlId=\"formSignupPassword\">\n        <Form.Control\n          type=\"password\"\n          required\n          placeholder=\"Password\"\n          aria-label=\"Password\"\n          onChange={validatePassword}\n          isInvalid={!!isPasswordInvalid}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Use 8 or more character with a mix of lowercase and uppercase letters,\n          numbers & symbols\n        </Form.Control.Feedback>\n      </Form.Group>\n      <Form.Group className=\"mb-2\" controlId=\"formSignupPasswordConfirm\">\n        <Form.Control\n          type=\"password\"\n          required\n          placeholder=\"Confirm\"\n          aria-label=\"Confirm\"\n        />\n        <Form.Text className=\"text-muted\">\n          Use 8 or more character with a mix of lowercase and uppercase letters,\n          numbers & symbols\n        </Form.Text>\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"formSignupShowPassword\">\n        <Form.Check type=\"checkbox\" label=\"Show password\" />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\">\n        Sign Up\n      </Button>\n    </Form>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}