{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar ChannelList = require('./brandedChannel/channel').ChannelList;\n\nvar Page = require('../../../base/Page');\n/* jshint ignore:line */\n\n\nvar values = require('../../../base/values');\n/* jshint ignore:line */\n\n\nvar BrandedChannelList;\nvar BrandedChannelPage;\nvar BrandedChannelInstance;\nvar BrandedChannelContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the BrandedChannelList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.TrustedComms.BrandedChannelList\n *\n * @param {Twilio.Preview.TrustedComms} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nBrandedChannelList = function BrandedChannelList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function brandedChannels\n   * @memberof Twilio.Preview.TrustedComms#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.TrustedComms.BrandedChannelContext}\n   */\n\n  /* jshint ignore:end */\n  function BrandedChannelListInstance(sid) {\n    return BrandedChannelListInstance.get(sid);\n  }\n\n  BrandedChannelListInstance._version = version; // Path Solution\n\n  BrandedChannelListInstance._solution = {};\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a branded_channel\n   *\n   * @function get\n   * @memberof Twilio.Preview.TrustedComms.BrandedChannelList#\n   *\n   * @param {string} sid - Branded Channel Sid.\n   *\n   * @returns {Twilio.Preview.TrustedComms.BrandedChannelContext}\n   */\n\n  /* jshint ignore:end */\n\n  BrandedChannelListInstance.get = function get(sid) {\n    return new BrandedChannelContext(this._version, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.TrustedComms.BrandedChannelList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  BrandedChannelListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  BrandedChannelListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return BrandedChannelListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the BrandedChannelPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.TrustedComms.BrandedChannelPage\n *\n * @param {TrustedComms} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {BrandedChannelSolution} solution - Path solution\n *\n * @returns BrandedChannelPage\n */\n\n/* jshint ignore:end */\n\n\nBrandedChannelPage = function BrandedChannelPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(BrandedChannelPage.prototype, Page.prototype);\n\nBrandedChannelPage.prototype.constructor = BrandedChannelPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of BrandedChannelInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelPage#\n *\n * @param {BrandedChannelPayload} payload - Payload response from the API\n *\n * @returns BrandedChannelInstance\n */\n\n/* jshint ignore:end */\n\nBrandedChannelPage.prototype.getInstance = function getInstance(payload) {\n  return new BrandedChannelInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nBrandedChannelPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nBrandedChannelPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the BrandedChannelContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.TrustedComms.BrandedChannelInstance\n *\n * @property {string} accountSid - Account Sid.\n * @property {string} businessSid - Business Sid.\n * @property {string} brandSid - Brand Sid.\n * @property {string} sid - Branded Channel Sid.\n * @property {string} links - Nested resource URLs.\n * @property {string} url - The URL of this resource.\n *\n * @param {TrustedComms} version - Version of the resource\n * @param {BrandedChannelPayload} payload - The instance payload\n * @param {sid} sid - Branded Channel Sid.\n */\n\n/* jshint ignore:end */\n\n\nBrandedChannelInstance = function BrandedChannelInstance(version, payload, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.businessSid = payload.business_sid; // jshint ignore:line\n\n  this.brandSid = payload.brand_sid; // jshint ignore:line\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.links = payload.links; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(BrandedChannelInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new BrandedChannelContext(this._version, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a BrandedChannelInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BrandedChannelInstance\n */\n\n/* jshint ignore:end */\n\nBrandedChannelInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * Access the channels\n *\n * @function channels\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelInstance#\n *\n * @returns {Twilio.Preview.TrustedComms.BrandedChannelContext.ChannelList}\n */\n\n/* jshint ignore:end */\n\n\nBrandedChannelInstance.prototype.channels = function channels() {\n  return this._proxy.channels;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nBrandedChannelInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nBrandedChannelInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the BrandedChannelContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.TrustedComms.BrandedChannelContext\n *\n * @property {Twilio.Preview.TrustedComms.BrandedChannelContext.ChannelList} channels -\n *          channels resource\n *\n * @param {TrustedComms} version - Version of the resource\n * @param {sid} sid - Branded Channel Sid.\n */\n\n/* jshint ignore:end */\n\n\nBrandedChannelContext = function BrandedChannelContext(version, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    sid: sid\n  };\n  this._uri = `/BrandedChannels/${sid}`; // Dependents\n\n  this._channels = undefined;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a BrandedChannelInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BrandedChannelInstance\n */\n\n/* jshint ignore:end */\n\n\nBrandedChannelContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new BrandedChannelInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(BrandedChannelContext.prototype, 'channels', {\n  get: function () {\n    if (!this._channels) {\n      this._channels = new ChannelList(this._version, this._solution.sid);\n    }\n\n    return this._channels;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\nBrandedChannelContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nBrandedChannelContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  BrandedChannelList: BrandedChannelList,\n  BrandedChannelPage: BrandedChannelPage,\n  BrandedChannelInstance: BrandedChannelInstance,\n  BrandedChannelContext: BrandedChannelContext\n};","map":{"version":3,"names":["Q","require","_","util","ChannelList","Page","values","BrandedChannelList","BrandedChannelPage","BrandedChannelInstance","BrandedChannelContext","version","BrandedChannelListInstance","sid","get","_version","_solution","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","accountSid","account_sid","businessSid","business_sid","brandSid","brand_sid","links","url","_context","undefined","Object","defineProperty","fetch","callback","_proxy","channels","_uri","_channels","deferred","defer","promise","uri","method","then","resolve","bind","catch","error","reject","nodeify","module","exports"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/twilio/lib/rest/preview/trusted_comms/brandedChannel.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar ChannelList = require('./brandedChannel/channel').ChannelList;\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar BrandedChannelList;\nvar BrandedChannelPage;\nvar BrandedChannelInstance;\nvar BrandedChannelContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the BrandedChannelList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.TrustedComms.BrandedChannelList\n *\n * @param {Twilio.Preview.TrustedComms} version - Version of the resource\n */\n/* jshint ignore:end */\nBrandedChannelList = function BrandedChannelList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function brandedChannels\n   * @memberof Twilio.Preview.TrustedComms#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.TrustedComms.BrandedChannelContext}\n   */\n  /* jshint ignore:end */\n  function BrandedChannelListInstance(sid) {\n    return BrandedChannelListInstance.get(sid);\n  }\n\n  BrandedChannelListInstance._version = version;\n  // Path Solution\n  BrandedChannelListInstance._solution = {};\n  /* jshint ignore:start */\n  /**\n   * Constructs a branded_channel\n   *\n   * @function get\n   * @memberof Twilio.Preview.TrustedComms.BrandedChannelList#\n   *\n   * @param {string} sid - Branded Channel Sid.\n   *\n   * @returns {Twilio.Preview.TrustedComms.BrandedChannelContext}\n   */\n  /* jshint ignore:end */\n  BrandedChannelListInstance.get = function get(sid) {\n    return new BrandedChannelContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.TrustedComms.BrandedChannelList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  BrandedChannelListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  BrandedChannelListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return BrandedChannelListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the BrandedChannelPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.TrustedComms.BrandedChannelPage\n *\n * @param {TrustedComms} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {BrandedChannelSolution} solution - Path solution\n *\n * @returns BrandedChannelPage\n */\n/* jshint ignore:end */\nBrandedChannelPage = function BrandedChannelPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(BrandedChannelPage.prototype, Page.prototype);\nBrandedChannelPage.prototype.constructor = BrandedChannelPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of BrandedChannelInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelPage#\n *\n * @param {BrandedChannelPayload} payload - Payload response from the API\n *\n * @returns BrandedChannelInstance\n */\n/* jshint ignore:end */\nBrandedChannelPage.prototype.getInstance = function getInstance(payload) {\n  return new BrandedChannelInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nBrandedChannelPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nBrandedChannelPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the BrandedChannelContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.TrustedComms.BrandedChannelInstance\n *\n * @property {string} accountSid - Account Sid.\n * @property {string} businessSid - Business Sid.\n * @property {string} brandSid - Brand Sid.\n * @property {string} sid - Branded Channel Sid.\n * @property {string} links - Nested resource URLs.\n * @property {string} url - The URL of this resource.\n *\n * @param {TrustedComms} version - Version of the resource\n * @param {BrandedChannelPayload} payload - The instance payload\n * @param {sid} sid - Branded Channel Sid.\n */\n/* jshint ignore:end */\nBrandedChannelInstance = function BrandedChannelInstance(version, payload, sid)\n                                                          {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.businessSid = payload.business_sid; // jshint ignore:line\n  this.brandSid = payload.brand_sid; // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n  this.links = payload.links; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {sid: sid || this.sid, };\n};\n\nObject.defineProperty(BrandedChannelInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new BrandedChannelContext(this._version, this._solution.sid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a BrandedChannelInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BrandedChannelInstance\n */\n/* jshint ignore:end */\nBrandedChannelInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the channels\n *\n * @function channels\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelInstance#\n *\n * @returns {Twilio.Preview.TrustedComms.BrandedChannelContext.ChannelList}\n */\n/* jshint ignore:end */\nBrandedChannelInstance.prototype.channels = function channels() {\n  return this._proxy.channels;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nBrandedChannelInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nBrandedChannelInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the BrandedChannelContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.TrustedComms.BrandedChannelContext\n *\n * @property {Twilio.Preview.TrustedComms.BrandedChannelContext.ChannelList} channels -\n *          channels resource\n *\n * @param {TrustedComms} version - Version of the resource\n * @param {sid} sid - Branded Channel Sid.\n */\n/* jshint ignore:end */\nBrandedChannelContext = function BrandedChannelContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {sid: sid, };\n  this._uri = `/BrandedChannels/${sid}`;\n\n  // Dependents\n  this._channels = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a BrandedChannelInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BrandedChannelInstance\n */\n/* jshint ignore:end */\nBrandedChannelContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new BrandedChannelInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(BrandedChannelContext.prototype,\n  'channels', {\n    get: function() {\n      if (!this._channels) {\n        this._channels = new ChannelList(this._version, this._solution.sid);\n      }\n      return this._channels;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.TrustedComms.BrandedChannelContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nBrandedChannelContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nBrandedChannelContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  BrandedChannelList: BrandedChannelList,\n  BrandedChannelPage: BrandedChannelPage,\n  BrandedChannelInstance: BrandedChannelInstance,\n  BrandedChannelContext: BrandedChannelContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}