{"ast":null,"code":"var _jsxFileName = \"/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/MFA.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Form, Button, Modal, Spinner } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { QrCode } from \"react-bootstrap-icons\";\nimport Loading from \"./Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MFA(_ref) {\n  _s();\n\n  let {\n    show,\n    setShow,\n    onSuccess,\n    hideQRcode,\n    user\n  } = _ref;\n  const [qrcodeSrc, setQrcodeSrc] = useState(\"\");\n  const [secret, setSecret] = useState(user.secret);\n  const [isOTPcorrect, setIsOTPcorrect] = useState(true);\n  const [isLoadingVisible, setIsLoadingVisible] = useState(false);\n  const url = \"https://google-authenticator.p.rapidapi.com\";\n  const apiKey = \"414bc5d180msh86e5db53aea8bbcp1bcd81jsn6915fb5401f0\";\n\n  async function getQrCode() {\n    // options for the initial request to get a secret key\n    let res;\n    let options = {\n      method: \"GET\",\n      url: url + \"/new_v2/\",\n      headers: {\n        \"X-RapidAPI-Key\": apiKey,\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\"\n      }\n    };\n    res = await axios.request(options);\n    let secretKey = res.data;\n    setSecret(secretKey);\n    console.log(secretKey); // Re-define options again to make a request to get a QR code.\n\n    options = {\n      method: \"GET\",\n      url: url + \"/enroll/\",\n      params: {\n        secret: secretKey,\n        issuer: \"lan\",\n        account: `${user.firstName} ${user.lastName}`\n      },\n      headers: {\n        \"X-RapidAPI-Key\": apiKey,\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\"\n      }\n    };\n    res = await axios.request(options);\n    setQrcodeSrc(res.data);\n  }\n\n  useEffect(() => {\n    if (show) {\n      // If sign-in\n      if (hideQRcode) {\n        setSecret(user.secret);\n      } else {\n        getQrCode();\n      }\n    }\n  }, [show]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    setIsLoadingVisible(true);\n    const code = e.target[0].value;\n    const options = {\n      method: \"GET\",\n      url: url + \"/validate/\",\n      params: {\n        code: code,\n        secret: secret\n      },\n      headers: {\n        \"X-RapidAPI-Key\": apiKey,\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\"\n      }\n    };\n    console.log(options);\n    axios.request(options).then(response => {\n      console.log(response.data);\n\n      if (response.data === \"True\") {\n        if (hideQRcode) {\n          onSuccess();\n        } else {\n          onSuccess(secret);\n        }\n\n        setIsOTPcorrect(true);\n        setShow(false);\n        setIsLoadingVisible(false);\n      } else {\n        setIsOTPcorrect(false);\n      }\n    });\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Loading, {\n    show: isLoadingVisible,\n    children: \"Logging in\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MFA, \"lF1szkjNqm3T+CE+YWjSgDOxkz8=\");\n\n_c = MFA;\n\nvar _c;\n\n$RefreshReg$(_c, \"MFA\");","map":{"version":3,"names":["useState","useEffect","Form","Button","Modal","Spinner","axios","QrCode","Loading","MFA","show","setShow","onSuccess","hideQRcode","user","qrcodeSrc","setQrcodeSrc","secret","setSecret","isOTPcorrect","setIsOTPcorrect","isLoadingVisible","setIsLoadingVisible","url","apiKey","getQrCode","res","options","method","headers","request","secretKey","data","console","log","params","issuer","account","firstName","lastName","submitHandler","e","preventDefault","code","target","value","then","response","handleClose"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/MFA.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Form, Button, Modal, Spinner } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { QrCode } from \"react-bootstrap-icons\";\nimport Loading from \"./Loading\";\n\nexport default function MFA({ show, setShow, onSuccess, hideQRcode, user }) {\n  const [qrcodeSrc, setQrcodeSrc] = useState(\"\");\n  const [secret, setSecret] = useState(user.secret);\n  const [isOTPcorrect, setIsOTPcorrect] = useState(true);\n  const [isLoadingVisible, setIsLoadingVisible] = useState(false);\n  const url = \"https://google-authenticator.p.rapidapi.com\";\n  const apiKey = \"414bc5d180msh86e5db53aea8bbcp1bcd81jsn6915fb5401f0\";\n\n  async function getQrCode() {\n    // options for the initial request to get a secret key\n    let res;\n    let options = {\n      method: \"GET\",\n      url: url + \"/new_v2/\",\n      headers: {\n        \"X-RapidAPI-Key\": apiKey,\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\",\n      },\n    };\n    res = await axios.request(options);\n    let secretKey = res.data;\n    setSecret(secretKey);\n    console.log(secretKey);\n\n    // Re-define options again to make a request to get a QR code.\n    options = {\n      method: \"GET\",\n      url: url + \"/enroll/\",\n      params: {\n        secret: secretKey,\n        issuer: \"lan\",\n        account: `${user.firstName} ${user.lastName}`,\n      },\n      headers: {\n        \"X-RapidAPI-Key\": apiKey,\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\",\n      },\n    };\n    res = await axios.request(options);\n    setQrcodeSrc(res.data);\n  }\n\n  useEffect(() => {\n    if (show) {\n      // If sign-in\n      if (hideQRcode) {\n        setSecret(user.secret);\n      } else {\n        getQrCode();\n      }\n    }\n  }, [show]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    setIsLoadingVisible(true);\n    const code = e.target[0].value;\n\n    const options = {\n      method: \"GET\",\n      url: url + \"/validate/\",\n      params: { code: code, secret: secret },\n      headers: {\n        \"X-RapidAPI-Key\": apiKey,\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\",\n      },\n    };\n    console.log(options);\n    axios.request(options).then((response) => {\n      console.log(response.data);\n      if (response.data === \"True\") {\n        if (hideQRcode) {\n          onSuccess();\n        } else {\n          onSuccess(secret);\n        }\n\n        setIsOTPcorrect(true);\n        setShow(false);\n        setIsLoadingVisible(false);\n      } else {\n        setIsOTPcorrect(false);\n      }\n    });\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  return (\n\n    <Loading show={isLoadingVisible}>Logging in</Loading>\n    \n\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}