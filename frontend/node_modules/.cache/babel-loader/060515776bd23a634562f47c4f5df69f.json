{"ast":null,"code":"var _jsxFileName = \"/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/PasswordInput.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PasswordInput(_ref) {\n  _s();\n\n  let {\n    timeDelayed,\n    canSubmit\n  } = _ref;\n  const [isPasswordValid, setIsPasswordValid] = React.useState(true);\n  const [isPasswordIdentical, setIsPasswordIdentical] = React.useState(true);\n  const [isPasswordVisible, setIsPasswordVisble] = React.useState(false);\n  let validatePasswordTimeoutId;\n  let confirmPasswordTimeoutId;\n\n  function validatePassword(password) {\n    /* A regex pattern that matches invalid passwords\n        - Anything with less than eight characters OR\n        - Anything with no numbers OR\n        - Anything with no uppercase letter OR\n        - Anything with no lowercase letter OR\n        - Anything with no special characters\n    */\n    const regex = \"^(.{0,7}|[^0-9]*|[^A-Z]*|[^a-z]*|[a-zA-Z0-9]*)$\"; // If there are any matches, the password is invalid\n\n    return password.match(regex) ? false : true;\n  }\n\n  function confirmPassword(password) {\n    return password === document.querySelector(\"#formSignupPassword\").value;\n  }\n\n  const validatePasswordHandler = event => {\n    clearTimeout(validatePasswordTimeoutId);\n    validatePasswordTimeoutId = setTimeout(() => {\n      setIsPasswordValid(validatePassword(event.target.value));\n    }, timeDelayed);\n  };\n\n  const confirmPasswordHandler = event => {\n    clearTimeout(confirmPasswordTimeoutId);\n    confirmPasswordTimeoutId = setTimeout(() => {\n      setIsPasswordIdentical(confirmPassword(event.target.value));\n    }, timeDelayed);\n  };\n\n  const togglePasswordVisability = event => {\n    setIsPasswordVisble(!isPasswordVisible);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-4\",\n      controlId: \"formSignupPassword\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        visuallyHidden: true,\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: isPasswordVisible ? \"text\" : \"password\",\n        required: true,\n        placeholder: \"Password\",\n        onChange: validatePasswordHandler,\n        isInvalid: !isPasswordValid,\n        defaultValue: \"abcDEF1!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n        type: \"invalid\",\n        children: \"Use 8 or more character with a mix of lowercase and uppercase letters, numbers & symbols\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-2\",\n      controlId: \"formSignupPasswordConfirm\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        visuallyHidden: \"true\",\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: isPasswordVisible ? \"text\" : \"password\",\n        required: true,\n        placeholder: \"Confirm\",\n        isInvalid: !isPasswordIdentical,\n        onChange: confirmPasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n        type: \"invalid\",\n        children: \"Passwords are not identical\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n        className: \"text-muted\",\n        children: \"Use 8 or more character with a mix of lowercase and uppercase letters, numbers & symbols\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formSignupShowPassword\",\n      children: /*#__PURE__*/_jsxDEV(Form.Check, {\n        type: \"checkbox\",\n        label: \"Show password\",\n        onClick: togglePasswordVisability\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PasswordInput, \"FDksLvlALXxOADCrbVYeat9fCH0=\");\n\n_c = PasswordInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordInput\");","map":{"version":3,"names":["React","Form","PasswordInput","timeDelayed","canSubmit","isPasswordValid","setIsPasswordValid","useState","isPasswordIdentical","setIsPasswordIdentical","isPasswordVisible","setIsPasswordVisble","validatePasswordTimeoutId","confirmPasswordTimeoutId","validatePassword","password","regex","match","confirmPassword","document","querySelector","value","validatePasswordHandler","event","clearTimeout","setTimeout","target","confirmPasswordHandler","togglePasswordVisability"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/PasswordInput.js"],"sourcesContent":["import * as React from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nexport default function PasswordInput({ timeDelayed, canSubmit }) {\n  const [isPasswordValid, setIsPasswordValid] = React.useState(true);\n  const [isPasswordIdentical, setIsPasswordIdentical] = React.useState(true);\n  const [isPasswordVisible, setIsPasswordVisble] = React.useState(false);\n\n  let validatePasswordTimeoutId;\n  let confirmPasswordTimeoutId;\n\n  function validatePassword(password) {\n    /* A regex pattern that matches invalid passwords\n        - Anything with less than eight characters OR\n        - Anything with no numbers OR\n        - Anything with no uppercase letter OR\n        - Anything with no lowercase letter OR\n        - Anything with no special characters\n    */\n    const regex = \"^(.{0,7}|[^0-9]*|[^A-Z]*|[^a-z]*|[a-zA-Z0-9]*)$\";\n    // If there are any matches, the password is invalid\n    return password.match(regex) ? false : true;\n  }\n\n  function confirmPassword(password) {\n    return password === document.querySelector(\"#formSignupPassword\").value;\n  }\n\n  const validatePasswordHandler = (event) => {\n    clearTimeout(validatePasswordTimeoutId);\n    validatePasswordTimeoutId = setTimeout(() => {\n      setIsPasswordValid(validatePassword(event.target.value));\n    }, timeDelayed);\n  };\n\n  const confirmPasswordHandler = (event) => {\n    clearTimeout(confirmPasswordTimeoutId);\n    confirmPasswordTimeoutId = setTimeout(() => {\n      setIsPasswordIdentical(confirmPassword(event.target.value));\n    }, timeDelayed);\n  };\n\n  const togglePasswordVisability = (event) => {\n    setIsPasswordVisble(!isPasswordVisible);\n  };\n\n  return (\n    <>\n      <Form.Group className=\"mb-4\" controlId=\"formSignupPassword\">\n        <Form.Label visuallyHidden>Password</Form.Label>\n        <Form.Control\n          type={isPasswordVisible ? \"text\" : \"password\"}\n          required\n          placeholder=\"Password\"\n          onChange={validatePasswordHandler}\n          isInvalid={!isPasswordValid}\n          defaultValue=\"abcDEF1!\"\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Use 8 or more character with a mix of lowercase and uppercase letters,\n          numbers & symbols\n        </Form.Control.Feedback>\n      </Form.Group>\n\n      <Form.Group className=\"mb-2\" controlId=\"formSignupPasswordConfirm\">\n        <Form.Label visuallyHidden=\"true\">Confirm Password</Form.Label>\n        <Form.Control\n          type={isPasswordVisible ? \"text\" : \"password\"}\n          required\n          placeholder=\"Confirm\"\n          isInvalid={!isPasswordIdentical}\n          onChange={confirmPasswordHandler}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Passwords are not identical\n        </Form.Control.Feedback>\n        <Form.Text className=\"text-muted\">\n          Use 8 or more character with a mix of lowercase and uppercase letters,\n          numbers & symbols\n        </Form.Text>\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"formSignupShowPassword\">\n        <Form.Check\n          type=\"checkbox\"\n          label=\"Show password\"\n          onClick={togglePasswordVisability}\n        />\n      </Form.Group>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}