{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../../base/values');\n/* jshint ignore:line */\n\n\nvar FeedbackSummaryList;\nvar FeedbackSummaryPage;\nvar FeedbackSummaryInstance;\nvar FeedbackSummaryContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the FeedbackSummaryList\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid - The SID of the Account that created this resource\n */\n\n/* jshint ignore:end */\n\nFeedbackSummaryList = function FeedbackSummaryList(version, accountSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function feedbackSummaries\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryContext}\n   */\n\n  /* jshint ignore:end */\n  function FeedbackSummaryListInstance(sid) {\n    return FeedbackSummaryListInstance.get(sid);\n  }\n\n  FeedbackSummaryListInstance._version = version; // Path Solution\n\n  FeedbackSummaryListInstance._solution = {\n    accountSid: accountSid\n  };\n  FeedbackSummaryListInstance._uri = `/Accounts/${accountSid}/Calls/FeedbackSummary.json`;\n  /* jshint ignore:start */\n\n  /**\n   * create a FeedbackSummaryInstance\n   *\n   * @function create\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryList#\n   *\n   * @param {object} opts - Options for request\n   * @param {Date} opts.startDate - Only include feedback given on or after this date\n   * @param {Date} opts.endDate - Only include feedback given on or before this date\n   * @param {boolean} [opts.includeSubaccounts] -\n   *          `true` includes feedback from the specified account and its subaccounts\n   * @param {string} [opts.statusCallback] -\n   *          The URL that we will request when the feedback summary is complete\n   * @param {string} [opts.statusCallbackMethod] -\n   *          The HTTP method we use to make requests to the StatusCallback URL\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed FeedbackSummaryInstance\n   */\n\n  /* jshint ignore:end */\n\n  FeedbackSummaryListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n\n    if (_.isUndefined(opts['startDate'])) {\n      throw new Error('Required parameter \"opts[\\'startDate\\']\" missing.');\n    }\n\n    if (_.isUndefined(opts['endDate'])) {\n      throw new Error('Required parameter \"opts[\\'endDate\\']\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'StartDate': serialize.iso8601Date(_.get(opts, 'startDate')),\n      'EndDate': serialize.iso8601Date(_.get(opts, 'endDate')),\n      'IncludeSubaccounts': serialize.bool(_.get(opts, 'includeSubaccounts')),\n      'StatusCallback': _.get(opts, 'statusCallback'),\n      'StatusCallbackMethod': _.get(opts, 'statusCallbackMethod')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new FeedbackSummaryInstance(this._version, payload, this._solution.accountSid, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a feedback_summary\n   *\n   * @function get\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryList#\n   *\n   * @param {string} sid -\n   *          A string that uniquely identifies this feedback summary resource\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  FeedbackSummaryListInstance.get = function get(sid) {\n    return new FeedbackSummaryContext(this._version, this._solution.accountSid, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  FeedbackSummaryListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  FeedbackSummaryListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return FeedbackSummaryListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the FeedbackSummaryPage\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {FeedbackSummarySolution} solution - Path solution\n *\n * @returns FeedbackSummaryPage\n */\n\n/* jshint ignore:end */\n\n\nFeedbackSummaryPage = function FeedbackSummaryPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(FeedbackSummaryPage.prototype, Page.prototype);\n\nFeedbackSummaryPage.prototype.constructor = FeedbackSummaryPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of FeedbackSummaryInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryPage#\n *\n * @param {FeedbackSummaryPayload} payload - Payload response from the API\n *\n * @returns FeedbackSummaryInstance\n */\n\n/* jshint ignore:end */\n\nFeedbackSummaryPage.prototype.getInstance = function getInstance(payload) {\n  return new FeedbackSummaryInstance(this._version, payload, this._solution.accountSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nFeedbackSummaryPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nFeedbackSummaryPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the FeedbackSummaryContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryInstance\n *\n * @property {string} accountSid - The unique sid that identifies this account\n * @property {number} callCount - The total number of calls\n * @property {number} callFeedbackCount -\n *          The total number of calls with a feedback entry\n * @property {Date} dateCreated - The date this resource was created\n * @property {Date} dateUpdated - The date this resource was last updated\n * @property {Date} endDate - The latest feedback entry date in the summary\n * @property {boolean} includeSubaccounts -\n *          Whether the feedback summary includes subaccounts\n * @property {object} issues - Issues experienced during the call\n * @property {number} qualityScoreAverage -\n *          The average QualityScore of the feedback entries\n * @property {number} qualityScoreMedian -\n *          The median QualityScore of the feedback entries\n * @property {number} qualityScoreStandardDeviation -\n *          The standard deviation of the quality scores\n * @property {string} sid - A string that uniquely identifies this feedback entry\n * @property {Date} startDate - The earliest feedback entry date in the summary\n * @property {feedback_summary.status} status - The status of the feedback summary\n *\n * @param {V2010} version - Version of the resource\n * @param {FeedbackSummaryPayload} payload - The instance payload\n * @param {sid} accountSid - The SID of the Account that created this resource\n * @param {sid} sid -\n *          A string that uniquely identifies this feedback summary resource\n */\n\n/* jshint ignore:end */\n\n\nFeedbackSummaryInstance = function FeedbackSummaryInstance(version, payload, accountSid, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.callCount = deserialize.integer(payload.call_count); // jshint ignore:line\n\n  this.callFeedbackCount = deserialize.integer(payload.call_feedback_count); // jshint ignore:line\n\n  this.dateCreated = deserialize.rfc2822DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated); // jshint ignore:line\n\n  this.endDate = deserialize.iso8601Date(payload.end_date); // jshint ignore:line\n\n  this.includeSubaccounts = payload.include_subaccounts; // jshint ignore:line\n\n  this.issues = payload.issues; // jshint ignore:line\n\n  this.qualityScoreAverage = deserialize.decimal(payload.quality_score_average); // jshint ignore:line\n\n  this.qualityScoreMedian = deserialize.decimal(payload.quality_score_median); // jshint ignore:line\n\n  this.qualityScoreStandardDeviation = deserialize.decimal(payload.quality_score_standard_deviation); // jshint ignore:line\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.startDate = deserialize.iso8601Date(payload.start_date); // jshint ignore:line\n\n  this.status = payload.status; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    accountSid: accountSid,\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(FeedbackSummaryInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new FeedbackSummaryContext(this._version, this._solution.accountSid, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a FeedbackSummaryInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackSummaryInstance\n */\n\n/* jshint ignore:end */\n\nFeedbackSummaryInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * remove a FeedbackSummaryInstance\n *\n * @function remove\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackSummaryInstance\n */\n\n/* jshint ignore:end */\n\n\nFeedbackSummaryInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nFeedbackSummaryInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nFeedbackSummaryInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the FeedbackSummaryContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryContext\n *\n * @param {V2010} version - Version of the resource\n * @param {sid} accountSid - The unique sid that identifies this account\n * @param {sid} sid -\n *          A string that uniquely identifies this feedback summary resource\n */\n\n/* jshint ignore:end */\n\n\nFeedbackSummaryContext = function FeedbackSummaryContext(version, accountSid, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    accountSid: accountSid,\n    sid: sid\n  };\n  this._uri = `/Accounts/${accountSid}/Calls/FeedbackSummary/${sid}.json`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a FeedbackSummaryInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackSummaryInstance\n */\n\n/* jshint ignore:end */\n\n\nFeedbackSummaryContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new FeedbackSummaryInstance(this._version, payload, this._solution.accountSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * remove a FeedbackSummaryInstance\n *\n * @function remove\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackSummaryInstance\n */\n\n/* jshint ignore:end */\n\n\nFeedbackSummaryContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nFeedbackSummaryContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nFeedbackSummaryContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  FeedbackSummaryList: FeedbackSummaryList,\n  FeedbackSummaryPage: FeedbackSummaryPage,\n  FeedbackSummaryInstance: FeedbackSummaryInstance,\n  FeedbackSummaryContext: FeedbackSummaryContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","deserialize","serialize","values","FeedbackSummaryList","FeedbackSummaryPage","FeedbackSummaryInstance","FeedbackSummaryContext","version","accountSid","FeedbackSummaryListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isUndefined","Error","deferred","defer","data","of","iso8601Date","bool","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","account_sid","callCount","integer","call_count","callFeedbackCount","call_feedback_count","dateCreated","rfc2822DateTime","date_created","dateUpdated","date_updated","endDate","end_date","includeSubaccounts","include_subaccounts","issues","qualityScoreAverage","decimal","quality_score_average","qualityScoreMedian","quality_score_median","qualityScoreStandardDeviation","quality_score_standard_deviation","startDate","start_date","status","_context","undefined","Object","defineProperty","fetch","_proxy","remove","module","exports"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/twilio/lib/rest/api/v2010/account/call/feedbackSummary.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require(\n    '../../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar FeedbackSummaryList;\nvar FeedbackSummaryPage;\nvar FeedbackSummaryInstance;\nvar FeedbackSummaryContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the FeedbackSummaryList\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid - The SID of the Account that created this resource\n */\n/* jshint ignore:end */\nFeedbackSummaryList = function FeedbackSummaryList(version, accountSid) {\n  /* jshint ignore:start */\n  /**\n   * @function feedbackSummaries\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryContext}\n   */\n  /* jshint ignore:end */\n  function FeedbackSummaryListInstance(sid) {\n    return FeedbackSummaryListInstance.get(sid);\n  }\n\n  FeedbackSummaryListInstance._version = version;\n  // Path Solution\n  FeedbackSummaryListInstance._solution = {accountSid: accountSid};\n  FeedbackSummaryListInstance._uri = `/Accounts/${accountSid}/Calls/FeedbackSummary.json`;\n  /* jshint ignore:start */\n  /**\n   * create a FeedbackSummaryInstance\n   *\n   * @function create\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryList#\n   *\n   * @param {object} opts - Options for request\n   * @param {Date} opts.startDate - Only include feedback given on or after this date\n   * @param {Date} opts.endDate - Only include feedback given on or before this date\n   * @param {boolean} [opts.includeSubaccounts] -\n   *          `true` includes feedback from the specified account and its subaccounts\n   * @param {string} [opts.statusCallback] -\n   *          The URL that we will request when the feedback summary is complete\n   * @param {string} [opts.statusCallbackMethod] -\n   *          The HTTP method we use to make requests to the StatusCallback URL\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed FeedbackSummaryInstance\n   */\n  /* jshint ignore:end */\n  FeedbackSummaryListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts['startDate'])) {\n      throw new Error('Required parameter \"opts[\\'startDate\\']\" missing.');\n    }\n    if (_.isUndefined(opts['endDate'])) {\n      throw new Error('Required parameter \"opts[\\'endDate\\']\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'StartDate': serialize.iso8601Date(_.get(opts, 'startDate')),\n      'EndDate': serialize.iso8601Date(_.get(opts, 'endDate')),\n      'IncludeSubaccounts': serialize.bool(_.get(opts, 'includeSubaccounts')),\n      'StatusCallback': _.get(opts, 'statusCallback'),\n      'StatusCallbackMethod': _.get(opts, 'statusCallbackMethod')\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new FeedbackSummaryInstance(\n        this._version,\n        payload,\n        this._solution.accountSid,\n        this._solution.sid\n      ));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a feedback_summary\n   *\n   * @function get\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryList#\n   *\n   * @param {string} sid -\n   *          A string that uniquely identifies this feedback summary resource\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryContext}\n   */\n  /* jshint ignore:end */\n  FeedbackSummaryListInstance.get = function get(sid) {\n    return new FeedbackSummaryContext(this._version, this._solution.accountSid, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  FeedbackSummaryListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  FeedbackSummaryListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return FeedbackSummaryListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the FeedbackSummaryPage\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {FeedbackSummarySolution} solution - Path solution\n *\n * @returns FeedbackSummaryPage\n */\n/* jshint ignore:end */\nFeedbackSummaryPage = function FeedbackSummaryPage(version, response, solution)\n                                                    {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(FeedbackSummaryPage.prototype, Page.prototype);\nFeedbackSummaryPage.prototype.constructor = FeedbackSummaryPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of FeedbackSummaryInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryPage#\n *\n * @param {FeedbackSummaryPayload} payload - Payload response from the API\n *\n * @returns FeedbackSummaryInstance\n */\n/* jshint ignore:end */\nFeedbackSummaryPage.prototype.getInstance = function getInstance(payload) {\n  return new FeedbackSummaryInstance(this._version, payload, this._solution.accountSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFeedbackSummaryPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nFeedbackSummaryPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the FeedbackSummaryContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryInstance\n *\n * @property {string} accountSid - The unique sid that identifies this account\n * @property {number} callCount - The total number of calls\n * @property {number} callFeedbackCount -\n *          The total number of calls with a feedback entry\n * @property {Date} dateCreated - The date this resource was created\n * @property {Date} dateUpdated - The date this resource was last updated\n * @property {Date} endDate - The latest feedback entry date in the summary\n * @property {boolean} includeSubaccounts -\n *          Whether the feedback summary includes subaccounts\n * @property {object} issues - Issues experienced during the call\n * @property {number} qualityScoreAverage -\n *          The average QualityScore of the feedback entries\n * @property {number} qualityScoreMedian -\n *          The median QualityScore of the feedback entries\n * @property {number} qualityScoreStandardDeviation -\n *          The standard deviation of the quality scores\n * @property {string} sid - A string that uniquely identifies this feedback entry\n * @property {Date} startDate - The earliest feedback entry date in the summary\n * @property {feedback_summary.status} status - The status of the feedback summary\n *\n * @param {V2010} version - Version of the resource\n * @param {FeedbackSummaryPayload} payload - The instance payload\n * @param {sid} accountSid - The SID of the Account that created this resource\n * @param {sid} sid -\n *          A string that uniquely identifies this feedback summary resource\n */\n/* jshint ignore:end */\nFeedbackSummaryInstance = function FeedbackSummaryInstance(version, payload,\n                                                            accountSid, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.callCount = deserialize.integer(payload.call_count); // jshint ignore:line\n  this.callFeedbackCount = deserialize.integer(payload.call_feedback_count); // jshint ignore:line\n  this.dateCreated = deserialize.rfc2822DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated); // jshint ignore:line\n  this.endDate = deserialize.iso8601Date(payload.end_date); // jshint ignore:line\n  this.includeSubaccounts = payload.include_subaccounts; // jshint ignore:line\n  this.issues = payload.issues; // jshint ignore:line\n  this.qualityScoreAverage = deserialize.decimal(payload.quality_score_average); // jshint ignore:line\n  this.qualityScoreMedian = deserialize.decimal(payload.quality_score_median); // jshint ignore:line\n  this.qualityScoreStandardDeviation = deserialize.decimal(payload.quality_score_standard_deviation); // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n  this.startDate = deserialize.iso8601Date(payload.start_date); // jshint ignore:line\n  this.status = payload.status; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {accountSid: accountSid, sid: sid || this.sid, };\n};\n\nObject.defineProperty(FeedbackSummaryInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new FeedbackSummaryContext(\n          this._version,\n          this._solution.accountSid,\n          this._solution.sid\n        );\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a FeedbackSummaryInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackSummaryInstance\n */\n/* jshint ignore:end */\nFeedbackSummaryInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a FeedbackSummaryInstance\n *\n * @function remove\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackSummaryInstance\n */\n/* jshint ignore:end */\nFeedbackSummaryInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFeedbackSummaryInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nFeedbackSummaryInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the FeedbackSummaryContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryContext\n *\n * @param {V2010} version - Version of the resource\n * @param {sid} accountSid - The unique sid that identifies this account\n * @param {sid} sid -\n *          A string that uniquely identifies this feedback summary resource\n */\n/* jshint ignore:end */\nFeedbackSummaryContext = function FeedbackSummaryContext(version, accountSid,\n                                                          sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {accountSid: accountSid, sid: sid, };\n  this._uri = `/Accounts/${accountSid}/Calls/FeedbackSummary/${sid}.json`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a FeedbackSummaryInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackSummaryInstance\n */\n/* jshint ignore:end */\nFeedbackSummaryContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new FeedbackSummaryInstance(\n      this._version,\n      payload,\n      this._solution.accountSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a FeedbackSummaryInstance\n *\n * @function remove\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackSummaryInstance\n */\n/* jshint ignore:end */\nFeedbackSummaryContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackSummaryContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFeedbackSummaryContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nFeedbackSummaryContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  FeedbackSummaryList: FeedbackSummaryList,\n  FeedbackSummaryPage: FeedbackSummaryPage,\n  FeedbackSummaryInstance: FeedbackSummaryInstance,\n  FeedbackSummaryContext: FeedbackSummaryContext\n};\n"],"mappings":"AAAA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AAEA,IAAIA,CAAC,GAAGC,OAAO,CAAC,GAAD,CAAf;AAAuB;;;AACvB,IAAIC,CAAC,GAAGD,OAAO,CAAC,QAAD,CAAf;AAA4B;;;AAC5B,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAAlB;AAA6B;;;AAC7B,IAAIG,IAAI,GAAGH,OAAO,CAAC,0BAAD,CAAlB;AAAiD;;;AACjD,IAAII,WAAW,GAAGJ,OAAO,CACrB,iCADqB,CAAzB;AACyC;;;AACzC,IAAIK,SAAS,GAAGL,OAAO,CACnB,+BADmB,CAAvB;AACuC;;;AACvC,IAAIM,MAAM,GAAGN,OAAO,CAAC,4BAAD,CAApB;AAAqD;;;AAErD,IAAIO,mBAAJ;AACA,IAAIC,mBAAJ;AACA,IAAIC,uBAAJ;AACA,IAAIC,sBAAJ;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACAH,mBAAmB,GAAG,SAASA,mBAAT,CAA6BI,OAA7B,EAAsCC,UAAtC,EAAkD;EACtE;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EACE;EACA,SAASC,2BAAT,CAAqCC,GAArC,EAA0C;IACxC,OAAOD,2BAA2B,CAACE,GAA5B,CAAgCD,GAAhC,CAAP;EACD;;EAEDD,2BAA2B,CAACG,QAA5B,GAAuCL,OAAvC,CAfsE,CAgBtE;;EACAE,2BAA2B,CAACI,SAA5B,GAAwC;IAACL,UAAU,EAAEA;EAAb,CAAxC;EACAC,2BAA2B,CAACK,IAA5B,GAAoC,aAAYN,UAAW,6BAA3D;EACA;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE;;EACAC,2BAA2B,CAACM,MAA5B,GAAqC,SAASA,MAAT,CAAgBC,IAAhB,EAAsBC,QAAtB,EAAgC;IACnE,IAAIpB,CAAC,CAACqB,WAAF,CAAcF,IAAd,CAAJ,EAAyB;MACvB,MAAM,IAAIG,KAAJ,CAAU,oCAAV,CAAN;IACD;;IACD,IAAItB,CAAC,CAACqB,WAAF,CAAcF,IAAI,CAAC,WAAD,CAAlB,CAAJ,EAAsC;MACpC,MAAM,IAAIG,KAAJ,CAAU,mDAAV,CAAN;IACD;;IACD,IAAItB,CAAC,CAACqB,WAAF,CAAcF,IAAI,CAAC,SAAD,CAAlB,CAAJ,EAAoC;MAClC,MAAM,IAAIG,KAAJ,CAAU,iDAAV,CAAN;IACD;;IAED,IAAIC,QAAQ,GAAGzB,CAAC,CAAC0B,KAAF,EAAf;IACA,IAAIC,IAAI,GAAGpB,MAAM,CAACqB,EAAP,CAAU;MACnB,aAAatB,SAAS,CAACuB,WAAV,CAAsB3B,CAAC,CAACc,GAAF,CAAMK,IAAN,EAAY,WAAZ,CAAtB,CADM;MAEnB,WAAWf,SAAS,CAACuB,WAAV,CAAsB3B,CAAC,CAACc,GAAF,CAAMK,IAAN,EAAY,SAAZ,CAAtB,CAFQ;MAGnB,sBAAsBf,SAAS,CAACwB,IAAV,CAAe5B,CAAC,CAACc,GAAF,CAAMK,IAAN,EAAY,oBAAZ,CAAf,CAHH;MAInB,kBAAkBnB,CAAC,CAACc,GAAF,CAAMK,IAAN,EAAY,gBAAZ,CAJC;MAKnB,wBAAwBnB,CAAC,CAACc,GAAF,CAAMK,IAAN,EAAY,sBAAZ;IALL,CAAV,CAAX;;IAQA,IAAIU,OAAO,GAAG,KAAKd,QAAL,CAAcG,MAAd,CAAqB;MAACY,GAAG,EAAE,KAAKb,IAAX;MAAiBc,MAAM,EAAE,MAAzB;MAAiCN,IAAI,EAAEA;IAAvC,CAArB,CAAd;;IAEAI,OAAO,GAAGA,OAAO,CAACG,IAAR,CAAa,UAASC,OAAT,EAAkB;MACvCV,QAAQ,CAACW,OAAT,CAAiB,IAAI1B,uBAAJ,CACf,KAAKO,QADU,EAEfkB,OAFe,EAGf,KAAKjB,SAAL,CAAeL,UAHA,EAIf,KAAKK,SAAL,CAAeH,GAJA,CAAjB;IAMD,CAPsB,CAOrBsB,IAPqB,CAOhB,IAPgB,CAAb,CAAV;IASAN,OAAO,CAACO,KAAR,CAAc,UAASC,KAAT,EAAgB;MAC5Bd,QAAQ,CAACe,MAAT,CAAgBD,KAAhB;IACD,CAFD;;IAIA,IAAIrC,CAAC,CAACuC,UAAF,CAAanB,QAAb,CAAJ,EAA4B;MAC1BG,QAAQ,CAACM,OAAT,CAAiBW,OAAjB,CAAyBpB,QAAzB;IACD;;IAED,OAAOG,QAAQ,CAACM,OAAhB;EACD,CAxCD;EA0CA;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE;;;EACAjB,2BAA2B,CAACE,GAA5B,GAAkC,SAASA,GAAT,CAAaD,GAAb,EAAkB;IAClD,OAAO,IAAIJ,sBAAJ,CAA2B,KAAKM,QAAhC,EAA0C,KAAKC,SAAL,CAAeL,UAAzD,EAAqEE,GAArE,CAAP;EACD,CAFD;EAIA;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EACE;;;EACAD,2BAA2B,CAAC6B,MAA5B,GAAqC,SAASA,MAAT,GAAkB;IACrD,OAAO,KAAKzB,SAAZ;EACD,CAFD;;EAIAJ,2BAA2B,CAACX,IAAI,CAACyC,OAAL,CAAaC,MAAd,CAA3B,GAAmD,SAASD,OAAT,CAAiBE,KAAjB,EAC/CC,OAD+C,EACtC;IACX,OAAO5C,IAAI,CAACyC,OAAL,CAAa,KAAKD,MAAL,EAAb,EAA4BI,OAA5B,CAAP;EACD,CAHD;;EAKA,OAAOjC,2BAAP;AACD,CAvHD;AA0HA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAL,mBAAmB,GAAG,SAASA,mBAAT,CAA6BG,OAA7B,EAAsCoC,QAAtC,EAAgDC,QAAhD,EAC8B;EAClD;EACA,KAAK/B,SAAL,GAAiB+B,QAAjB;EAEA7C,IAAI,CAAC8C,SAAL,CAAeC,WAAf,CAA2BC,IAA3B,CAAgC,IAAhC,EAAsCxC,OAAtC,EAA+CoC,QAA/C,EAAyD,KAAK9B,SAA9D;AACD,CAND;;AAQAhB,CAAC,CAACmD,MAAF,CAAS5C,mBAAmB,CAACyC,SAA7B,EAAwC9C,IAAI,CAAC8C,SAA7C;;AACAzC,mBAAmB,CAACyC,SAApB,CAA8BC,WAA9B,GAA4C1C,mBAA5C;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACAA,mBAAmB,CAACyC,SAApB,CAA8BI,WAA9B,GAA4C,SAASA,WAAT,CAAqBnB,OAArB,EAA8B;EACxE,OAAO,IAAIzB,uBAAJ,CAA4B,KAAKO,QAAjC,EAA2CkB,OAA3C,EAAoD,KAAKjB,SAAL,CAAeL,UAAnE,CAAP;AACD,CAFD;AAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAJ,mBAAmB,CAACyC,SAApB,CAA8BP,MAA9B,GAAuC,SAASA,MAAT,GAAkB;EACvD,IAAIY,KAAK,GAAG,EAAZ;;EACArD,CAAC,CAACsD,MAAF,CAAS,IAAT,EAAe,UAASC,KAAT,EAAgBC,GAAhB,EAAqB;IAClC,IAAI,CAACxD,CAAC,CAACyD,UAAF,CAAaD,GAAb,EAAkB,GAAlB,CAAD,IAA2B,CAAExD,CAAC,CAACuC,UAAF,CAAagB,KAAb,CAAjC,EAAsD;MACpDF,KAAK,CAACG,GAAD,CAAL,GAAaD,KAAb;IACD;EACF,CAJD;;EAKA,OAAOF,KAAP;AACD,CARD;;AAUA9C,mBAAmB,CAACyC,SAApB,CAA8B/C,IAAI,CAACyC,OAAL,CAAaC,MAA3C,IAAqD,SAASD,OAAT,CAAiBE,KAAjB,EACjDC,OADiD,EACxC;EACX,OAAO5C,IAAI,CAACyC,OAAL,CAAa,KAAKD,MAAL,EAAb,EAA4BI,OAA5B,CAAP;AACD,CAHD;AAMA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACArC,uBAAuB,GAAG,SAASA,uBAAT,CAAiCE,OAAjC,EAA0CuB,OAA1C,EACkCtB,UADlC,EAC8CE,GAD9C,EACmD;EAC3E,KAAKE,QAAL,GAAgBL,OAAhB,CAD2E,CAG3E;;EACA,KAAKC,UAAL,GAAkBsB,OAAO,CAACyB,WAA1B,CAJ2E,CAIpC;;EACvC,KAAKC,SAAL,GAAiBxD,WAAW,CAACyD,OAAZ,CAAoB3B,OAAO,CAAC4B,UAA5B,CAAjB,CAL2E,CAKjB;;EAC1D,KAAKC,iBAAL,GAAyB3D,WAAW,CAACyD,OAAZ,CAAoB3B,OAAO,CAAC8B,mBAA5B,CAAzB,CAN2E,CAMA;;EAC3E,KAAKC,WAAL,GAAmB7D,WAAW,CAAC8D,eAAZ,CAA4BhC,OAAO,CAACiC,YAApC,CAAnB,CAP2E,CAOL;;EACtE,KAAKC,WAAL,GAAmBhE,WAAW,CAAC8D,eAAZ,CAA4BhC,OAAO,CAACmC,YAApC,CAAnB,CAR2E,CAQL;;EACtE,KAAKC,OAAL,GAAelE,WAAW,CAACwB,WAAZ,CAAwBM,OAAO,CAACqC,QAAhC,CAAf,CAT2E,CASjB;;EAC1D,KAAKC,kBAAL,GAA0BtC,OAAO,CAACuC,mBAAlC,CAV2E,CAUpB;;EACvD,KAAKC,MAAL,GAAcxC,OAAO,CAACwC,MAAtB,CAX2E,CAW7C;;EAC9B,KAAKC,mBAAL,GAA2BvE,WAAW,CAACwE,OAAZ,CAAoB1C,OAAO,CAAC2C,qBAA5B,CAA3B,CAZ2E,CAYI;;EAC/E,KAAKC,kBAAL,GAA0B1E,WAAW,CAACwE,OAAZ,CAAoB1C,OAAO,CAAC6C,oBAA5B,CAA1B,CAb2E,CAaE;;EAC7E,KAAKC,6BAAL,GAAqC5E,WAAW,CAACwE,OAAZ,CAAoB1C,OAAO,CAAC+C,gCAA5B,CAArC,CAd2E,CAcyB;;EACpG,KAAKnE,GAAL,GAAWoB,OAAO,CAACpB,GAAnB,CAf2E,CAenD;;EACxB,KAAKoE,SAAL,GAAiB9E,WAAW,CAACwB,WAAZ,CAAwBM,OAAO,CAACiD,UAAhC,CAAjB,CAhB2E,CAgBb;;EAC9D,KAAKC,MAAL,GAAclD,OAAO,CAACkD,MAAtB,CAjB2E,CAiB7C;EAE9B;;EACA,KAAKC,QAAL,GAAgBC,SAAhB;EACA,KAAKrE,SAAL,GAAiB;IAACL,UAAU,EAAEA,UAAb;IAAyBE,GAAG,EAAEA,GAAG,IAAI,KAAKA;EAA1C,CAAjB;AACD,CAvBD;;AAyBAyE,MAAM,CAACC,cAAP,CAAsB/E,uBAAuB,CAACwC,SAA9C,EACE,QADF,EACY;EACRlC,GAAG,EAAE,YAAW;IACd,IAAI,CAAC,KAAKsE,QAAV,EAAoB;MAClB,KAAKA,QAAL,GAAgB,IAAI3E,sBAAJ,CACd,KAAKM,QADS,EAEd,KAAKC,SAAL,CAAeL,UAFD,EAGd,KAAKK,SAAL,CAAeH,GAHD,CAAhB;IAKD;;IAED,OAAO,KAAKuE,QAAZ;EACD;AAXO,CADZ;AAeA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA5E,uBAAuB,CAACwC,SAAxB,CAAkCwC,KAAlC,GAA0C,SAASA,KAAT,CAAepE,QAAf,EAAyB;EACjE,OAAO,KAAKqE,MAAL,CAAYD,KAAZ,CAAkBpE,QAAlB,CAAP;AACD,CAFD;AAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAZ,uBAAuB,CAACwC,SAAxB,CAAkC0C,MAAlC,GAA2C,SAASA,MAAT,CAAgBtE,QAAhB,EAA0B;EACnE,OAAO,KAAKqE,MAAL,CAAYC,MAAZ,CAAmBtE,QAAnB,CAAP;AACD,CAFD;AAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAZ,uBAAuB,CAACwC,SAAxB,CAAkCP,MAAlC,GAA2C,SAASA,MAAT,GAAkB;EAC3D,IAAIY,KAAK,GAAG,EAAZ;;EACArD,CAAC,CAACsD,MAAF,CAAS,IAAT,EAAe,UAASC,KAAT,EAAgBC,GAAhB,EAAqB;IAClC,IAAI,CAACxD,CAAC,CAACyD,UAAF,CAAaD,GAAb,EAAkB,GAAlB,CAAD,IAA2B,CAAExD,CAAC,CAACuC,UAAF,CAAagB,KAAb,CAAjC,EAAsD;MACpDF,KAAK,CAACG,GAAD,CAAL,GAAaD,KAAb;IACD;EACF,CAJD;;EAKA,OAAOF,KAAP;AACD,CARD;;AAUA7C,uBAAuB,CAACwC,SAAxB,CAAkC/C,IAAI,CAACyC,OAAL,CAAaC,MAA/C,IAAyD,SAASD,OAAT,CAAiBE,KAAjB,EACrDC,OADqD,EAC5C;EACX,OAAO5C,IAAI,CAACyC,OAAL,CAAa,KAAKD,MAAL,EAAb,EAA4BI,OAA5B,CAAP;AACD,CAHD;AAMA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACApC,sBAAsB,GAAG,SAASA,sBAAT,CAAgCC,OAAhC,EAAyCC,UAAzC,EACiCE,GADjC,EACsC;EAC7D,KAAKE,QAAL,GAAgBL,OAAhB,CAD6D,CAG7D;;EACA,KAAKM,SAAL,GAAiB;IAACL,UAAU,EAAEA,UAAb;IAAyBE,GAAG,EAAEA;EAA9B,CAAjB;EACA,KAAKI,IAAL,GAAa,aAAYN,UAAW,0BAAyBE,GAAI,OAAjE;AACD,CAPD;AASA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAJ,sBAAsB,CAACuC,SAAvB,CAAiCwC,KAAjC,GAAyC,SAASA,KAAT,CAAepE,QAAf,EAAyB;EAChE,IAAIG,QAAQ,GAAGzB,CAAC,CAAC0B,KAAF,EAAf;;EACA,IAAIK,OAAO,GAAG,KAAKd,QAAL,CAAcyE,KAAd,CAAoB;IAAC1D,GAAG,EAAE,KAAKb,IAAX;IAAiBc,MAAM,EAAE;EAAzB,CAApB,CAAd;;EAEAF,OAAO,GAAGA,OAAO,CAACG,IAAR,CAAa,UAASC,OAAT,EAAkB;IACvCV,QAAQ,CAACW,OAAT,CAAiB,IAAI1B,uBAAJ,CACf,KAAKO,QADU,EAEfkB,OAFe,EAGf,KAAKjB,SAAL,CAAeL,UAHA,EAIf,KAAKK,SAAL,CAAeH,GAJA,CAAjB;EAMD,CAPsB,CAOrBsB,IAPqB,CAOhB,IAPgB,CAAb,CAAV;EASAN,OAAO,CAACO,KAAR,CAAc,UAASC,KAAT,EAAgB;IAC5Bd,QAAQ,CAACe,MAAT,CAAgBD,KAAhB;EACD,CAFD;;EAIA,IAAIrC,CAAC,CAACuC,UAAF,CAAanB,QAAb,CAAJ,EAA4B;IAC1BG,QAAQ,CAACM,OAAT,CAAiBW,OAAjB,CAAyBpB,QAAzB;EACD;;EAED,OAAOG,QAAQ,CAACM,OAAhB;AACD,CAtBD;AAwBA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACApB,sBAAsB,CAACuC,SAAvB,CAAiC0C,MAAjC,GAA0C,SAASA,MAAT,CAAgBtE,QAAhB,EAA0B;EAClE,IAAIG,QAAQ,GAAGzB,CAAC,CAAC0B,KAAF,EAAf;;EACA,IAAIK,OAAO,GAAG,KAAKd,QAAL,CAAc2E,MAAd,CAAqB;IAAC5D,GAAG,EAAE,KAAKb,IAAX;IAAiBc,MAAM,EAAE;EAAzB,CAArB,CAAd;;EAEAF,OAAO,GAAGA,OAAO,CAACG,IAAR,CAAa,UAASC,OAAT,EAAkB;IACvCV,QAAQ,CAACW,OAAT,CAAiBD,OAAjB;EACD,CAFsB,CAErBE,IAFqB,CAEhB,IAFgB,CAAb,CAAV;EAIAN,OAAO,CAACO,KAAR,CAAc,UAASC,KAAT,EAAgB;IAC5Bd,QAAQ,CAACe,MAAT,CAAgBD,KAAhB;EACD,CAFD;;EAIA,IAAIrC,CAAC,CAACuC,UAAF,CAAanB,QAAb,CAAJ,EAA4B;IAC1BG,QAAQ,CAACM,OAAT,CAAiBW,OAAjB,CAAyBpB,QAAzB;EACD;;EAED,OAAOG,QAAQ,CAACM,OAAhB;AACD,CAjBD;AAmBA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACApB,sBAAsB,CAACuC,SAAvB,CAAiCP,MAAjC,GAA0C,SAASA,MAAT,GAAkB;EAC1D,OAAO,KAAKzB,SAAZ;AACD,CAFD;;AAIAP,sBAAsB,CAACuC,SAAvB,CAAiC/C,IAAI,CAACyC,OAAL,CAAaC,MAA9C,IAAwD,SAASD,OAAT,CAAiBE,KAAjB,EACpDC,OADoD,EAC3C;EACX,OAAO5C,IAAI,CAACyC,OAAL,CAAa,KAAKD,MAAL,EAAb,EAA4BI,OAA5B,CAAP;AACD,CAHD;;AAKA8C,MAAM,CAACC,OAAP,GAAiB;EACftF,mBAAmB,EAAEA,mBADN;EAEfC,mBAAmB,EAAEA,mBAFN;EAGfC,uBAAuB,EAAEA,uBAHV;EAIfC,sBAAsB,EAAEA;AAJT,CAAjB"},"metadata":{},"sourceType":"script"}