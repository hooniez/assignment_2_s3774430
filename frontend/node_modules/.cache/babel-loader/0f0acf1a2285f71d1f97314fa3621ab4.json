{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar BucketList = require('./rateLimit/bucket').BucketList;\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar RateLimitList;\nvar RateLimitPage;\nvar RateLimitInstance;\nvar RateLimitContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the RateLimitList\n *\n * @constructor Twilio.Verify.V2.ServiceContext.RateLimitList\n *\n * @param {Twilio.Verify.V2} version - Version of the resource\n * @param {string} serviceSid -\n *          The SID of the Service that the resource is associated with\n */\n\n/* jshint ignore:end */\n\nRateLimitList = function RateLimitList(version, serviceSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function rateLimits\n   * @memberof Twilio.Verify.V2.ServiceContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Verify.V2.ServiceContext.RateLimitContext}\n   */\n\n  /* jshint ignore:end */\n  function RateLimitListInstance(sid) {\n    return RateLimitListInstance.get(sid);\n  }\n\n  RateLimitListInstance._version = version; // Path Solution\n\n  RateLimitListInstance._solution = {\n    serviceSid: serviceSid\n  };\n  RateLimitListInstance._uri = `/Services/${serviceSid}/RateLimits`;\n  /* jshint ignore:start */\n\n  /**\n   * create a RateLimitInstance\n   *\n   * @function create\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.uniqueName -\n   *          A unique, developer assigned name of this Rate Limit.\n   * @param {string} [opts.description] - Description of this Rate Limit\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed RateLimitInstance\n   */\n\n  /* jshint ignore:end */\n\n  RateLimitListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n\n    if (_.isUndefined(opts['uniqueName'])) {\n      throw new Error('Required parameter \"opts[\\'uniqueName\\']\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'UniqueName': _.get(opts, 'uniqueName'),\n      'Description': _.get(opts, 'description')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new RateLimitInstance(this._version, payload, this._solution.serviceSid, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Streams RateLimitInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n\n  RateLimitListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists RateLimitInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  RateLimitListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of RateLimitInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  RateLimitListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new RateLimitPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of RateLimitInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  RateLimitListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new RateLimitPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a rate_limit\n   *\n   * @function get\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitList#\n   *\n   * @param {string} sid - The unique string that identifies the resource\n   *\n   * @returns {Twilio.Verify.V2.ServiceContext.RateLimitContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  RateLimitListInstance.get = function get(sid) {\n    return new RateLimitContext(this._version, this._solution.serviceSid, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  RateLimitListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  RateLimitListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return RateLimitListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the RateLimitPage\n *\n * @constructor Twilio.Verify.V2.ServiceContext.RateLimitPage\n *\n * @param {V2} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {RateLimitSolution} solution - Path solution\n *\n * @returns RateLimitPage\n */\n\n/* jshint ignore:end */\n\n\nRateLimitPage = function RateLimitPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(RateLimitPage.prototype, Page.prototype);\n\nRateLimitPage.prototype.constructor = RateLimitPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of RateLimitInstance\n *\n * @function getInstance\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitPage#\n *\n * @param {RateLimitPayload} payload - Payload response from the API\n *\n * @returns RateLimitInstance\n */\n\n/* jshint ignore:end */\n\nRateLimitPage.prototype.getInstance = function getInstance(payload) {\n  return new RateLimitInstance(this._version, payload, this._solution.serviceSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nRateLimitPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nRateLimitPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the RateLimitContext\n *\n * @constructor Twilio.Verify.V2.ServiceContext.RateLimitInstance\n *\n * @property {string} sid - A string that uniquely identifies this Rate Limit.\n * @property {string} serviceSid -\n *          The SID of the Service that the resource is associated with\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} uniqueName -\n *          A unique, developer assigned name of this Rate Limit.\n * @property {string} description - Description of this Rate Limit\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT when the resource was last updated\n * @property {string} url - The URL of this resource.\n * @property {string} links - The URLs of related resources\n *\n * @param {V2} version - Version of the resource\n * @param {RateLimitPayload} payload - The instance payload\n * @param {sid} serviceSid -\n *          The SID of the Service that the resource is associated with\n * @param {sid} sid - The unique string that identifies the resource\n */\n\n/* jshint ignore:end */\n\n\nRateLimitInstance = function RateLimitInstance(version, payload, serviceSid, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.uniqueName = payload.unique_name; // jshint ignore:line\n\n  this.description = payload.description; // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n\n  this.links = payload.links; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    serviceSid: serviceSid,\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(RateLimitInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new RateLimitContext(this._version, this._solution.serviceSid, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * update a RateLimitInstance\n *\n * @function update\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.description] - Description of this Rate Limit\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RateLimitInstance\n */\n\n/* jshint ignore:end */\n\nRateLimitInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * fetch a RateLimitInstance\n *\n * @function fetch\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RateLimitInstance\n */\n\n/* jshint ignore:end */\n\n\nRateLimitInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * remove a RateLimitInstance\n *\n * @function remove\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RateLimitInstance\n */\n\n/* jshint ignore:end */\n\n\nRateLimitInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n/* jshint ignore:start */\n\n/**\n * Access the buckets\n *\n * @function buckets\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitInstance#\n *\n * @returns {Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList}\n */\n\n/* jshint ignore:end */\n\n\nRateLimitInstance.prototype.buckets = function buckets() {\n  return this._proxy.buckets;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nRateLimitInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nRateLimitInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the RateLimitContext\n *\n * @constructor Twilio.Verify.V2.ServiceContext.RateLimitContext\n *\n * @property {Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList} buckets -\n *          buckets resource\n *\n * @param {V2} version - Version of the resource\n * @param {sid} serviceSid -\n *          The SID of the Service that the resource is associated with\n * @param {sid} sid - The unique string that identifies the resource\n */\n\n/* jshint ignore:end */\n\n\nRateLimitContext = function RateLimitContext(version, serviceSid, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    serviceSid: serviceSid,\n    sid: sid\n  };\n  this._uri = `/Services/${serviceSid}/RateLimits/${sid}`; // Dependents\n\n  this._buckets = undefined;\n};\n/* jshint ignore:start */\n\n/**\n * update a RateLimitInstance\n *\n * @function update\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.description] - Description of this Rate Limit\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RateLimitInstance\n */\n\n/* jshint ignore:end */\n\n\nRateLimitContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'Description': _.get(opts, 'description')\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new RateLimitInstance(this._version, payload, this._solution.serviceSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a RateLimitInstance\n *\n * @function fetch\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RateLimitInstance\n */\n\n/* jshint ignore:end */\n\n\nRateLimitContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new RateLimitInstance(this._version, payload, this._solution.serviceSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * remove a RateLimitInstance\n *\n * @function remove\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RateLimitInstance\n */\n\n/* jshint ignore:end */\n\n\nRateLimitContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(RateLimitContext.prototype, 'buckets', {\n  get: function () {\n    if (!this._buckets) {\n      this._buckets = new BucketList(this._version, this._solution.serviceSid, this._solution.sid);\n    }\n\n    return this._buckets;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\nRateLimitContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nRateLimitContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  RateLimitList: RateLimitList,\n  RateLimitPage: RateLimitPage,\n  RateLimitInstance: RateLimitInstance,\n  RateLimitContext: RateLimitContext\n};","map":{"version":3,"names":["Q","require","_","util","BucketList","Page","deserialize","values","RateLimitList","RateLimitPage","RateLimitInstance","RateLimitContext","version","serviceSid","RateLimitListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isUndefined","Error","deferred","defer","data","of","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","each","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","fetchNextPage","fn","page","instances","instance","nextPage","merge","list","allResources","resource","push","length","pageToken","pageNumber","params","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","service_sid","accountSid","account_sid","uniqueName","unique_name","description","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","url","links","_context","undefined","Object","defineProperty","update","_proxy","fetch","remove","buckets","_buckets","module","exports"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/twilio/lib/rest/verify/v2/service/rateLimit.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar BucketList = require('./rateLimit/bucket').BucketList;\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar RateLimitList;\nvar RateLimitPage;\nvar RateLimitInstance;\nvar RateLimitContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the RateLimitList\n *\n * @constructor Twilio.Verify.V2.ServiceContext.RateLimitList\n *\n * @param {Twilio.Verify.V2} version - Version of the resource\n * @param {string} serviceSid -\n *          The SID of the Service that the resource is associated with\n */\n/* jshint ignore:end */\nRateLimitList = function RateLimitList(version, serviceSid) {\n  /* jshint ignore:start */\n  /**\n   * @function rateLimits\n   * @memberof Twilio.Verify.V2.ServiceContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Verify.V2.ServiceContext.RateLimitContext}\n   */\n  /* jshint ignore:end */\n  function RateLimitListInstance(sid) {\n    return RateLimitListInstance.get(sid);\n  }\n\n  RateLimitListInstance._version = version;\n  // Path Solution\n  RateLimitListInstance._solution = {serviceSid: serviceSid};\n  RateLimitListInstance._uri = `/Services/${serviceSid}/RateLimits`;\n  /* jshint ignore:start */\n  /**\n   * create a RateLimitInstance\n   *\n   * @function create\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.uniqueName -\n   *          A unique, developer assigned name of this Rate Limit.\n   * @param {string} [opts.description] - Description of this Rate Limit\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed RateLimitInstance\n   */\n  /* jshint ignore:end */\n  RateLimitListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts['uniqueName'])) {\n      throw new Error('Required parameter \"opts[\\'uniqueName\\']\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'UniqueName': _.get(opts, 'uniqueName'),\n      'Description': _.get(opts, 'description')\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new RateLimitInstance(\n        this._version,\n        payload,\n        this._solution.serviceSid,\n        this._solution.sid\n      ));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams RateLimitInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  RateLimitListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists RateLimitInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  RateLimitListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of RateLimitInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  RateLimitListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new RateLimitPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of RateLimitInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  RateLimitListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new RateLimitPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a rate_limit\n   *\n   * @function get\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitList#\n   *\n   * @param {string} sid - The unique string that identifies the resource\n   *\n   * @returns {Twilio.Verify.V2.ServiceContext.RateLimitContext}\n   */\n  /* jshint ignore:end */\n  RateLimitListInstance.get = function get(sid) {\n    return new RateLimitContext(this._version, this._solution.serviceSid, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Verify.V2.ServiceContext.RateLimitList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  RateLimitListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  RateLimitListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return RateLimitListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the RateLimitPage\n *\n * @constructor Twilio.Verify.V2.ServiceContext.RateLimitPage\n *\n * @param {V2} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {RateLimitSolution} solution - Path solution\n *\n * @returns RateLimitPage\n */\n/* jshint ignore:end */\nRateLimitPage = function RateLimitPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(RateLimitPage.prototype, Page.prototype);\nRateLimitPage.prototype.constructor = RateLimitPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of RateLimitInstance\n *\n * @function getInstance\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitPage#\n *\n * @param {RateLimitPayload} payload - Payload response from the API\n *\n * @returns RateLimitInstance\n */\n/* jshint ignore:end */\nRateLimitPage.prototype.getInstance = function getInstance(payload) {\n  return new RateLimitInstance(this._version, payload, this._solution.serviceSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nRateLimitPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nRateLimitPage.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the RateLimitContext\n *\n * @constructor Twilio.Verify.V2.ServiceContext.RateLimitInstance\n *\n * @property {string} sid - A string that uniquely identifies this Rate Limit.\n * @property {string} serviceSid -\n *          The SID of the Service that the resource is associated with\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} uniqueName -\n *          A unique, developer assigned name of this Rate Limit.\n * @property {string} description - Description of this Rate Limit\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT when the resource was last updated\n * @property {string} url - The URL of this resource.\n * @property {string} links - The URLs of related resources\n *\n * @param {V2} version - Version of the resource\n * @param {RateLimitPayload} payload - The instance payload\n * @param {sid} serviceSid -\n *          The SID of the Service that the resource is associated with\n * @param {sid} sid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nRateLimitInstance = function RateLimitInstance(version, payload, serviceSid,\n                                                sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.uniqueName = payload.unique_name; // jshint ignore:line\n  this.description = payload.description; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.links = payload.links; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {serviceSid: serviceSid, sid: sid || this.sid, };\n};\n\nObject.defineProperty(RateLimitInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new RateLimitContext(this._version, this._solution.serviceSid, this._solution.sid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * update a RateLimitInstance\n *\n * @function update\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.description] - Description of this Rate Limit\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RateLimitInstance\n */\n/* jshint ignore:end */\nRateLimitInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a RateLimitInstance\n *\n * @function fetch\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RateLimitInstance\n */\n/* jshint ignore:end */\nRateLimitInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a RateLimitInstance\n *\n * @function remove\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RateLimitInstance\n */\n/* jshint ignore:end */\nRateLimitInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the buckets\n *\n * @function buckets\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitInstance#\n *\n * @returns {Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList}\n */\n/* jshint ignore:end */\nRateLimitInstance.prototype.buckets = function buckets() {\n  return this._proxy.buckets;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nRateLimitInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nRateLimitInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the RateLimitContext\n *\n * @constructor Twilio.Verify.V2.ServiceContext.RateLimitContext\n *\n * @property {Twilio.Verify.V2.ServiceContext.RateLimitContext.BucketList} buckets -\n *          buckets resource\n *\n * @param {V2} version - Version of the resource\n * @param {sid} serviceSid -\n *          The SID of the Service that the resource is associated with\n * @param {sid} sid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nRateLimitContext = function RateLimitContext(version, serviceSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {serviceSid: serviceSid, sid: sid, };\n  this._uri = `/Services/${serviceSid}/RateLimits/${sid}`;\n\n  // Dependents\n  this._buckets = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * update a RateLimitInstance\n *\n * @function update\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.description] - Description of this Rate Limit\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RateLimitInstance\n */\n/* jshint ignore:end */\nRateLimitContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({'Description': _.get(opts, 'description')});\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new RateLimitInstance(\n      this._version,\n      payload,\n      this._solution.serviceSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a RateLimitInstance\n *\n * @function fetch\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RateLimitInstance\n */\n/* jshint ignore:end */\nRateLimitContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new RateLimitInstance(\n      this._version,\n      payload,\n      this._solution.serviceSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a RateLimitInstance\n *\n * @function remove\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RateLimitInstance\n */\n/* jshint ignore:end */\nRateLimitContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(RateLimitContext.prototype,\n  'buckets', {\n    get: function() {\n      if (!this._buckets) {\n        this._buckets = new BucketList(this._version, this._solution.serviceSid, this._solution.sid);\n      }\n      return this._buckets;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Verify.V2.ServiceContext.RateLimitContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nRateLimitContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nRateLimitContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  RateLimitList: RateLimitList,\n  RateLimitPage: RateLimitPage,\n  RateLimitInstance: RateLimitInstance,\n  RateLimitContext: RateLimitContext\n};\n"],"mappings":"AAAA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AAEA,IAAIA,CAAC,GAAGC,OAAO,CAAC,GAAD,CAAf;AAAuB;;;AACvB,IAAIC,CAAC,GAAGD,OAAO,CAAC,QAAD,CAAf;AAA4B;;;AAC5B,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAAlB;AAA6B;;;AAC7B,IAAIG,UAAU,GAAGH,OAAO,CAAC,oBAAD,CAAP,CAA8BG,UAA/C;;AACA,IAAIC,IAAI,GAAGJ,OAAO,CAAC,uBAAD,CAAlB;AAA8C;;;AAC9C,IAAIK,WAAW,GAAGL,OAAO,CACrB,8BADqB,CAAzB;AACsC;;;AACtC,IAAIM,MAAM,GAAGN,OAAO,CAAC,yBAAD,CAApB;AAAkD;;;AAElD,IAAIO,aAAJ;AACA,IAAIC,aAAJ;AACA,IAAIC,iBAAJ;AACA,IAAIC,gBAAJ;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACAH,aAAa,GAAG,SAASA,aAAT,CAAuBI,OAAvB,EAAgCC,UAAhC,EAA4C;EAC1D;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EACE;EACA,SAASC,qBAAT,CAA+BC,GAA/B,EAAoC;IAClC,OAAOD,qBAAqB,CAACE,GAAtB,CAA0BD,GAA1B,CAAP;EACD;;EAEDD,qBAAqB,CAACG,QAAtB,GAAiCL,OAAjC,CAf0D,CAgB1D;;EACAE,qBAAqB,CAACI,SAAtB,GAAkC;IAACL,UAAU,EAAEA;EAAb,CAAlC;EACAC,qBAAqB,CAACK,IAAtB,GAA8B,aAAYN,UAAW,aAArD;EACA;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE;;EACAC,qBAAqB,CAACM,MAAtB,GAA+B,SAASA,MAAT,CAAgBC,IAAhB,EAAsBC,QAAtB,EAAgC;IAC7D,IAAIpB,CAAC,CAACqB,WAAF,CAAcF,IAAd,CAAJ,EAAyB;MACvB,MAAM,IAAIG,KAAJ,CAAU,oCAAV,CAAN;IACD;;IACD,IAAItB,CAAC,CAACqB,WAAF,CAAcF,IAAI,CAAC,YAAD,CAAlB,CAAJ,EAAuC;MACrC,MAAM,IAAIG,KAAJ,CAAU,oDAAV,CAAN;IACD;;IAED,IAAIC,QAAQ,GAAGzB,CAAC,CAAC0B,KAAF,EAAf;IACA,IAAIC,IAAI,GAAGpB,MAAM,CAACqB,EAAP,CAAU;MACnB,cAAc1B,CAAC,CAACc,GAAF,CAAMK,IAAN,EAAY,YAAZ,CADK;MAEnB,eAAenB,CAAC,CAACc,GAAF,CAAMK,IAAN,EAAY,aAAZ;IAFI,CAAV,CAAX;;IAKA,IAAIQ,OAAO,GAAG,KAAKZ,QAAL,CAAcG,MAAd,CAAqB;MAACU,GAAG,EAAE,KAAKX,IAAX;MAAiBY,MAAM,EAAE,MAAzB;MAAiCJ,IAAI,EAAEA;IAAvC,CAArB,CAAd;;IAEAE,OAAO,GAAGA,OAAO,CAACG,IAAR,CAAa,UAASC,OAAT,EAAkB;MACvCR,QAAQ,CAACS,OAAT,CAAiB,IAAIxB,iBAAJ,CACf,KAAKO,QADU,EAEfgB,OAFe,EAGf,KAAKf,SAAL,CAAeL,UAHA,EAIf,KAAKK,SAAL,CAAeH,GAJA,CAAjB;IAMD,CAPsB,CAOrBoB,IAPqB,CAOhB,IAPgB,CAAb,CAAV;IASAN,OAAO,CAACO,KAAR,CAAc,UAASC,KAAT,EAAgB;MAC5BZ,QAAQ,CAACa,MAAT,CAAgBD,KAAhB;IACD,CAFD;;IAIA,IAAInC,CAAC,CAACqC,UAAF,CAAajB,QAAb,CAAJ,EAA4B;MAC1BG,QAAQ,CAACI,OAAT,CAAiBW,OAAjB,CAAyBlB,QAAzB;IACD;;IAED,OAAOG,QAAQ,CAACI,OAAhB;EACD,CAlCD;EAoCA;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE;;;EACAf,qBAAqB,CAAC2B,IAAtB,GAA6B,SAASA,IAAT,CAAcpB,IAAd,EAAoBC,QAApB,EAA8B;IACzD,IAAIpB,CAAC,CAACqC,UAAF,CAAalB,IAAb,CAAJ,EAAwB;MACtBC,QAAQ,GAAGD,IAAX;MACAA,IAAI,GAAG,EAAP;IACD;;IACDA,IAAI,GAAGA,IAAI,IAAI,EAAf;;IACA,IAAIA,IAAI,CAACC,QAAT,EAAmB;MACjBA,QAAQ,GAAGD,IAAI,CAACC,QAAhB;IACD;;IACD,IAAIpB,CAAC,CAACqB,WAAF,CAAcD,QAAd,CAAJ,EAA6B;MAC3B,MAAM,IAAIE,KAAJ,CAAU,oCAAV,CAAN;IACD;;IAED,IAAIkB,IAAI,GAAG,KAAX;IACA,IAAIC,WAAW,GAAG,CAAlB;IACA,IAAIC,eAAe,GAAG,CAAtB;;IACA,IAAIC,MAAM,GAAG,KAAK5B,QAAL,CAAc6B,UAAd,CAAyB;MACpCC,KAAK,EAAE1B,IAAI,CAAC0B,KADwB;MAEpCC,QAAQ,EAAE3B,IAAI,CAAC2B;IAFqB,CAAzB,CAAb;;IAKA,SAASC,UAAT,CAAoBZ,KAApB,EAA2B;MACzBK,IAAI,GAAG,IAAP;;MACA,IAAIxC,CAAC,CAACqC,UAAF,CAAalB,IAAI,CAACqB,IAAlB,CAAJ,EAA6B;QAC3BrB,IAAI,CAACqB,IAAL,CAAUL,KAAV;MACD;IACF;;IAED,SAASa,aAAT,CAAuBC,EAAvB,EAA2B;MACzB,IAAItB,OAAO,GAAGsB,EAAE,EAAhB;;MACA,IAAIjD,CAAC,CAACqB,WAAF,CAAcM,OAAd,CAAJ,EAA4B;QAC1BoB,UAAU;QACV;MACD;;MAEDpB,OAAO,CAACG,IAAR,CAAa,UAASoB,IAAT,EAAe;QAC1BlD,CAAC,CAACuC,IAAF,CAAOW,IAAI,CAACC,SAAZ,EAAuB,UAASC,QAAT,EAAmB;UACxC,IAAIZ,IAAI,IAAK,CAACxC,CAAC,CAACqB,WAAF,CAAcF,IAAI,CAAC0B,KAAnB,CAAD,IAA8BH,eAAe,IAAIvB,IAAI,CAAC0B,KAAnE,EAA2E;YACzEL,IAAI,GAAG,IAAP;YACA,OAAO,KAAP;UACD;;UAEDE,eAAe;UACftB,QAAQ,CAACgC,QAAD,EAAWL,UAAX,CAAR;QACD,CARD;;QAUA,IAAI,CAACP,IAAL,EAAW;UACTC,WAAW;UACXO,aAAa,CAAChD,CAAC,CAACiC,IAAF,CAAOiB,IAAI,CAACG,QAAZ,EAAsBH,IAAtB,CAAD,CAAb;QACD,CAHD,MAGO;UACLH,UAAU;QACX;MACF,CAjBD;MAmBApB,OAAO,CAACO,KAAR,CAAca,UAAd;IACD;;IAEDC,aAAa,CAAChD,CAAC,CAACiC,IAAF,CAAO,KAAKiB,IAAZ,EAAkB,IAAlB,EAAwBlD,CAAC,CAACsD,KAAF,CAAQnC,IAAR,EAAcwB,MAAd,CAAxB,CAAD,CAAb;EACD,CA1DD;EA4DA;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE;;;EACA/B,qBAAqB,CAAC2C,IAAtB,GAA6B,SAASA,IAAT,CAAcpC,IAAd,EAAoBC,QAApB,EAA8B;IACzD,IAAIpB,CAAC,CAACqC,UAAF,CAAalB,IAAb,CAAJ,EAAwB;MACtBC,QAAQ,GAAGD,IAAX;MACAA,IAAI,GAAG,EAAP;IACD;;IACDA,IAAI,GAAGA,IAAI,IAAI,EAAf;IACA,IAAII,QAAQ,GAAGzB,CAAC,CAAC0B,KAAF,EAAf;IACA,IAAIgC,YAAY,GAAG,EAAnB;;IACArC,IAAI,CAACC,QAAL,GAAgB,UAASqC,QAAT,EAAmBjB,IAAnB,EAAyB;MACvCgB,YAAY,CAACE,IAAb,CAAkBD,QAAlB;;MAEA,IAAI,CAACzD,CAAC,CAACqB,WAAF,CAAcF,IAAI,CAAC0B,KAAnB,CAAD,IAA8BW,YAAY,CAACG,MAAb,KAAwBxC,IAAI,CAAC0B,KAA/D,EAAsE;QACpEL,IAAI;MACL;IACF,CAND;;IAQArB,IAAI,CAACqB,IAAL,GAAY,UAASL,KAAT,EAAgB;MAC1B,IAAInC,CAAC,CAACqB,WAAF,CAAcc,KAAd,CAAJ,EAA0B;QACxBZ,QAAQ,CAACS,OAAT,CAAiBwB,YAAjB;MACD,CAFD,MAEO;QACLjC,QAAQ,CAACa,MAAT,CAAgBD,KAAhB;MACD;IACF,CAND;;IAQA,IAAInC,CAAC,CAACqC,UAAF,CAAajB,QAAb,CAAJ,EAA4B;MAC1BG,QAAQ,CAACI,OAAT,CAAiBW,OAAjB,CAAyBlB,QAAzB;IACD;;IAED,KAAKmB,IAAL,CAAUpB,IAAV;IACA,OAAOI,QAAQ,CAACI,OAAhB;EACD,CA9BD;EAgCA;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE;;;EACAf,qBAAqB,CAACsC,IAAtB,GAA6B,SAASA,IAAT,CAAc/B,IAAd,EAAoBC,QAApB,EAA8B;IACzD,IAAIpB,CAAC,CAACqC,UAAF,CAAalB,IAAb,CAAJ,EAAwB;MACtBC,QAAQ,GAAGD,IAAX;MACAA,IAAI,GAAG,EAAP;IACD;;IACDA,IAAI,GAAGA,IAAI,IAAI,EAAf;IAEA,IAAII,QAAQ,GAAGzB,CAAC,CAAC0B,KAAF,EAAf;IACA,IAAIC,IAAI,GAAGpB,MAAM,CAACqB,EAAP,CAAU;MACnB,aAAaP,IAAI,CAACyC,SADC;MAEnB,QAAQzC,IAAI,CAAC0C,UAFM;MAGnB,YAAY1C,IAAI,CAAC2B;IAHE,CAAV,CAAX;;IAMA,IAAInB,OAAO,GAAG,KAAKZ,QAAL,CAAcmC,IAAd,CAAmB;MAACtB,GAAG,EAAE,KAAKX,IAAX;MAAiBY,MAAM,EAAE,KAAzB;MAAgCiC,MAAM,EAAErC;IAAxC,CAAnB,CAAd;;IAEAE,OAAO,GAAGA,OAAO,CAACG,IAAR,CAAa,UAASC,OAAT,EAAkB;MACvCR,QAAQ,CAACS,OAAT,CAAiB,IAAIzB,aAAJ,CAAkB,KAAKQ,QAAvB,EAAiCgB,OAAjC,EAA0C,KAAKf,SAA/C,CAAjB;IACD,CAFsB,CAErBiB,IAFqB,CAEhB,IAFgB,CAAb,CAAV;IAIAN,OAAO,CAACO,KAAR,CAAc,UAASC,KAAT,EAAgB;MAC5BZ,QAAQ,CAACa,MAAT,CAAgBD,KAAhB;IACD,CAFD;;IAIA,IAAInC,CAAC,CAACqC,UAAF,CAAajB,QAAb,CAAJ,EAA4B;MAC1BG,QAAQ,CAACI,OAAT,CAAiBW,OAAjB,CAAyBlB,QAAzB;IACD;;IAED,OAAOG,QAAQ,CAACI,OAAhB;EACD,CA7BD;EA+BA;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE;;;EACAf,qBAAqB,CAACmD,OAAtB,GAAgC,SAASA,OAAT,CAAiBC,SAAjB,EAA4B5C,QAA5B,EAAsC;IACpE,IAAIG,QAAQ,GAAGzB,CAAC,CAAC0B,KAAF,EAAf;;IAEA,IAAIG,OAAO,GAAG,KAAKZ,QAAL,CAAckD,OAAd,CAAsBC,MAAtB,CAA6BC,OAA7B,CAAqC;MAACtC,MAAM,EAAE,KAAT;MAAgBD,GAAG,EAAEoC;IAArB,CAArC,CAAd;;IAEArC,OAAO,GAAGA,OAAO,CAACG,IAAR,CAAa,UAASC,OAAT,EAAkB;MACvCR,QAAQ,CAACS,OAAT,CAAiB,IAAIzB,aAAJ,CAAkB,KAAKQ,QAAvB,EAAiCgB,OAAjC,EAA0C,KAAKf,SAA/C,CAAjB;IACD,CAFsB,CAErBiB,IAFqB,CAEhB,IAFgB,CAAb,CAAV;IAIAN,OAAO,CAACO,KAAR,CAAc,UAASC,KAAT,EAAgB;MAC5BZ,QAAQ,CAACa,MAAT,CAAgBD,KAAhB;IACD,CAFD;;IAIA,IAAInC,CAAC,CAACqC,UAAF,CAAajB,QAAb,CAAJ,EAA4B;MAC1BG,QAAQ,CAACI,OAAT,CAAiBW,OAAjB,CAAyBlB,QAAzB;IACD;;IAED,OAAOG,QAAQ,CAACI,OAAhB;EACD,CAlBD;EAoBA;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE;;;EACAf,qBAAqB,CAACE,GAAtB,GAA4B,SAASA,GAAT,CAAaD,GAAb,EAAkB;IAC5C,OAAO,IAAIJ,gBAAJ,CAAqB,KAAKM,QAA1B,EAAoC,KAAKC,SAAL,CAAeL,UAAnD,EAA+DE,GAA/D,CAAP;EACD,CAFD;EAIA;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EACE;;;EACAD,qBAAqB,CAACwD,MAAtB,GAA+B,SAASA,MAAT,GAAkB;IAC/C,OAAO,KAAKpD,SAAZ;EACD,CAFD;;EAIAJ,qBAAqB,CAACX,IAAI,CAACoE,OAAL,CAAaC,MAAd,CAArB,GAA6C,SAASD,OAAT,CAAiBE,KAAjB,EAAwBC,OAAxB,EAAiC;IAC5E,OAAOvE,IAAI,CAACoE,OAAL,CAAa,KAAKD,MAAL,EAAb,EAA4BI,OAA5B,CAAP;EACD,CAFD;;EAIA,OAAO5D,qBAAP;AACD,CA9VD;AAiWA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAL,aAAa,GAAG,SAASA,aAAT,CAAuBG,OAAvB,EAAgC+D,QAAhC,EAA0CC,QAA1C,EAAoD;EAClE;EACA,KAAK1D,SAAL,GAAiB0D,QAAjB;EAEAvE,IAAI,CAACwE,SAAL,CAAeC,WAAf,CAA2BC,IAA3B,CAAgC,IAAhC,EAAsCnE,OAAtC,EAA+C+D,QAA/C,EAAyD,KAAKzD,SAA9D;AACD,CALD;;AAOAhB,CAAC,CAAC8E,MAAF,CAASvE,aAAa,CAACoE,SAAvB,EAAkCxE,IAAI,CAACwE,SAAvC;;AACApE,aAAa,CAACoE,SAAd,CAAwBC,WAAxB,GAAsCrE,aAAtC;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACAA,aAAa,CAACoE,SAAd,CAAwBI,WAAxB,GAAsC,SAASA,WAAT,CAAqBhD,OAArB,EAA8B;EAClE,OAAO,IAAIvB,iBAAJ,CAAsB,KAAKO,QAA3B,EAAqCgB,OAArC,EAA8C,KAAKf,SAAL,CAAeL,UAA7D,CAAP;AACD,CAFD;AAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAJ,aAAa,CAACoE,SAAd,CAAwBP,MAAxB,GAAiC,SAASA,MAAT,GAAkB;EACjD,IAAIY,KAAK,GAAG,EAAZ;;EACAhF,CAAC,CAACiF,MAAF,CAAS,IAAT,EAAe,UAASC,KAAT,EAAgBC,GAAhB,EAAqB;IAClC,IAAI,CAACnF,CAAC,CAACoF,UAAF,CAAaD,GAAb,EAAkB,GAAlB,CAAD,IAA2B,CAAEnF,CAAC,CAACqC,UAAF,CAAa6C,KAAb,CAAjC,EAAsD;MACpDF,KAAK,CAACG,GAAD,CAAL,GAAaD,KAAb;IACD;EACF,CAJD;;EAKA,OAAOF,KAAP;AACD,CARD;;AAUAzE,aAAa,CAACoE,SAAd,CAAwB1E,IAAI,CAACoE,OAAL,CAAaC,MAArC,IAA+C,SAASD,OAAT,CAAiBE,KAAjB,EAAwBC,OAAxB,EAC3C;EACF,OAAOvE,IAAI,CAACoE,OAAL,CAAa,KAAKD,MAAL,EAAb,EAA4BI,OAA5B,CAAP;AACD,CAHD;AAMA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAhE,iBAAiB,GAAG,SAASA,iBAAT,CAA2BE,OAA3B,EAAoCqB,OAApC,EAA6CpB,UAA7C,EAC4BE,GAD5B,EACiC;EACnD,KAAKE,QAAL,GAAgBL,OAAhB,CADmD,CAGnD;;EACA,KAAKG,GAAL,GAAWkB,OAAO,CAAClB,GAAnB,CAJmD,CAI3B;;EACxB,KAAKF,UAAL,GAAkBoB,OAAO,CAACsD,WAA1B,CALmD,CAKZ;;EACvC,KAAKC,UAAL,GAAkBvD,OAAO,CAACwD,WAA1B,CANmD,CAMZ;;EACvC,KAAKC,UAAL,GAAkBzD,OAAO,CAAC0D,WAA1B,CAPmD,CAOZ;;EACvC,KAAKC,WAAL,GAAmB3D,OAAO,CAAC2D,WAA3B,CARmD,CAQX;;EACxC,KAAKC,WAAL,GAAmBvF,WAAW,CAACwF,eAAZ,CAA4B7D,OAAO,CAAC8D,YAApC,CAAnB,CATmD,CASmB;;EACtE,KAAKC,WAAL,GAAmB1F,WAAW,CAACwF,eAAZ,CAA4B7D,OAAO,CAACgE,YAApC,CAAnB,CAVmD,CAUmB;;EACtE,KAAKC,GAAL,GAAWjE,OAAO,CAACiE,GAAnB,CAXmD,CAW3B;;EACxB,KAAKC,KAAL,GAAalE,OAAO,CAACkE,KAArB,CAZmD,CAYvB;EAE5B;;EACA,KAAKC,QAAL,GAAgBC,SAAhB;EACA,KAAKnF,SAAL,GAAiB;IAACL,UAAU,EAAEA,UAAb;IAAyBE,GAAG,EAAEA,GAAG,IAAI,KAAKA;EAA1C,CAAjB;AACD,CAlBD;;AAoBAuF,MAAM,CAACC,cAAP,CAAsB7F,iBAAiB,CAACmE,SAAxC,EACE,QADF,EACY;EACR7D,GAAG,EAAE,YAAW;IACd,IAAI,CAAC,KAAKoF,QAAV,EAAoB;MAClB,KAAKA,QAAL,GAAgB,IAAIzF,gBAAJ,CAAqB,KAAKM,QAA1B,EAAoC,KAAKC,SAAL,CAAeL,UAAnD,EAA+D,KAAKK,SAAL,CAAeH,GAA9E,CAAhB;IACD;;IAED,OAAO,KAAKqF,QAAZ;EACD;AAPO,CADZ;AAWA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA1F,iBAAiB,CAACmE,SAAlB,CAA4B2B,MAA5B,GAAqC,SAASA,MAAT,CAAgBnF,IAAhB,EAAsBC,QAAtB,EAAgC;EACnE,OAAO,KAAKmF,MAAL,CAAYD,MAAZ,CAAmBnF,IAAnB,EAAyBC,QAAzB,CAAP;AACD,CAFD;AAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAZ,iBAAiB,CAACmE,SAAlB,CAA4B6B,KAA5B,GAAoC,SAASA,KAAT,CAAepF,QAAf,EAAyB;EAC3D,OAAO,KAAKmF,MAAL,CAAYC,KAAZ,CAAkBpF,QAAlB,CAAP;AACD,CAFD;AAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAZ,iBAAiB,CAACmE,SAAlB,CAA4B8B,MAA5B,GAAqC,SAASA,MAAT,CAAgBrF,QAAhB,EAA0B;EAC7D,OAAO,KAAKmF,MAAL,CAAYE,MAAZ,CAAmBrF,QAAnB,CAAP;AACD,CAFD;AAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAZ,iBAAiB,CAACmE,SAAlB,CAA4B+B,OAA5B,GAAsC,SAASA,OAAT,GAAmB;EACvD,OAAO,KAAKH,MAAL,CAAYG,OAAnB;AACD,CAFD;AAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAlG,iBAAiB,CAACmE,SAAlB,CAA4BP,MAA5B,GAAqC,SAASA,MAAT,GAAkB;EACrD,IAAIY,KAAK,GAAG,EAAZ;;EACAhF,CAAC,CAACiF,MAAF,CAAS,IAAT,EAAe,UAASC,KAAT,EAAgBC,GAAhB,EAAqB;IAClC,IAAI,CAACnF,CAAC,CAACoF,UAAF,CAAaD,GAAb,EAAkB,GAAlB,CAAD,IAA2B,CAAEnF,CAAC,CAACqC,UAAF,CAAa6C,KAAb,CAAjC,EAAsD;MACpDF,KAAK,CAACG,GAAD,CAAL,GAAaD,KAAb;IACD;EACF,CAJD;;EAKA,OAAOF,KAAP;AACD,CARD;;AAUAxE,iBAAiB,CAACmE,SAAlB,CAA4B1E,IAAI,CAACoE,OAAL,CAAaC,MAAzC,IAAmD,SAASD,OAAT,CAAiBE,KAAjB,EAC/CC,OAD+C,EACtC;EACX,OAAOvE,IAAI,CAACoE,OAAL,CAAa,KAAKD,MAAL,EAAb,EAA4BI,OAA5B,CAAP;AACD,CAHD;AAMA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA/D,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,OAA1B,EAAmCC,UAAnC,EAA+CE,GAA/C,EAAoD;EACrE,KAAKE,QAAL,GAAgBL,OAAhB,CADqE,CAGrE;;EACA,KAAKM,SAAL,GAAiB;IAACL,UAAU,EAAEA,UAAb;IAAyBE,GAAG,EAAEA;EAA9B,CAAjB;EACA,KAAKI,IAAL,GAAa,aAAYN,UAAW,eAAcE,GAAI,EAAtD,CALqE,CAOrE;;EACA,KAAK8F,QAAL,GAAgBR,SAAhB;AACD,CATD;AAWA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA1F,gBAAgB,CAACkE,SAAjB,CAA2B2B,MAA3B,GAAoC,SAASA,MAAT,CAAgBnF,IAAhB,EAAsBC,QAAtB,EAAgC;EAClE,IAAIpB,CAAC,CAACqC,UAAF,CAAalB,IAAb,CAAJ,EAAwB;IACtBC,QAAQ,GAAGD,IAAX;IACAA,IAAI,GAAG,EAAP;EACD;;EACDA,IAAI,GAAGA,IAAI,IAAI,EAAf;EAEA,IAAII,QAAQ,GAAGzB,CAAC,CAAC0B,KAAF,EAAf;EACA,IAAIC,IAAI,GAAGpB,MAAM,CAACqB,EAAP,CAAU;IAAC,eAAe1B,CAAC,CAACc,GAAF,CAAMK,IAAN,EAAY,aAAZ;EAAhB,CAAV,CAAX;;EAEA,IAAIQ,OAAO,GAAG,KAAKZ,QAAL,CAAcuF,MAAd,CAAqB;IAAC1E,GAAG,EAAE,KAAKX,IAAX;IAAiBY,MAAM,EAAE,MAAzB;IAAiCJ,IAAI,EAAEA;EAAvC,CAArB,CAAd;;EAEAE,OAAO,GAAGA,OAAO,CAACG,IAAR,CAAa,UAASC,OAAT,EAAkB;IACvCR,QAAQ,CAACS,OAAT,CAAiB,IAAIxB,iBAAJ,CACf,KAAKO,QADU,EAEfgB,OAFe,EAGf,KAAKf,SAAL,CAAeL,UAHA,EAIf,KAAKK,SAAL,CAAeH,GAJA,CAAjB;EAMD,CAPsB,CAOrBoB,IAPqB,CAOhB,IAPgB,CAAb,CAAV;EASAN,OAAO,CAACO,KAAR,CAAc,UAASC,KAAT,EAAgB;IAC5BZ,QAAQ,CAACa,MAAT,CAAgBD,KAAhB;EACD,CAFD;;EAIA,IAAInC,CAAC,CAACqC,UAAF,CAAajB,QAAb,CAAJ,EAA4B;IAC1BG,QAAQ,CAACI,OAAT,CAAiBW,OAAjB,CAAyBlB,QAAzB;EACD;;EAED,OAAOG,QAAQ,CAACI,OAAhB;AACD,CA9BD;AAgCA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAlB,gBAAgB,CAACkE,SAAjB,CAA2B6B,KAA3B,GAAmC,SAASA,KAAT,CAAepF,QAAf,EAAyB;EAC1D,IAAIG,QAAQ,GAAGzB,CAAC,CAAC0B,KAAF,EAAf;;EACA,IAAIG,OAAO,GAAG,KAAKZ,QAAL,CAAcyF,KAAd,CAAoB;IAAC5E,GAAG,EAAE,KAAKX,IAAX;IAAiBY,MAAM,EAAE;EAAzB,CAApB,CAAd;;EAEAF,OAAO,GAAGA,OAAO,CAACG,IAAR,CAAa,UAASC,OAAT,EAAkB;IACvCR,QAAQ,CAACS,OAAT,CAAiB,IAAIxB,iBAAJ,CACf,KAAKO,QADU,EAEfgB,OAFe,EAGf,KAAKf,SAAL,CAAeL,UAHA,EAIf,KAAKK,SAAL,CAAeH,GAJA,CAAjB;EAMD,CAPsB,CAOrBoB,IAPqB,CAOhB,IAPgB,CAAb,CAAV;EASAN,OAAO,CAACO,KAAR,CAAc,UAASC,KAAT,EAAgB;IAC5BZ,QAAQ,CAACa,MAAT,CAAgBD,KAAhB;EACD,CAFD;;EAIA,IAAInC,CAAC,CAACqC,UAAF,CAAajB,QAAb,CAAJ,EAA4B;IAC1BG,QAAQ,CAACI,OAAT,CAAiBW,OAAjB,CAAyBlB,QAAzB;EACD;;EAED,OAAOG,QAAQ,CAACI,OAAhB;AACD,CAtBD;AAwBA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAlB,gBAAgB,CAACkE,SAAjB,CAA2B8B,MAA3B,GAAoC,SAASA,MAAT,CAAgBrF,QAAhB,EAA0B;EAC5D,IAAIG,QAAQ,GAAGzB,CAAC,CAAC0B,KAAF,EAAf;;EACA,IAAIG,OAAO,GAAG,KAAKZ,QAAL,CAAc0F,MAAd,CAAqB;IAAC7E,GAAG,EAAE,KAAKX,IAAX;IAAiBY,MAAM,EAAE;EAAzB,CAArB,CAAd;;EAEAF,OAAO,GAAGA,OAAO,CAACG,IAAR,CAAa,UAASC,OAAT,EAAkB;IACvCR,QAAQ,CAACS,OAAT,CAAiBD,OAAjB;EACD,CAFsB,CAErBE,IAFqB,CAEhB,IAFgB,CAAb,CAAV;EAIAN,OAAO,CAACO,KAAR,CAAc,UAASC,KAAT,EAAgB;IAC5BZ,QAAQ,CAACa,MAAT,CAAgBD,KAAhB;EACD,CAFD;;EAIA,IAAInC,CAAC,CAACqC,UAAF,CAAajB,QAAb,CAAJ,EAA4B;IAC1BG,QAAQ,CAACI,OAAT,CAAiBW,OAAjB,CAAyBlB,QAAzB;EACD;;EAED,OAAOG,QAAQ,CAACI,OAAhB;AACD,CAjBD;;AAmBAyE,MAAM,CAACC,cAAP,CAAsB5F,gBAAgB,CAACkE,SAAvC,EACE,SADF,EACa;EACT7D,GAAG,EAAE,YAAW;IACd,IAAI,CAAC,KAAK6F,QAAV,EAAoB;MAClB,KAAKA,QAAL,GAAgB,IAAIzG,UAAJ,CAAe,KAAKa,QAApB,EAA8B,KAAKC,SAAL,CAAeL,UAA7C,EAAyD,KAAKK,SAAL,CAAeH,GAAxE,CAAhB;IACD;;IACD,OAAO,KAAK8F,QAAZ;EACD;AANQ,CADb;AAUA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACAlG,gBAAgB,CAACkE,SAAjB,CAA2BP,MAA3B,GAAoC,SAASA,MAAT,GAAkB;EACpD,OAAO,KAAKpD,SAAZ;AACD,CAFD;;AAIAP,gBAAgB,CAACkE,SAAjB,CAA2B1E,IAAI,CAACoE,OAAL,CAAaC,MAAxC,IAAkD,SAASD,OAAT,CAAiBE,KAAjB,EAC9CC,OAD8C,EACrC;EACX,OAAOvE,IAAI,CAACoE,OAAL,CAAa,KAAKD,MAAL,EAAb,EAA4BI,OAA5B,CAAP;AACD,CAHD;;AAKAoC,MAAM,CAACC,OAAP,GAAiB;EACfvG,aAAa,EAAEA,aADA;EAEfC,aAAa,EAAEA,aAFA;EAGfC,iBAAiB,EAAEA,iBAHJ;EAIfC,gBAAgB,EAAEA;AAJH,CAAjB"},"metadata":{},"sourceType":"script"}