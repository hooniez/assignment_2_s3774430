{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar AssignedAddOnList = require('./incomingPhoneNumber/assignedAddOn').AssignedAddOnList;\n\nvar LocalList = require('./incomingPhoneNumber/local').LocalList;\n\nvar MobileList = require('./incomingPhoneNumber/mobile').MobileList;\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar TollFreeList = require('./incomingPhoneNumber/tollFree').TollFreeList;\n\nvar deserialize = require('../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar IncomingPhoneNumberList;\nvar IncomingPhoneNumberPage;\nvar IncomingPhoneNumberInstance;\nvar IncomingPhoneNumberContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the IncomingPhoneNumberList\n *\n * @constructor Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid - The SID of the Account that created the resource\n */\n\n/* jshint ignore:end */\n\nIncomingPhoneNumberList = function IncomingPhoneNumberList(version, accountSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function incomingPhoneNumbers\n   * @memberof Twilio.Api.V2010.AccountContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext}\n   */\n\n  /* jshint ignore:end */\n  function IncomingPhoneNumberListInstance(sid) {\n    return IncomingPhoneNumberListInstance.get(sid);\n  }\n\n  IncomingPhoneNumberListInstance._version = version; // Path Solution\n\n  IncomingPhoneNumberListInstance._solution = {\n    accountSid: accountSid\n  };\n  IncomingPhoneNumberListInstance._uri = `/Accounts/${accountSid}/IncomingPhoneNumbers.json`; // Components\n\n  IncomingPhoneNumberListInstance._local = undefined;\n  IncomingPhoneNumberListInstance._mobile = undefined;\n  IncomingPhoneNumberListInstance._tollFree = undefined;\n  /* jshint ignore:start */\n\n  /**\n   * Streams IncomingPhoneNumberInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {boolean} [opts.beta] - Whether to include new phone numbers\n   * @param {string} [opts.friendlyName] -\n   *          A string that identifies the IncomingPhoneNumber resources to read\n   * @param {string} [opts.phoneNumber] -\n   *          The phone numbers of the IncomingPhoneNumber resources to read\n   * @param {string} [opts.origin] -\n   *          Include phone numbers based on their origin. By default, phone numbers of all origin are included.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n  IncomingPhoneNumberListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists IncomingPhoneNumberInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {boolean} [opts.beta] - Whether to include new phone numbers\n   * @param {string} [opts.friendlyName] -\n   *          A string that identifies the IncomingPhoneNumber resources to read\n   * @param {string} [opts.phoneNumber] -\n   *          The phone numbers of the IncomingPhoneNumber resources to read\n   * @param {string} [opts.origin] -\n   *          Include phone numbers based on their origin. By default, phone numbers of all origin are included.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  IncomingPhoneNumberListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of IncomingPhoneNumberInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {boolean} [opts.beta] - Whether to include new phone numbers\n   * @param {string} [opts.friendlyName] -\n   *          A string that identifies the IncomingPhoneNumber resources to read\n   * @param {string} [opts.phoneNumber] -\n   *          The phone numbers of the IncomingPhoneNumber resources to read\n   * @param {string} [opts.origin] -\n   *          Include phone numbers based on their origin. By default, phone numbers of all origin are included.\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  IncomingPhoneNumberListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'Beta': serialize.bool(_.get(opts, 'beta')),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'PhoneNumber': _.get(opts, 'phoneNumber'),\n      'Origin': _.get(opts, 'origin'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new IncomingPhoneNumberPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of IncomingPhoneNumberInstance records from the\n   * API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  IncomingPhoneNumberListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new IncomingPhoneNumberPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * create a IncomingPhoneNumberInstance\n   *\n   * @function create\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.apiVersion] -\n   *          The API version to use for incoming calls made to the new phone number\n   * @param {string} [opts.friendlyName] - A string to describe the new phone number\n   * @param {string} [opts.smsApplicationSid] -\n   *          The SID of the application to handle SMS messages\n   * @param {string} [opts.smsFallbackMethod] -\n   *          HTTP method used with sms_fallback_url\n   * @param {string} [opts.smsFallbackUrl] -\n   *          The URL we call when an error occurs while executing TwiML\n   * @param {string} [opts.smsMethod] - The HTTP method to use with sms url\n   * @param {string} [opts.smsUrl] -\n   *          The URL we should call when the new phone number receives an incoming SMS message\n   * @param {string} [opts.statusCallback] -\n   *          The URL we should call to send status information to your application\n   * @param {string} [opts.statusCallbackMethod] -\n   *          HTTP method we should use to call status_callback\n   * @param {string} [opts.voiceApplicationSid] -\n   *          The SID of the application to handle the new phone number\n   * @param {boolean} [opts.voiceCallerIdLookup] -\n   *          Whether to lookup the caller's name\n   * @param {string} [opts.voiceFallbackMethod] -\n   *          The HTTP method used with voice_fallback_url\n   * @param {string} [opts.voiceFallbackUrl] -\n   *          The URL we will call when an error occurs in TwiML\n   * @param {string} [opts.voiceMethod] - The HTTP method used with the voice_url\n   * @param {string} [opts.voiceUrl] -\n   *          The URL we should call when the phone number receives a call\n   * @param {incoming_phone_number.emergency_status} [opts.emergencyStatus] -\n   *          Displays if emergency calling is enabled for this number.\n   * @param {string} [opts.emergencyAddressSid] -\n   *          The emergency address configuration to use for emergency calling\n   * @param {string} [opts.trunkSid] -\n   *          SID of the trunk to handle calls to the new phone number\n   * @param {string} [opts.identitySid] -\n   *          The SID of the Identity resource to associate with the new phone number\n   * @param {string} [opts.addressSid] -\n   *          The SID of the Address resource associated with the phone number\n   * @param {incoming_phone_number.voice_receive_mode} [opts.voiceReceiveMode] -\n   *          Incoming call type: fax or voice\n   * @param {string} [opts.bundleSid] -\n   *          The SID of the Bundle resource associated with number\n   * @param {string} [opts.phoneNumber] -\n   *          The phone number to purchase in E.164 format\n   * @param {string} [opts.areaCode] - The desired area code for the new phone number\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed IncomingPhoneNumberInstance\n   */\n\n  /* jshint ignore:end */\n\n\n  IncomingPhoneNumberListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PhoneNumber': _.get(opts, 'phoneNumber'),\n      'AreaCode': _.get(opts, 'areaCode'),\n      'ApiVersion': _.get(opts, 'apiVersion'),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'SmsApplicationSid': _.get(opts, 'smsApplicationSid'),\n      'SmsFallbackMethod': _.get(opts, 'smsFallbackMethod'),\n      'SmsFallbackUrl': _.get(opts, 'smsFallbackUrl'),\n      'SmsMethod': _.get(opts, 'smsMethod'),\n      'SmsUrl': _.get(opts, 'smsUrl'),\n      'StatusCallback': _.get(opts, 'statusCallback'),\n      'StatusCallbackMethod': _.get(opts, 'statusCallbackMethod'),\n      'VoiceApplicationSid': _.get(opts, 'voiceApplicationSid'),\n      'VoiceCallerIdLookup': serialize.bool(_.get(opts, 'voiceCallerIdLookup')),\n      'VoiceFallbackMethod': _.get(opts, 'voiceFallbackMethod'),\n      'VoiceFallbackUrl': _.get(opts, 'voiceFallbackUrl'),\n      'VoiceMethod': _.get(opts, 'voiceMethod'),\n      'VoiceUrl': _.get(opts, 'voiceUrl'),\n      'EmergencyStatus': _.get(opts, 'emergencyStatus'),\n      'EmergencyAddressSid': _.get(opts, 'emergencyAddressSid'),\n      'TrunkSid': _.get(opts, 'trunkSid'),\n      'IdentitySid': _.get(opts, 'identitySid'),\n      'AddressSid': _.get(opts, 'addressSid'),\n      'VoiceReceiveMode': _.get(opts, 'voiceReceiveMode'),\n      'BundleSid': _.get(opts, 'bundleSid')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new IncomingPhoneNumberInstance(this._version, payload, this._solution.accountSid, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a incoming_phone_number\n   *\n   * @function get\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList#\n   *\n   * @param {string} sid - The unique string that identifies the resource\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  IncomingPhoneNumberListInstance.get = function get(sid) {\n    return new IncomingPhoneNumberContext(this._version, this._solution.accountSid, sid);\n  };\n\n  Object.defineProperty(IncomingPhoneNumberListInstance, 'local', {\n    get: function local() {\n      if (!this._local) {\n        this._local = new LocalList(this._version, this._solution.accountSid);\n      }\n\n      return this._local;\n    }\n  });\n  Object.defineProperty(IncomingPhoneNumberListInstance, 'mobile', {\n    get: function mobile() {\n      if (!this._mobile) {\n        this._mobile = new MobileList(this._version, this._solution.accountSid);\n      }\n\n      return this._mobile;\n    }\n  });\n  Object.defineProperty(IncomingPhoneNumberListInstance, 'tollFree', {\n    get: function tollFree() {\n      if (!this._tollFree) {\n        this._tollFree = new TollFreeList(this._version, this._solution.accountSid);\n      }\n\n      return this._tollFree;\n    }\n  });\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n  IncomingPhoneNumberListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  IncomingPhoneNumberListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return IncomingPhoneNumberListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the IncomingPhoneNumberPage\n *\n * @constructor Twilio.Api.V2010.AccountContext.IncomingPhoneNumberPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {IncomingPhoneNumberSolution} solution - Path solution\n *\n * @returns IncomingPhoneNumberPage\n */\n\n/* jshint ignore:end */\n\n\nIncomingPhoneNumberPage = function IncomingPhoneNumberPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(IncomingPhoneNumberPage.prototype, Page.prototype);\n\nIncomingPhoneNumberPage.prototype.constructor = IncomingPhoneNumberPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of IncomingPhoneNumberInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberPage#\n *\n * @param {IncomingPhoneNumberPayload} payload - Payload response from the API\n *\n * @returns IncomingPhoneNumberInstance\n */\n\n/* jshint ignore:end */\n\nIncomingPhoneNumberPage.prototype.getInstance = function getInstance(payload) {\n  return new IncomingPhoneNumberInstance(this._version, payload, this._solution.accountSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nIncomingPhoneNumberPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nIncomingPhoneNumberPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the IncomingPhoneNumberContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.IncomingPhoneNumberInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} addressSid -\n *          The SID of the Address resource associated with the phone number\n * @property {incoming_phone_number.address_requirement} addressRequirements -\n *          Whether the phone number requires an Address registered with Twilio.\n * @property {string} apiVersion -\n *          The API version used to start a new TwiML session\n * @property {boolean} beta -\n *          Whether the phone number is new to the Twilio platform\n * @property {PhoneNumberCapabilities} capabilities -\n *          Indicate if a phone can receive calls or messages\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT that the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT that the resource was last updated\n * @property {string} friendlyName -\n *          The string that you assigned to describe the resource\n * @property {string} identitySid -\n *          The SID of the Identity resource associated with number\n * @property {string} phoneNumber - The phone number in E.164 format\n * @property {string} origin - The phone number's origin. Can be twilio or hosted.\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} smsApplicationSid -\n *          The SID of the application that handles SMS messages sent to the phone number\n * @property {string} smsFallbackMethod -\n *          The HTTP method used with sms_fallback_url\n * @property {string} smsFallbackUrl -\n *          The URL that we call when an error occurs while retrieving or executing the TwiML\n * @property {string} smsMethod - The HTTP method to use with sms_url\n * @property {string} smsUrl -\n *          The URL we call when the phone number receives an incoming SMS message\n * @property {string} statusCallback -\n *          The URL to send status information to your application\n * @property {string} statusCallbackMethod -\n *          The HTTP method we use to call status_callback\n * @property {string} trunkSid -\n *          The SID of the Trunk that handles calls to the phone number\n * @property {string} uri -\n *          The URI of the resource, relative to `https://api.twilio.com`\n * @property {incoming_phone_number.voice_receive_mode} voiceReceiveMode -\n *          The voice_receive_mode\n * @property {string} voiceApplicationSid -\n *          The SID of the application that handles calls to the phone number\n * @property {boolean} voiceCallerIdLookup - Whether to lookup the caller's name\n * @property {string} voiceFallbackMethod -\n *          The HTTP method used with voice_fallback_url\n * @property {string} voiceFallbackUrl -\n *          The URL we call when an error occurs in TwiML\n * @property {string} voiceMethod - The HTTP method used with the voice_url\n * @property {string} voiceUrl -\n *          The URL we call when the phone number receives a call\n * @property {incoming_phone_number.emergency_status} emergencyStatus -\n *          Displays if emergency calling is enabled for this number.\n * @property {string} emergencyAddressSid -\n *          The emergency address configuration to use for emergency calling\n * @property {incoming_phone_number.emergency_address_status} emergencyAddressStatus -\n *          State of the emergency address configuration for the phone number\n * @property {string} bundleSid -\n *          The SID of the Bundle resource associated with number\n * @property {string} status - The status\n *\n * @param {V2010} version - Version of the resource\n * @param {IncomingPhoneNumberPayload} payload - The instance payload\n * @param {sid} accountSid - The SID of the Account that created the resource\n * @param {sid} sid - The unique string that identifies the resource\n */\n\n/* jshint ignore:end */\n\n\nIncomingPhoneNumberInstance = function IncomingPhoneNumberInstance(version, payload, accountSid, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.addressSid = payload.address_sid; // jshint ignore:line\n\n  this.addressRequirements = payload.address_requirements; // jshint ignore:line\n\n  this.apiVersion = payload.api_version; // jshint ignore:line\n\n  this.beta = payload.beta; // jshint ignore:line\n\n  this.capabilities = payload.capabilities; // jshint ignore:line\n\n  this.dateCreated = deserialize.rfc2822DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated); // jshint ignore:line\n\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n\n  this.identitySid = payload.identity_sid; // jshint ignore:line\n\n  this.phoneNumber = payload.phone_number; // jshint ignore:line\n\n  this.origin = payload.origin; // jshint ignore:line\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.smsApplicationSid = payload.sms_application_sid; // jshint ignore:line\n\n  this.smsFallbackMethod = payload.sms_fallback_method; // jshint ignore:line\n\n  this.smsFallbackUrl = payload.sms_fallback_url; // jshint ignore:line\n\n  this.smsMethod = payload.sms_method; // jshint ignore:line\n\n  this.smsUrl = payload.sms_url; // jshint ignore:line\n\n  this.statusCallback = payload.status_callback; // jshint ignore:line\n\n  this.statusCallbackMethod = payload.status_callback_method; // jshint ignore:line\n\n  this.trunkSid = payload.trunk_sid; // jshint ignore:line\n\n  this.uri = payload.uri; // jshint ignore:line\n\n  this.voiceReceiveMode = payload.voice_receive_mode; // jshint ignore:line\n\n  this.voiceApplicationSid = payload.voice_application_sid; // jshint ignore:line\n\n  this.voiceCallerIdLookup = payload.voice_caller_id_lookup; // jshint ignore:line\n\n  this.voiceFallbackMethod = payload.voice_fallback_method; // jshint ignore:line\n\n  this.voiceFallbackUrl = payload.voice_fallback_url; // jshint ignore:line\n\n  this.voiceMethod = payload.voice_method; // jshint ignore:line\n\n  this.voiceUrl = payload.voice_url; // jshint ignore:line\n\n  this.emergencyStatus = payload.emergency_status; // jshint ignore:line\n\n  this.emergencyAddressSid = payload.emergency_address_sid; // jshint ignore:line\n\n  this.emergencyAddressStatus = payload.emergency_address_status; // jshint ignore:line\n\n  this.bundleSid = payload.bundle_sid; // jshint ignore:line\n\n  this.status = payload.status; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    accountSid: accountSid,\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(IncomingPhoneNumberInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new IncomingPhoneNumberContext(this._version, this._solution.accountSid, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * update a IncomingPhoneNumberInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.accountSid] -\n *          The SID of the Account that created the resource to update\n * @param {string} [opts.apiVersion] -\n *          The API version to use for incoming calls made to the phone number\n * @param {string} [opts.friendlyName] - A string to describe the resource\n * @param {string} [opts.smsApplicationSid] -\n *          Unique string that identifies the application\n * @param {string} [opts.smsFallbackMethod] -\n *          HTTP method used with sms_fallback_url\n * @param {string} [opts.smsFallbackUrl] -\n *          The URL we call when an error occurs while executing TwiML\n * @param {string} [opts.smsMethod] - The HTTP method to use with sms_url\n * @param {string} [opts.smsUrl] -\n *          The URL we should call when the phone number receives an incoming SMS message\n * @param {string} [opts.statusCallback] -\n *          The URL we should call to send status information to your application\n * @param {string} [opts.statusCallbackMethod] -\n *          The HTTP method we should use to call status_callback\n * @param {string} [opts.voiceApplicationSid] -\n *          The SID of the application to handle the phone number\n * @param {boolean} [opts.voiceCallerIdLookup] -\n *          Whether to lookup the caller's name\n * @param {string} [opts.voiceFallbackMethod] -\n *          The HTTP method used with fallback_url\n * @param {string} [opts.voiceFallbackUrl] -\n *          The URL we will call when an error occurs in TwiML\n * @param {string} [opts.voiceMethod] - The HTTP method used with the voice_url\n * @param {string} [opts.voiceUrl] -\n *          The URL we should call when the phone number receives a call\n * @param {incoming_phone_number.emergency_status} [opts.emergencyStatus] -\n *          Displays if emergency calling is enabled for this number.\n * @param {string} [opts.emergencyAddressSid] -\n *          The emergency address configuration to use for emergency calling\n * @param {string} [opts.trunkSid] -\n *          SID of the trunk to handle phone calls to the phone number\n * @param {incoming_phone_number.voice_receive_mode} [opts.voiceReceiveMode] -\n *          Incoming call type: fax or voice\n * @param {string} [opts.identitySid] -\n *          Unique string that identifies the identity associated with number\n * @param {string} [opts.addressSid] -\n *          The SID of the Address resource associated with the phone number\n * @param {string} [opts.bundleSid] -\n *          The SID of the Bundle resource associated with number\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed IncomingPhoneNumberInstance\n */\n\n/* jshint ignore:end */\n\nIncomingPhoneNumberInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * fetch a IncomingPhoneNumberInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed IncomingPhoneNumberInstance\n */\n\n/* jshint ignore:end */\n\n\nIncomingPhoneNumberInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * remove a IncomingPhoneNumberInstance\n *\n * @function remove\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed IncomingPhoneNumberInstance\n */\n\n/* jshint ignore:end */\n\n\nIncomingPhoneNumberInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n/* jshint ignore:start */\n\n/**\n * Access the assignedAddOns\n *\n * @function assignedAddOns\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.AssignedAddOnList}\n */\n\n/* jshint ignore:end */\n\n\nIncomingPhoneNumberInstance.prototype.assignedAddOns = function assignedAddOns() {\n  return this._proxy.assignedAddOns;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nIncomingPhoneNumberInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nIncomingPhoneNumberInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the IncomingPhoneNumberContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext\n *\n * @property {Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.AssignedAddOnList} assignedAddOns -\n *          assignedAddOns resource\n *\n * @param {V2010} version - Version of the resource\n * @param {sid} accountSid -\n *          The SID of the Account that created the resource to fetch\n * @param {sid} sid - The unique string that identifies the resource\n */\n\n/* jshint ignore:end */\n\n\nIncomingPhoneNumberContext = function IncomingPhoneNumberContext(version, accountSid, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    accountSid: accountSid,\n    sid: sid\n  };\n  this._uri = `/Accounts/${accountSid}/IncomingPhoneNumbers/${sid}.json`; // Dependents\n\n  this._assignedAddOns = undefined;\n};\n/* jshint ignore:start */\n\n/**\n * update a IncomingPhoneNumberInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.accountSid] -\n *          The SID of the Account that created the resource to update\n * @param {string} [opts.apiVersion] -\n *          The API version to use for incoming calls made to the phone number\n * @param {string} [opts.friendlyName] - A string to describe the resource\n * @param {string} [opts.smsApplicationSid] -\n *          Unique string that identifies the application\n * @param {string} [opts.smsFallbackMethod] -\n *          HTTP method used with sms_fallback_url\n * @param {string} [opts.smsFallbackUrl] -\n *          The URL we call when an error occurs while executing TwiML\n * @param {string} [opts.smsMethod] - The HTTP method to use with sms_url\n * @param {string} [opts.smsUrl] -\n *          The URL we should call when the phone number receives an incoming SMS message\n * @param {string} [opts.statusCallback] -\n *          The URL we should call to send status information to your application\n * @param {string} [opts.statusCallbackMethod] -\n *          The HTTP method we should use to call status_callback\n * @param {string} [opts.voiceApplicationSid] -\n *          The SID of the application to handle the phone number\n * @param {boolean} [opts.voiceCallerIdLookup] -\n *          Whether to lookup the caller's name\n * @param {string} [opts.voiceFallbackMethod] -\n *          The HTTP method used with fallback_url\n * @param {string} [opts.voiceFallbackUrl] -\n *          The URL we will call when an error occurs in TwiML\n * @param {string} [opts.voiceMethod] - The HTTP method used with the voice_url\n * @param {string} [opts.voiceUrl] -\n *          The URL we should call when the phone number receives a call\n * @param {incoming_phone_number.emergency_status} [opts.emergencyStatus] -\n *          Displays if emergency calling is enabled for this number.\n * @param {string} [opts.emergencyAddressSid] -\n *          The emergency address configuration to use for emergency calling\n * @param {string} [opts.trunkSid] -\n *          SID of the trunk to handle phone calls to the phone number\n * @param {incoming_phone_number.voice_receive_mode} [opts.voiceReceiveMode] -\n *          Incoming call type: fax or voice\n * @param {string} [opts.identitySid] -\n *          Unique string that identifies the identity associated with number\n * @param {string} [opts.addressSid] -\n *          The SID of the Address resource associated with the phone number\n * @param {string} [opts.bundleSid] -\n *          The SID of the Bundle resource associated with number\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed IncomingPhoneNumberInstance\n */\n\n/* jshint ignore:end */\n\n\nIncomingPhoneNumberContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'AccountSid': _.get(opts, 'accountSid'),\n    'ApiVersion': _.get(opts, 'apiVersion'),\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'SmsApplicationSid': _.get(opts, 'smsApplicationSid'),\n    'SmsFallbackMethod': _.get(opts, 'smsFallbackMethod'),\n    'SmsFallbackUrl': _.get(opts, 'smsFallbackUrl'),\n    'SmsMethod': _.get(opts, 'smsMethod'),\n    'SmsUrl': _.get(opts, 'smsUrl'),\n    'StatusCallback': _.get(opts, 'statusCallback'),\n    'StatusCallbackMethod': _.get(opts, 'statusCallbackMethod'),\n    'VoiceApplicationSid': _.get(opts, 'voiceApplicationSid'),\n    'VoiceCallerIdLookup': serialize.bool(_.get(opts, 'voiceCallerIdLookup')),\n    'VoiceFallbackMethod': _.get(opts, 'voiceFallbackMethod'),\n    'VoiceFallbackUrl': _.get(opts, 'voiceFallbackUrl'),\n    'VoiceMethod': _.get(opts, 'voiceMethod'),\n    'VoiceUrl': _.get(opts, 'voiceUrl'),\n    'EmergencyStatus': _.get(opts, 'emergencyStatus'),\n    'EmergencyAddressSid': _.get(opts, 'emergencyAddressSid'),\n    'TrunkSid': _.get(opts, 'trunkSid'),\n    'VoiceReceiveMode': _.get(opts, 'voiceReceiveMode'),\n    'IdentitySid': _.get(opts, 'identitySid'),\n    'AddressSid': _.get(opts, 'addressSid'),\n    'BundleSid': _.get(opts, 'bundleSid')\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new IncomingPhoneNumberInstance(this._version, payload, this._solution.accountSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a IncomingPhoneNumberInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed IncomingPhoneNumberInstance\n */\n\n/* jshint ignore:end */\n\n\nIncomingPhoneNumberContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new IncomingPhoneNumberInstance(this._version, payload, this._solution.accountSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * remove a IncomingPhoneNumberInstance\n *\n * @function remove\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed IncomingPhoneNumberInstance\n */\n\n/* jshint ignore:end */\n\n\nIncomingPhoneNumberContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(IncomingPhoneNumberContext.prototype, 'assignedAddOns', {\n  get: function () {\n    if (!this._assignedAddOns) {\n      this._assignedAddOns = new AssignedAddOnList(this._version, this._solution.accountSid, this._solution.sid);\n    }\n\n    return this._assignedAddOns;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\nIncomingPhoneNumberContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nIncomingPhoneNumberContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  IncomingPhoneNumberList: IncomingPhoneNumberList,\n  IncomingPhoneNumberPage: IncomingPhoneNumberPage,\n  IncomingPhoneNumberInstance: IncomingPhoneNumberInstance,\n  IncomingPhoneNumberContext: IncomingPhoneNumberContext\n};","map":{"version":3,"names":["Q","require","_","util","AssignedAddOnList","LocalList","MobileList","Page","TollFreeList","deserialize","serialize","values","IncomingPhoneNumberList","IncomingPhoneNumberPage","IncomingPhoneNumberInstance","IncomingPhoneNumberContext","version","accountSid","IncomingPhoneNumberListInstance","sid","get","_version","_solution","_uri","_local","undefined","_mobile","_tollFree","each","opts","callback","isFunction","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","error","fetchNextPage","fn","promise","then","page","instances","instance","bind","nextPage","catch","merge","list","deferred","defer","allResources","resource","push","length","resolve","reject","nodeify","data","of","bool","pageToken","pageNumber","uri","method","params","payload","getPage","targetUrl","_domain","twilio","request","create","Object","defineProperty","local","mobile","tollFree","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","account_sid","addressSid","address_sid","addressRequirements","address_requirements","apiVersion","api_version","beta","capabilities","dateCreated","rfc2822DateTime","date_created","dateUpdated","date_updated","friendlyName","friendly_name","identitySid","identity_sid","phoneNumber","phone_number","origin","smsApplicationSid","sms_application_sid","smsFallbackMethod","sms_fallback_method","smsFallbackUrl","sms_fallback_url","smsMethod","sms_method","smsUrl","sms_url","statusCallback","status_callback","statusCallbackMethod","status_callback_method","trunkSid","trunk_sid","voiceReceiveMode","voice_receive_mode","voiceApplicationSid","voice_application_sid","voiceCallerIdLookup","voice_caller_id_lookup","voiceFallbackMethod","voice_fallback_method","voiceFallbackUrl","voice_fallback_url","voiceMethod","voice_method","voiceUrl","voice_url","emergencyStatus","emergency_status","emergencyAddressSid","emergency_address_sid","emergencyAddressStatus","emergency_address_status","bundleSid","bundle_sid","status","_context","update","_proxy","fetch","remove","assignedAddOns","_assignedAddOns","module","exports"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/twilio/lib/rest/api/v2010/account/incomingPhoneNumber.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar AssignedAddOnList = require(\n    './incomingPhoneNumber/assignedAddOn').AssignedAddOnList;\nvar LocalList = require('./incomingPhoneNumber/local').LocalList;\nvar MobileList = require('./incomingPhoneNumber/mobile').MobileList;\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar TollFreeList = require('./incomingPhoneNumber/tollFree').TollFreeList;\nvar deserialize = require(\n    '../../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require('../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar IncomingPhoneNumberList;\nvar IncomingPhoneNumberPage;\nvar IncomingPhoneNumberInstance;\nvar IncomingPhoneNumberContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the IncomingPhoneNumberList\n *\n * @constructor Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid - The SID of the Account that created the resource\n */\n/* jshint ignore:end */\nIncomingPhoneNumberList = function IncomingPhoneNumberList(version, accountSid)\n                                                            {\n  /* jshint ignore:start */\n  /**\n   * @function incomingPhoneNumbers\n   * @memberof Twilio.Api.V2010.AccountContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext}\n   */\n  /* jshint ignore:end */\n  function IncomingPhoneNumberListInstance(sid) {\n    return IncomingPhoneNumberListInstance.get(sid);\n  }\n\n  IncomingPhoneNumberListInstance._version = version;\n  // Path Solution\n  IncomingPhoneNumberListInstance._solution = {accountSid: accountSid};\n  IncomingPhoneNumberListInstance._uri = `/Accounts/${accountSid}/IncomingPhoneNumbers.json`;\n\n  // Components\n  IncomingPhoneNumberListInstance._local = undefined;\n  IncomingPhoneNumberListInstance._mobile = undefined;\n  IncomingPhoneNumberListInstance._tollFree = undefined;\n\n  /* jshint ignore:start */\n  /**\n   * Streams IncomingPhoneNumberInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {boolean} [opts.beta] - Whether to include new phone numbers\n   * @param {string} [opts.friendlyName] -\n   *          A string that identifies the IncomingPhoneNumber resources to read\n   * @param {string} [opts.phoneNumber] -\n   *          The phone numbers of the IncomingPhoneNumber resources to read\n   * @param {string} [opts.origin] -\n   *          Include phone numbers based on their origin. By default, phone numbers of all origin are included.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  IncomingPhoneNumberListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists IncomingPhoneNumberInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {boolean} [opts.beta] - Whether to include new phone numbers\n   * @param {string} [opts.friendlyName] -\n   *          A string that identifies the IncomingPhoneNumber resources to read\n   * @param {string} [opts.phoneNumber] -\n   *          The phone numbers of the IncomingPhoneNumber resources to read\n   * @param {string} [opts.origin] -\n   *          Include phone numbers based on their origin. By default, phone numbers of all origin are included.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  IncomingPhoneNumberListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of IncomingPhoneNumberInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {boolean} [opts.beta] - Whether to include new phone numbers\n   * @param {string} [opts.friendlyName] -\n   *          A string that identifies the IncomingPhoneNumber resources to read\n   * @param {string} [opts.phoneNumber] -\n   *          The phone numbers of the IncomingPhoneNumber resources to read\n   * @param {string} [opts.origin] -\n   *          Include phone numbers based on their origin. By default, phone numbers of all origin are included.\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  IncomingPhoneNumberListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Beta': serialize.bool(_.get(opts, 'beta')),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'PhoneNumber': _.get(opts, 'phoneNumber'),\n      'Origin': _.get(opts, 'origin'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new IncomingPhoneNumberPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of IncomingPhoneNumberInstance records from the\n   * API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  IncomingPhoneNumberListInstance.getPage = function getPage(targetUrl, callback)\n                                                              {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new IncomingPhoneNumberPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * create a IncomingPhoneNumberInstance\n   *\n   * @function create\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.apiVersion] -\n   *          The API version to use for incoming calls made to the new phone number\n   * @param {string} [opts.friendlyName] - A string to describe the new phone number\n   * @param {string} [opts.smsApplicationSid] -\n   *          The SID of the application to handle SMS messages\n   * @param {string} [opts.smsFallbackMethod] -\n   *          HTTP method used with sms_fallback_url\n   * @param {string} [opts.smsFallbackUrl] -\n   *          The URL we call when an error occurs while executing TwiML\n   * @param {string} [opts.smsMethod] - The HTTP method to use with sms url\n   * @param {string} [opts.smsUrl] -\n   *          The URL we should call when the new phone number receives an incoming SMS message\n   * @param {string} [opts.statusCallback] -\n   *          The URL we should call to send status information to your application\n   * @param {string} [opts.statusCallbackMethod] -\n   *          HTTP method we should use to call status_callback\n   * @param {string} [opts.voiceApplicationSid] -\n   *          The SID of the application to handle the new phone number\n   * @param {boolean} [opts.voiceCallerIdLookup] -\n   *          Whether to lookup the caller's name\n   * @param {string} [opts.voiceFallbackMethod] -\n   *          The HTTP method used with voice_fallback_url\n   * @param {string} [opts.voiceFallbackUrl] -\n   *          The URL we will call when an error occurs in TwiML\n   * @param {string} [opts.voiceMethod] - The HTTP method used with the voice_url\n   * @param {string} [opts.voiceUrl] -\n   *          The URL we should call when the phone number receives a call\n   * @param {incoming_phone_number.emergency_status} [opts.emergencyStatus] -\n   *          Displays if emergency calling is enabled for this number.\n   * @param {string} [opts.emergencyAddressSid] -\n   *          The emergency address configuration to use for emergency calling\n   * @param {string} [opts.trunkSid] -\n   *          SID of the trunk to handle calls to the new phone number\n   * @param {string} [opts.identitySid] -\n   *          The SID of the Identity resource to associate with the new phone number\n   * @param {string} [opts.addressSid] -\n   *          The SID of the Address resource associated with the phone number\n   * @param {incoming_phone_number.voice_receive_mode} [opts.voiceReceiveMode] -\n   *          Incoming call type: fax or voice\n   * @param {string} [opts.bundleSid] -\n   *          The SID of the Bundle resource associated with number\n   * @param {string} [opts.phoneNumber] -\n   *          The phone number to purchase in E.164 format\n   * @param {string} [opts.areaCode] - The desired area code for the new phone number\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed IncomingPhoneNumberInstance\n   */\n  /* jshint ignore:end */\n  IncomingPhoneNumberListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PhoneNumber': _.get(opts, 'phoneNumber'),\n      'AreaCode': _.get(opts, 'areaCode'),\n      'ApiVersion': _.get(opts, 'apiVersion'),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'SmsApplicationSid': _.get(opts, 'smsApplicationSid'),\n      'SmsFallbackMethod': _.get(opts, 'smsFallbackMethod'),\n      'SmsFallbackUrl': _.get(opts, 'smsFallbackUrl'),\n      'SmsMethod': _.get(opts, 'smsMethod'),\n      'SmsUrl': _.get(opts, 'smsUrl'),\n      'StatusCallback': _.get(opts, 'statusCallback'),\n      'StatusCallbackMethod': _.get(opts, 'statusCallbackMethod'),\n      'VoiceApplicationSid': _.get(opts, 'voiceApplicationSid'),\n      'VoiceCallerIdLookup': serialize.bool(_.get(opts, 'voiceCallerIdLookup')),\n      'VoiceFallbackMethod': _.get(opts, 'voiceFallbackMethod'),\n      'VoiceFallbackUrl': _.get(opts, 'voiceFallbackUrl'),\n      'VoiceMethod': _.get(opts, 'voiceMethod'),\n      'VoiceUrl': _.get(opts, 'voiceUrl'),\n      'EmergencyStatus': _.get(opts, 'emergencyStatus'),\n      'EmergencyAddressSid': _.get(opts, 'emergencyAddressSid'),\n      'TrunkSid': _.get(opts, 'trunkSid'),\n      'IdentitySid': _.get(opts, 'identitySid'),\n      'AddressSid': _.get(opts, 'addressSid'),\n      'VoiceReceiveMode': _.get(opts, 'voiceReceiveMode'),\n      'BundleSid': _.get(opts, 'bundleSid')\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new IncomingPhoneNumberInstance(\n        this._version,\n        payload,\n        this._solution.accountSid,\n        this._solution.sid\n      ));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a incoming_phone_number\n   *\n   * @function get\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList#\n   *\n   * @param {string} sid - The unique string that identifies the resource\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext}\n   */\n  /* jshint ignore:end */\n  IncomingPhoneNumberListInstance.get = function get(sid) {\n    return new IncomingPhoneNumberContext(this._version, this._solution.accountSid, sid);\n  };\n\n  Object.defineProperty(IncomingPhoneNumberListInstance,\n    'local', {\n      get: function local() {\n        if (!this._local) {\n          this._local = new LocalList(this._version, this._solution.accountSid);\n        }\n\n        return this._local;\n      }\n  });\n\n  Object.defineProperty(IncomingPhoneNumberListInstance,\n    'mobile', {\n      get: function mobile() {\n        if (!this._mobile) {\n          this._mobile = new MobileList(this._version, this._solution.accountSid);\n        }\n\n        return this._mobile;\n      }\n  });\n\n  Object.defineProperty(IncomingPhoneNumberListInstance,\n    'tollFree', {\n      get: function tollFree() {\n        if (!this._tollFree) {\n          this._tollFree = new TollFreeList(this._version, this._solution.accountSid);\n        }\n\n        return this._tollFree;\n      }\n  });\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  IncomingPhoneNumberListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  IncomingPhoneNumberListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return IncomingPhoneNumberListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the IncomingPhoneNumberPage\n *\n * @constructor Twilio.Api.V2010.AccountContext.IncomingPhoneNumberPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {IncomingPhoneNumberSolution} solution - Path solution\n *\n * @returns IncomingPhoneNumberPage\n */\n/* jshint ignore:end */\nIncomingPhoneNumberPage = function IncomingPhoneNumberPage(version, response,\n                                                            solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(IncomingPhoneNumberPage.prototype, Page.prototype);\nIncomingPhoneNumberPage.prototype.constructor = IncomingPhoneNumberPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of IncomingPhoneNumberInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberPage#\n *\n * @param {IncomingPhoneNumberPayload} payload - Payload response from the API\n *\n * @returns IncomingPhoneNumberInstance\n */\n/* jshint ignore:end */\nIncomingPhoneNumberPage.prototype.getInstance = function getInstance(payload) {\n  return new IncomingPhoneNumberInstance(this._version, payload, this._solution.accountSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nIncomingPhoneNumberPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nIncomingPhoneNumberPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the IncomingPhoneNumberContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.IncomingPhoneNumberInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} addressSid -\n *          The SID of the Address resource associated with the phone number\n * @property {incoming_phone_number.address_requirement} addressRequirements -\n *          Whether the phone number requires an Address registered with Twilio.\n * @property {string} apiVersion -\n *          The API version used to start a new TwiML session\n * @property {boolean} beta -\n *          Whether the phone number is new to the Twilio platform\n * @property {PhoneNumberCapabilities} capabilities -\n *          Indicate if a phone can receive calls or messages\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT that the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT that the resource was last updated\n * @property {string} friendlyName -\n *          The string that you assigned to describe the resource\n * @property {string} identitySid -\n *          The SID of the Identity resource associated with number\n * @property {string} phoneNumber - The phone number in E.164 format\n * @property {string} origin - The phone number's origin. Can be twilio or hosted.\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} smsApplicationSid -\n *          The SID of the application that handles SMS messages sent to the phone number\n * @property {string} smsFallbackMethod -\n *          The HTTP method used with sms_fallback_url\n * @property {string} smsFallbackUrl -\n *          The URL that we call when an error occurs while retrieving or executing the TwiML\n * @property {string} smsMethod - The HTTP method to use with sms_url\n * @property {string} smsUrl -\n *          The URL we call when the phone number receives an incoming SMS message\n * @property {string} statusCallback -\n *          The URL to send status information to your application\n * @property {string} statusCallbackMethod -\n *          The HTTP method we use to call status_callback\n * @property {string} trunkSid -\n *          The SID of the Trunk that handles calls to the phone number\n * @property {string} uri -\n *          The URI of the resource, relative to `https://api.twilio.com`\n * @property {incoming_phone_number.voice_receive_mode} voiceReceiveMode -\n *          The voice_receive_mode\n * @property {string} voiceApplicationSid -\n *          The SID of the application that handles calls to the phone number\n * @property {boolean} voiceCallerIdLookup - Whether to lookup the caller's name\n * @property {string} voiceFallbackMethod -\n *          The HTTP method used with voice_fallback_url\n * @property {string} voiceFallbackUrl -\n *          The URL we call when an error occurs in TwiML\n * @property {string} voiceMethod - The HTTP method used with the voice_url\n * @property {string} voiceUrl -\n *          The URL we call when the phone number receives a call\n * @property {incoming_phone_number.emergency_status} emergencyStatus -\n *          Displays if emergency calling is enabled for this number.\n * @property {string} emergencyAddressSid -\n *          The emergency address configuration to use for emergency calling\n * @property {incoming_phone_number.emergency_address_status} emergencyAddressStatus -\n *          State of the emergency address configuration for the phone number\n * @property {string} bundleSid -\n *          The SID of the Bundle resource associated with number\n * @property {string} status - The status\n *\n * @param {V2010} version - Version of the resource\n * @param {IncomingPhoneNumberPayload} payload - The instance payload\n * @param {sid} accountSid - The SID of the Account that created the resource\n * @param {sid} sid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nIncomingPhoneNumberInstance = function IncomingPhoneNumberInstance(version,\n    payload, accountSid, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.addressSid = payload.address_sid; // jshint ignore:line\n  this.addressRequirements = payload.address_requirements; // jshint ignore:line\n  this.apiVersion = payload.api_version; // jshint ignore:line\n  this.beta = payload.beta; // jshint ignore:line\n  this.capabilities = payload.capabilities; // jshint ignore:line\n  this.dateCreated = deserialize.rfc2822DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated); // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.identitySid = payload.identity_sid; // jshint ignore:line\n  this.phoneNumber = payload.phone_number; // jshint ignore:line\n  this.origin = payload.origin; // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n  this.smsApplicationSid = payload.sms_application_sid; // jshint ignore:line\n  this.smsFallbackMethod = payload.sms_fallback_method; // jshint ignore:line\n  this.smsFallbackUrl = payload.sms_fallback_url; // jshint ignore:line\n  this.smsMethod = payload.sms_method; // jshint ignore:line\n  this.smsUrl = payload.sms_url; // jshint ignore:line\n  this.statusCallback = payload.status_callback; // jshint ignore:line\n  this.statusCallbackMethod = payload.status_callback_method; // jshint ignore:line\n  this.trunkSid = payload.trunk_sid; // jshint ignore:line\n  this.uri = payload.uri; // jshint ignore:line\n  this.voiceReceiveMode = payload.voice_receive_mode; // jshint ignore:line\n  this.voiceApplicationSid = payload.voice_application_sid; // jshint ignore:line\n  this.voiceCallerIdLookup = payload.voice_caller_id_lookup; // jshint ignore:line\n  this.voiceFallbackMethod = payload.voice_fallback_method; // jshint ignore:line\n  this.voiceFallbackUrl = payload.voice_fallback_url; // jshint ignore:line\n  this.voiceMethod = payload.voice_method; // jshint ignore:line\n  this.voiceUrl = payload.voice_url; // jshint ignore:line\n  this.emergencyStatus = payload.emergency_status; // jshint ignore:line\n  this.emergencyAddressSid = payload.emergency_address_sid; // jshint ignore:line\n  this.emergencyAddressStatus = payload.emergency_address_status; // jshint ignore:line\n  this.bundleSid = payload.bundle_sid; // jshint ignore:line\n  this.status = payload.status; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {accountSid: accountSid, sid: sid || this.sid, };\n};\n\nObject.defineProperty(IncomingPhoneNumberInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new IncomingPhoneNumberContext(\n          this._version,\n          this._solution.accountSid,\n          this._solution.sid\n        );\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * update a IncomingPhoneNumberInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.accountSid] -\n *          The SID of the Account that created the resource to update\n * @param {string} [opts.apiVersion] -\n *          The API version to use for incoming calls made to the phone number\n * @param {string} [opts.friendlyName] - A string to describe the resource\n * @param {string} [opts.smsApplicationSid] -\n *          Unique string that identifies the application\n * @param {string} [opts.smsFallbackMethod] -\n *          HTTP method used with sms_fallback_url\n * @param {string} [opts.smsFallbackUrl] -\n *          The URL we call when an error occurs while executing TwiML\n * @param {string} [opts.smsMethod] - The HTTP method to use with sms_url\n * @param {string} [opts.smsUrl] -\n *          The URL we should call when the phone number receives an incoming SMS message\n * @param {string} [opts.statusCallback] -\n *          The URL we should call to send status information to your application\n * @param {string} [opts.statusCallbackMethod] -\n *          The HTTP method we should use to call status_callback\n * @param {string} [opts.voiceApplicationSid] -\n *          The SID of the application to handle the phone number\n * @param {boolean} [opts.voiceCallerIdLookup] -\n *          Whether to lookup the caller's name\n * @param {string} [opts.voiceFallbackMethod] -\n *          The HTTP method used with fallback_url\n * @param {string} [opts.voiceFallbackUrl] -\n *          The URL we will call when an error occurs in TwiML\n * @param {string} [opts.voiceMethod] - The HTTP method used with the voice_url\n * @param {string} [opts.voiceUrl] -\n *          The URL we should call when the phone number receives a call\n * @param {incoming_phone_number.emergency_status} [opts.emergencyStatus] -\n *          Displays if emergency calling is enabled for this number.\n * @param {string} [opts.emergencyAddressSid] -\n *          The emergency address configuration to use for emergency calling\n * @param {string} [opts.trunkSid] -\n *          SID of the trunk to handle phone calls to the phone number\n * @param {incoming_phone_number.voice_receive_mode} [opts.voiceReceiveMode] -\n *          Incoming call type: fax or voice\n * @param {string} [opts.identitySid] -\n *          Unique string that identifies the identity associated with number\n * @param {string} [opts.addressSid] -\n *          The SID of the Address resource associated with the phone number\n * @param {string} [opts.bundleSid] -\n *          The SID of the Bundle resource associated with number\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed IncomingPhoneNumberInstance\n */\n/* jshint ignore:end */\nIncomingPhoneNumberInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a IncomingPhoneNumberInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed IncomingPhoneNumberInstance\n */\n/* jshint ignore:end */\nIncomingPhoneNumberInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a IncomingPhoneNumberInstance\n *\n * @function remove\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed IncomingPhoneNumberInstance\n */\n/* jshint ignore:end */\nIncomingPhoneNumberInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the assignedAddOns\n *\n * @function assignedAddOns\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberInstance#\n *\n * @returns {Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.AssignedAddOnList}\n */\n/* jshint ignore:end */\nIncomingPhoneNumberInstance.prototype.assignedAddOns = function assignedAddOns()\n    {\n  return this._proxy.assignedAddOns;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nIncomingPhoneNumberInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nIncomingPhoneNumberInstance.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the IncomingPhoneNumberContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext\n *\n * @property {Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext.AssignedAddOnList} assignedAddOns -\n *          assignedAddOns resource\n *\n * @param {V2010} version - Version of the resource\n * @param {sid} accountSid -\n *          The SID of the Account that created the resource to fetch\n * @param {sid} sid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nIncomingPhoneNumberContext = function IncomingPhoneNumberContext(version,\n    accountSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {accountSid: accountSid, sid: sid, };\n  this._uri = `/Accounts/${accountSid}/IncomingPhoneNumbers/${sid}.json`;\n\n  // Dependents\n  this._assignedAddOns = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * update a IncomingPhoneNumberInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.accountSid] -\n *          The SID of the Account that created the resource to update\n * @param {string} [opts.apiVersion] -\n *          The API version to use for incoming calls made to the phone number\n * @param {string} [opts.friendlyName] - A string to describe the resource\n * @param {string} [opts.smsApplicationSid] -\n *          Unique string that identifies the application\n * @param {string} [opts.smsFallbackMethod] -\n *          HTTP method used with sms_fallback_url\n * @param {string} [opts.smsFallbackUrl] -\n *          The URL we call when an error occurs while executing TwiML\n * @param {string} [opts.smsMethod] - The HTTP method to use with sms_url\n * @param {string} [opts.smsUrl] -\n *          The URL we should call when the phone number receives an incoming SMS message\n * @param {string} [opts.statusCallback] -\n *          The URL we should call to send status information to your application\n * @param {string} [opts.statusCallbackMethod] -\n *          The HTTP method we should use to call status_callback\n * @param {string} [opts.voiceApplicationSid] -\n *          The SID of the application to handle the phone number\n * @param {boolean} [opts.voiceCallerIdLookup] -\n *          Whether to lookup the caller's name\n * @param {string} [opts.voiceFallbackMethod] -\n *          The HTTP method used with fallback_url\n * @param {string} [opts.voiceFallbackUrl] -\n *          The URL we will call when an error occurs in TwiML\n * @param {string} [opts.voiceMethod] - The HTTP method used with the voice_url\n * @param {string} [opts.voiceUrl] -\n *          The URL we should call when the phone number receives a call\n * @param {incoming_phone_number.emergency_status} [opts.emergencyStatus] -\n *          Displays if emergency calling is enabled for this number.\n * @param {string} [opts.emergencyAddressSid] -\n *          The emergency address configuration to use for emergency calling\n * @param {string} [opts.trunkSid] -\n *          SID of the trunk to handle phone calls to the phone number\n * @param {incoming_phone_number.voice_receive_mode} [opts.voiceReceiveMode] -\n *          Incoming call type: fax or voice\n * @param {string} [opts.identitySid] -\n *          Unique string that identifies the identity associated with number\n * @param {string} [opts.addressSid] -\n *          The SID of the Address resource associated with the phone number\n * @param {string} [opts.bundleSid] -\n *          The SID of the Bundle resource associated with number\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed IncomingPhoneNumberInstance\n */\n/* jshint ignore:end */\nIncomingPhoneNumberContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'AccountSid': _.get(opts, 'accountSid'),\n    'ApiVersion': _.get(opts, 'apiVersion'),\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'SmsApplicationSid': _.get(opts, 'smsApplicationSid'),\n    'SmsFallbackMethod': _.get(opts, 'smsFallbackMethod'),\n    'SmsFallbackUrl': _.get(opts, 'smsFallbackUrl'),\n    'SmsMethod': _.get(opts, 'smsMethod'),\n    'SmsUrl': _.get(opts, 'smsUrl'),\n    'StatusCallback': _.get(opts, 'statusCallback'),\n    'StatusCallbackMethod': _.get(opts, 'statusCallbackMethod'),\n    'VoiceApplicationSid': _.get(opts, 'voiceApplicationSid'),\n    'VoiceCallerIdLookup': serialize.bool(_.get(opts, 'voiceCallerIdLookup')),\n    'VoiceFallbackMethod': _.get(opts, 'voiceFallbackMethod'),\n    'VoiceFallbackUrl': _.get(opts, 'voiceFallbackUrl'),\n    'VoiceMethod': _.get(opts, 'voiceMethod'),\n    'VoiceUrl': _.get(opts, 'voiceUrl'),\n    'EmergencyStatus': _.get(opts, 'emergencyStatus'),\n    'EmergencyAddressSid': _.get(opts, 'emergencyAddressSid'),\n    'TrunkSid': _.get(opts, 'trunkSid'),\n    'VoiceReceiveMode': _.get(opts, 'voiceReceiveMode'),\n    'IdentitySid': _.get(opts, 'identitySid'),\n    'AddressSid': _.get(opts, 'addressSid'),\n    'BundleSid': _.get(opts, 'bundleSid')\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new IncomingPhoneNumberInstance(\n      this._version,\n      payload,\n      this._solution.accountSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a IncomingPhoneNumberInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed IncomingPhoneNumberInstance\n */\n/* jshint ignore:end */\nIncomingPhoneNumberContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new IncomingPhoneNumberInstance(\n      this._version,\n      payload,\n      this._solution.accountSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a IncomingPhoneNumberInstance\n *\n * @function remove\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed IncomingPhoneNumberInstance\n */\n/* jshint ignore:end */\nIncomingPhoneNumberContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(IncomingPhoneNumberContext.prototype,\n  'assignedAddOns', {\n    get: function() {\n      if (!this._assignedAddOns) {\n        this._assignedAddOns = new AssignedAddOnList(\n          this._version,\n          this._solution.accountSid,\n          this._solution.sid\n        );\n      }\n      return this._assignedAddOns;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.IncomingPhoneNumberContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nIncomingPhoneNumberContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nIncomingPhoneNumberContext.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  IncomingPhoneNumberList: IncomingPhoneNumberList,\n  IncomingPhoneNumberPage: IncomingPhoneNumberPage,\n  IncomingPhoneNumberInstance: IncomingPhoneNumberInstance,\n  IncomingPhoneNumberContext: IncomingPhoneNumberContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}