{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../base/values');\n/* jshint ignore:line */\n\n\nvar TrunkList;\nvar TrunkPage;\nvar TrunkInstance;\nvar TrunkContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the TrunkList\n *\n * @constructor Twilio.Routes.V2.TrunkList\n *\n * @param {Twilio.Routes.V2} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nTrunkList = function TrunkList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function trunks\n   * @memberof Twilio.Routes.V2#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Routes.V2.TrunkContext}\n   */\n\n  /* jshint ignore:end */\n  function TrunkListInstance(sid) {\n    return TrunkListInstance.get(sid);\n  }\n\n  TrunkListInstance._version = version; // Path Solution\n\n  TrunkListInstance._solution = {};\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a trunk\n   *\n   * @function get\n   * @memberof Twilio.Routes.V2.TrunkList#\n   *\n   * @param {string} sipTrunkDomain - The SIP Trunk\n   *\n   * @returns {Twilio.Routes.V2.TrunkContext}\n   */\n\n  /* jshint ignore:end */\n\n  TrunkListInstance.get = function get(sipTrunkDomain) {\n    return new TrunkContext(this._version, sipTrunkDomain);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Routes.V2.TrunkList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  TrunkListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  TrunkListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return TrunkListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the TrunkPage\n *\n * @constructor Twilio.Routes.V2.TrunkPage\n *\n * @param {V2} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {TrunkSolution} solution - Path solution\n *\n * @returns TrunkPage\n */\n\n/* jshint ignore:end */\n\n\nTrunkPage = function TrunkPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(TrunkPage.prototype, Page.prototype);\n\nTrunkPage.prototype.constructor = TrunkPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of TrunkInstance\n *\n * @function getInstance\n * @memberof Twilio.Routes.V2.TrunkPage#\n *\n * @param {TrunkPayload} payload - Payload response from the API\n *\n * @returns TrunkInstance\n */\n\n/* jshint ignore:end */\n\nTrunkPage.prototype.getInstance = function getInstance(payload) {\n  return new TrunkInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Routes.V2.TrunkPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nTrunkPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nTrunkPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the TrunkContext\n *\n * @constructor Twilio.Routes.V2.TrunkInstance\n *\n * @property {string} sipTrunkDomain - The SIP Trunk\n * @property {string} url - The absolute URL of the resource\n * @property {string} sid -\n *          A string that uniquely identifies the Inbound Processing Region assignments for this SIP Trunk.\n * @property {string} accountSid - Account Sid.\n * @property {string} friendlyName -\n *          A human readable description of the Inbound Processing Region assignments for this SIP Trunk.\n * @property {string} voiceRegion -\n *          The Inbound Processing Region used for this SIP Trunk for voice.\n * @property {Date} dateCreated -\n *          The date that this SIP Trunk was assigned an Inbound Processing Region.\n * @property {Date} dateUpdated -\n *          The date that the Inbound Processing Region was updated for this SIP Trunk.\n *\n * @param {V2} version - Version of the resource\n * @param {TrunkPayload} payload - The instance payload\n * @param {string} sipTrunkDomain - The SIP Trunk\n */\n\n/* jshint ignore:end */\n\n\nTrunkInstance = function TrunkInstance(version, payload, sipTrunkDomain) {\n  this._version = version; // Marshaled Properties\n\n  this.sipTrunkDomain = payload.sip_trunk_domain; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n\n  this.voiceRegion = payload.voice_region; // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    sipTrunkDomain: sipTrunkDomain || this.sipTrunkDomain\n  };\n};\n\nObject.defineProperty(TrunkInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new TrunkContext(this._version, this._solution.sipTrunkDomain);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * create a TrunkInstance\n *\n * @function create\n * @memberof Twilio.Routes.V2.TrunkInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.voiceRegion] -\n *          The Inbound Processing Region used for this SIP Trunk for voice\n * @param {string} [opts.friendlyName] -\n *          A human readable description of this resource.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TrunkInstance\n */\n\n/* jshint ignore:end */\n\nTrunkInstance.prototype.create = function create(opts, callback) {\n  return this._proxy.create(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * update a TrunkInstance\n *\n * @function update\n * @memberof Twilio.Routes.V2.TrunkInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.voiceRegion] -\n *          The Inbound Processing Region used for this SIP Trunk for voice\n * @param {string} [opts.friendlyName] -\n *          A human readable description of this resource.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TrunkInstance\n */\n\n/* jshint ignore:end */\n\n\nTrunkInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * fetch a TrunkInstance\n *\n * @function fetch\n * @memberof Twilio.Routes.V2.TrunkInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TrunkInstance\n */\n\n/* jshint ignore:end */\n\n\nTrunkInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Routes.V2.TrunkInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nTrunkInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nTrunkInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the TrunkContext\n *\n * @constructor Twilio.Routes.V2.TrunkContext\n *\n * @param {V2} version - Version of the resource\n * @param {string} sipTrunkDomain - The SIP Trunk\n */\n\n/* jshint ignore:end */\n\n\nTrunkContext = function TrunkContext(version, sipTrunkDomain) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    sipTrunkDomain: sipTrunkDomain\n  };\n  this._uri = `/Trunks/${sipTrunkDomain}`;\n};\n/* jshint ignore:start */\n\n/**\n * create a TrunkInstance\n *\n * @function create\n * @memberof Twilio.Routes.V2.TrunkContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.voiceRegion] -\n *          The Inbound Processing Region used for this SIP Trunk for voice\n * @param {string} [opts.friendlyName] -\n *          A human readable description of this resource.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TrunkInstance\n */\n\n/* jshint ignore:end */\n\n\nTrunkContext.prototype.create = function create(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'VoiceRegion': _.get(opts, 'voiceRegion'),\n    'FriendlyName': _.get(opts, 'friendlyName')\n  });\n\n  var promise = this._version.create({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new TrunkInstance(this._version, payload, this._solution.sipTrunkDomain));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * update a TrunkInstance\n *\n * @function update\n * @memberof Twilio.Routes.V2.TrunkContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.voiceRegion] -\n *          The Inbound Processing Region used for this SIP Trunk for voice\n * @param {string} [opts.friendlyName] -\n *          A human readable description of this resource.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TrunkInstance\n */\n\n/* jshint ignore:end */\n\n\nTrunkContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'VoiceRegion': _.get(opts, 'voiceRegion'),\n    'FriendlyName': _.get(opts, 'friendlyName')\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new TrunkInstance(this._version, payload, this._solution.sipTrunkDomain));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a TrunkInstance\n *\n * @function fetch\n * @memberof Twilio.Routes.V2.TrunkContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TrunkInstance\n */\n\n/* jshint ignore:end */\n\n\nTrunkContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new TrunkInstance(this._version, payload, this._solution.sipTrunkDomain));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Routes.V2.TrunkContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nTrunkContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nTrunkContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  TrunkList: TrunkList,\n  TrunkPage: TrunkPage,\n  TrunkInstance: TrunkInstance,\n  TrunkContext: TrunkContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","deserialize","values","TrunkList","TrunkPage","TrunkInstance","TrunkContext","version","TrunkListInstance","sid","get","_version","_solution","sipTrunkDomain","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","sip_trunk_domain","url","accountSid","account_sid","friendlyName","friendly_name","voiceRegion","voice_region","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","_context","undefined","Object","defineProperty","create","opts","callback","_proxy","update","fetch","_uri","deferred","defer","data","of","promise","uri","method","then","resolve","bind","catch","error","reject","nodeify","module","exports"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/twilio/lib/rest/routes/v2/trunk.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar TrunkList;\nvar TrunkPage;\nvar TrunkInstance;\nvar TrunkContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the TrunkList\n *\n * @constructor Twilio.Routes.V2.TrunkList\n *\n * @param {Twilio.Routes.V2} version - Version of the resource\n */\n/* jshint ignore:end */\nTrunkList = function TrunkList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function trunks\n   * @memberof Twilio.Routes.V2#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Routes.V2.TrunkContext}\n   */\n  /* jshint ignore:end */\n  function TrunkListInstance(sid) {\n    return TrunkListInstance.get(sid);\n  }\n\n  TrunkListInstance._version = version;\n  // Path Solution\n  TrunkListInstance._solution = {};\n  /* jshint ignore:start */\n  /**\n   * Constructs a trunk\n   *\n   * @function get\n   * @memberof Twilio.Routes.V2.TrunkList#\n   *\n   * @param {string} sipTrunkDomain - The SIP Trunk\n   *\n   * @returns {Twilio.Routes.V2.TrunkContext}\n   */\n  /* jshint ignore:end */\n  TrunkListInstance.get = function get(sipTrunkDomain) {\n    return new TrunkContext(this._version, sipTrunkDomain);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Routes.V2.TrunkList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  TrunkListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  TrunkListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return TrunkListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the TrunkPage\n *\n * @constructor Twilio.Routes.V2.TrunkPage\n *\n * @param {V2} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {TrunkSolution} solution - Path solution\n *\n * @returns TrunkPage\n */\n/* jshint ignore:end */\nTrunkPage = function TrunkPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(TrunkPage.prototype, Page.prototype);\nTrunkPage.prototype.constructor = TrunkPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of TrunkInstance\n *\n * @function getInstance\n * @memberof Twilio.Routes.V2.TrunkPage#\n *\n * @param {TrunkPayload} payload - Payload response from the API\n *\n * @returns TrunkInstance\n */\n/* jshint ignore:end */\nTrunkPage.prototype.getInstance = function getInstance(payload) {\n  return new TrunkInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Routes.V2.TrunkPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTrunkPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nTrunkPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the TrunkContext\n *\n * @constructor Twilio.Routes.V2.TrunkInstance\n *\n * @property {string} sipTrunkDomain - The SIP Trunk\n * @property {string} url - The absolute URL of the resource\n * @property {string} sid -\n *          A string that uniquely identifies the Inbound Processing Region assignments for this SIP Trunk.\n * @property {string} accountSid - Account Sid.\n * @property {string} friendlyName -\n *          A human readable description of the Inbound Processing Region assignments for this SIP Trunk.\n * @property {string} voiceRegion -\n *          The Inbound Processing Region used for this SIP Trunk for voice.\n * @property {Date} dateCreated -\n *          The date that this SIP Trunk was assigned an Inbound Processing Region.\n * @property {Date} dateUpdated -\n *          The date that the Inbound Processing Region was updated for this SIP Trunk.\n *\n * @param {V2} version - Version of the resource\n * @param {TrunkPayload} payload - The instance payload\n * @param {string} sipTrunkDomain - The SIP Trunk\n */\n/* jshint ignore:end */\nTrunkInstance = function TrunkInstance(version, payload, sipTrunkDomain) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sipTrunkDomain = payload.sip_trunk_domain; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.voiceRegion = payload.voice_region; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {sipTrunkDomain: sipTrunkDomain || this.sipTrunkDomain, };\n};\n\nObject.defineProperty(TrunkInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new TrunkContext(this._version, this._solution.sipTrunkDomain);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * create a TrunkInstance\n *\n * @function create\n * @memberof Twilio.Routes.V2.TrunkInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.voiceRegion] -\n *          The Inbound Processing Region used for this SIP Trunk for voice\n * @param {string} [opts.friendlyName] -\n *          A human readable description of this resource.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TrunkInstance\n */\n/* jshint ignore:end */\nTrunkInstance.prototype.create = function create(opts, callback) {\n  return this._proxy.create(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a TrunkInstance\n *\n * @function update\n * @memberof Twilio.Routes.V2.TrunkInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.voiceRegion] -\n *          The Inbound Processing Region used for this SIP Trunk for voice\n * @param {string} [opts.friendlyName] -\n *          A human readable description of this resource.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TrunkInstance\n */\n/* jshint ignore:end */\nTrunkInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a TrunkInstance\n *\n * @function fetch\n * @memberof Twilio.Routes.V2.TrunkInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TrunkInstance\n */\n/* jshint ignore:end */\nTrunkInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Routes.V2.TrunkInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTrunkInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nTrunkInstance.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the TrunkContext\n *\n * @constructor Twilio.Routes.V2.TrunkContext\n *\n * @param {V2} version - Version of the resource\n * @param {string} sipTrunkDomain - The SIP Trunk\n */\n/* jshint ignore:end */\nTrunkContext = function TrunkContext(version, sipTrunkDomain) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {sipTrunkDomain: sipTrunkDomain, };\n  this._uri = `/Trunks/${sipTrunkDomain}`;\n};\n\n/* jshint ignore:start */\n/**\n * create a TrunkInstance\n *\n * @function create\n * @memberof Twilio.Routes.V2.TrunkContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.voiceRegion] -\n *          The Inbound Processing Region used for this SIP Trunk for voice\n * @param {string} [opts.friendlyName] -\n *          A human readable description of this resource.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TrunkInstance\n */\n/* jshint ignore:end */\nTrunkContext.prototype.create = function create(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'VoiceRegion': _.get(opts, 'voiceRegion'),\n    'FriendlyName': _.get(opts, 'friendlyName')\n  });\n\n  var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new TrunkInstance(this._version, payload, this._solution.sipTrunkDomain));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a TrunkInstance\n *\n * @function update\n * @memberof Twilio.Routes.V2.TrunkContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.voiceRegion] -\n *          The Inbound Processing Region used for this SIP Trunk for voice\n * @param {string} [opts.friendlyName] -\n *          A human readable description of this resource.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TrunkInstance\n */\n/* jshint ignore:end */\nTrunkContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'VoiceRegion': _.get(opts, 'voiceRegion'),\n    'FriendlyName': _.get(opts, 'friendlyName')\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new TrunkInstance(this._version, payload, this._solution.sipTrunkDomain));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a TrunkInstance\n *\n * @function fetch\n * @memberof Twilio.Routes.V2.TrunkContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TrunkInstance\n */\n/* jshint ignore:end */\nTrunkContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new TrunkInstance(this._version, payload, this._solution.sipTrunkDomain));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Routes.V2.TrunkContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTrunkContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nTrunkContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  TrunkList: TrunkList,\n  TrunkPage: TrunkPage,\n  TrunkInstance: TrunkInstance,\n  TrunkContext: TrunkContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}