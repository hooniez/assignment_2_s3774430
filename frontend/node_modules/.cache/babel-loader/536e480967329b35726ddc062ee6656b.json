{"ast":null,"code":"var _jsxFileName = \"/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/Posts.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport PostForm from \"./PostForm\";\nimport { Container } from \"react-bootstrap\";\nimport { useOutletContext } from \"react-router-dom\";\nimport Post from \"./Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst numPosts = 5;\nexport default function Posts() {\n  _s();\n\n  var _JSON$parse;\n\n  const [user, dispatchUser] = useOutletContext(); // First read posts from localStorage if any. Otherwise, initiate posts with an empty array\n\n  const [posts, setPosts] = React.useState((_JSON$parse = JSON.parse(localStorage.getItem(\"posts\"))) !== null && _JSON$parse !== void 0 ? _JSON$parse : []);\n\n  const addPost = (item, isComment, parentPostId) => {\n    setPosts([...posts, item]);\n    dispatchUser({\n      type: \"ADD_POST\",\n      payload: posts.length\n    });\n\n    if (isComment) {\n      posts[parentPost];\n    }\n  };\n\n  const removePost = id => {\n    posts[id].isDeleted = true;\n    setPosts([...posts]);\n    dispatchUser({\n      type: \"DELETE_POST\",\n      payload: id\n    });\n  };\n\n  const editPost = (id, text) => {\n    posts[id].text = text;\n    setPosts([...posts]);\n  };\n\n  React.useEffect(() => {\n    // TODO: write a more efficient code\n    localStorage.setItem(\"posts\", JSON.stringify(posts));\n  }, [posts]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"my-5\",\n    children: [/*#__PURE__*/_jsxDEV(PostForm, {\n      user: user,\n      dispatchUser: dispatchUser,\n      addPost: addPost,\n      postId: posts.length,\n      isComment: false,\n      parentPostId: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), posts.filter(post => !post.isDeleted).slice(-numPosts).reverse().map(post => /*#__PURE__*/_jsxDEV(Post, {\n      user: user,\n      dispatchUser: dispatchUser,\n      post: post,\n      posts: posts,\n      commentId: posts.length,\n      addPost: addPost,\n      removePost: removePost,\n      editPost: editPost\n    }, post.postId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Posts, \"naC5P0PNsvYxatN4byJtxOQf3+s=\", false, function () {\n  return [useOutletContext];\n});\n\n_c = Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","PostForm","Container","useOutletContext","Post","numPosts","Posts","user","dispatchUser","posts","setPosts","useState","JSON","parse","localStorage","getItem","addPost","item","isComment","parentPostId","type","payload","length","parentPost","removePost","id","isDeleted","editPost","text","useEffect","setItem","stringify","filter","post","slice","reverse","map","postId"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/Posts.js"],"sourcesContent":["import * as React from \"react\";\nimport PostForm from \"./PostForm\";\nimport { Container } from \"react-bootstrap\";\nimport { useOutletContext } from \"react-router-dom\";\nimport Post from \"./Post\";\n\nconst numPosts = 5;\n\nexport default function Posts() {\n  const [user, dispatchUser] = useOutletContext();\n  // First read posts from localStorage if any. Otherwise, initiate posts with an empty array\n  const [posts, setPosts] = React.useState(\n    JSON.parse(localStorage.getItem(\"posts\")) ?? []\n  );\n\n  const addPost = (item, isComment, parentPostId) => {\n    setPosts([...posts, item]);\n    dispatchUser({\n      type: \"ADD_POST\",\n      payload: posts.length,\n    });\n    if (isComment) {\n      posts[parentPost]\n    }\n  };\n\n  const removePost = (id) => {\n    posts[id].isDeleted = true;\n    setPosts([...posts]);\n    dispatchUser({\n      type: \"DELETE_POST\",\n      payload: id,\n    });\n  };\n\n  const editPost = (id, text) => {\n    posts[id].text = text;\n    setPosts([...posts]);\n  };\n\n  React.useEffect(() => {\n    // TODO: write a more efficient code\n    localStorage.setItem(\"posts\", JSON.stringify(posts));\n  }, [posts]);\n\n  return (\n    <Container className=\"my-5\">\n      <PostForm\n        user={user}\n        dispatchUser={dispatchUser}\n        addPost={addPost}\n        postId={posts.length}\n        isComment={false}\n        parentPostId={null}\n      ></PostForm>\n      {posts\n        .filter((post) => !post.isDeleted)\n        .slice(-numPosts)\n        .reverse()\n        .map((post) => (\n          <Post\n            key={post.postId}\n            user={user}\n            dispatchUser={dispatchUser}\n            post={post}\n            posts={posts}\n            commentId={posts.length}\n            addPost={addPost}\n            removePost={removePost}\n            editPost={editPost}\n          ></Post>\n        ))}\n    </Container>\n  );\n}\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,QAAQ,GAAG,CAAjB;AAEA,eAAe,SAASC,KAAT,GAAiB;EAAA;;EAAA;;EAC9B,MAAM,CAACC,IAAD,EAAOC,YAAP,IAAuBL,gBAAgB,EAA7C,CAD8B,CAE9B;;EACA,MAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBV,KAAK,CAACW,QAAN,gBACxBC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CADwB,qDACqB,EADrB,CAA1B;;EAIA,MAAMC,OAAO,GAAG,CAACC,IAAD,EAAOC,SAAP,EAAkBC,YAAlB,KAAmC;IACjDT,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWQ,IAAX,CAAD,CAAR;IACAT,YAAY,CAAC;MACXY,IAAI,EAAE,UADK;MAEXC,OAAO,EAAEZ,KAAK,CAACa;IAFJ,CAAD,CAAZ;;IAIA,IAAIJ,SAAJ,EAAe;MACbT,KAAK,CAACc,UAAD,CAAL;IACD;EACF,CATD;;EAWA,MAAMC,UAAU,GAAIC,EAAD,IAAQ;IACzBhB,KAAK,CAACgB,EAAD,CAAL,CAAUC,SAAV,GAAsB,IAAtB;IACAhB,QAAQ,CAAC,CAAC,GAAGD,KAAJ,CAAD,CAAR;IACAD,YAAY,CAAC;MACXY,IAAI,EAAE,aADK;MAEXC,OAAO,EAAEI;IAFE,CAAD,CAAZ;EAID,CAPD;;EASA,MAAME,QAAQ,GAAG,CAACF,EAAD,EAAKG,IAAL,KAAc;IAC7BnB,KAAK,CAACgB,EAAD,CAAL,CAAUG,IAAV,GAAiBA,IAAjB;IACAlB,QAAQ,CAAC,CAAC,GAAGD,KAAJ,CAAD,CAAR;EACD,CAHD;;EAKAT,KAAK,CAAC6B,SAAN,CAAgB,MAAM;IACpB;IACAf,YAAY,CAACgB,OAAb,CAAqB,OAArB,EAA8BlB,IAAI,CAACmB,SAAL,CAAetB,KAAf,CAA9B;EACD,CAHD,EAGG,CAACA,KAAD,CAHH;EAKA,oBACE,QAAC,SAAD;IAAW,SAAS,EAAC,MAArB;IAAA,wBACE,QAAC,QAAD;MACE,IAAI,EAAEF,IADR;MAEE,YAAY,EAAEC,YAFhB;MAGE,OAAO,EAAEQ,OAHX;MAIE,MAAM,EAAEP,KAAK,CAACa,MAJhB;MAKE,SAAS,EAAE,KALb;MAME,YAAY,EAAE;IANhB;MAAA;MAAA;MAAA;IAAA,QADF,EASGb,KAAK,CACHuB,MADF,CACUC,IAAD,IAAU,CAACA,IAAI,CAACP,SADzB,EAEEQ,KAFF,CAEQ,CAAC7B,QAFT,EAGE8B,OAHF,GAIEC,GAJF,CAIOH,IAAD,iBACH,QAAC,IAAD;MAEE,IAAI,EAAE1B,IAFR;MAGE,YAAY,EAAEC,YAHhB;MAIE,IAAI,EAAEyB,IAJR;MAKE,KAAK,EAAExB,KALT;MAME,SAAS,EAAEA,KAAK,CAACa,MANnB;MAOE,OAAO,EAAEN,OAPX;MAQE,UAAU,EAAEQ,UARd;MASE,QAAQ,EAAEG;IATZ,GACOM,IAAI,CAACI,MADZ;MAAA;MAAA;MAAA;IAAA,QALH,CATH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA6BD;;GAlEuB/B,K;UACOH,gB;;;KADPG,K"},"metadata":{},"sourceType":"module"}