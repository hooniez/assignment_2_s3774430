{"ast":null,"code":"var _jsxFileName = \"/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/MFA.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\nimport { Form, Button, Modal, Spinner } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Loading from \"./Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MFA(_ref) {\n  _s();\n\n  let {\n    show,\n    setShow,\n    onSuccess,\n    hideQRcode,\n    user\n  } = _ref;\n  // When the prop hideQRcode is true, MFA is used in SignInForm\n  const [qrcodeSrc, setQrcodeSrc] = useState(\"\");\n  const [secret, setSecret] = useState(user.secret);\n  const [isOTPcorrect, setIsOTPcorrect] = useState(true);\n  const [isLoadingVisible, setIsLoadingVisible] = useState(false);\n  const [isQrCodeLoaded, setIsQrCodeLoaded] = useState(false);\n  const url = \"https://google-authenticator.p.rapidapi.com\";\n  const apiKey = \"414bc5d180msh86e5db53aea8bbcp1bcd81jsn6915fb5401f0\";\n\n  async function getQrCode() {\n    // options for the initial request to get a secret key\n    let res;\n    let options = {\n      method: \"GET\",\n      url: url + \"/new_v2/\",\n      headers: {\n        \"X-RapidAPI-Key\": apiKey,\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\"\n      }\n    };\n    res = await axios.request(options);\n    let secretKey = res.data;\n    setSecret(secretKey); // Re-define options again to make a request to get a QR code.\n\n    options = {\n      method: \"GET\",\n      url: url + \"/enroll/\",\n      params: {\n        secret: secretKey,\n        issuer: \"lan\",\n        account: `${user.firstName} ${user.lastName}`\n      },\n      headers: {\n        \"X-RapidAPI-Key\": apiKey,\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\"\n      }\n    };\n    res = await axios.request(options);\n    setQrcodeSrc(res.data);\n  }\n\n  useEffect(() => {\n    if (show) {\n      // If sign-in\n      if (hideQRcode) {\n        setSecret(user.secret);\n      } else {\n        getQrCode();\n      }\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [show]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    setIsLoadingVisible(true);\n    const code = e.target[0].value;\n    const options = {\n      method: \"GET\",\n      url: url + \"/validate/\",\n      params: {\n        code: code,\n        secret: secret\n      },\n      headers: {\n        \"X-RapidAPI-Key\": apiKey,\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\"\n      }\n    };\n    axios.request(options).then(response => {\n      if (response.data === \"True\") {\n        if (hideQRcode) {\n          onSuccess();\n        } else {\n          onSuccess(secret);\n        }\n\n        setIsOTPcorrect(true);\n        setShow(false);\n        setIsLoadingVisible(false);\n      } else {\n        setIsOTPcorrect(false);\n        setIsLoadingVisible(false);\n      }\n    });\n  };\n\n  const handleClose = () => {\n    setShow(false);\n    setIsOTPcorrect(true);\n  }; // Wehn the QR code source is updated, constantly check whether its image has been loaded\n\n\n  const qrCodeImgRef = useRef(null);\n  useEffect(() => {\n    let isLoaded = false;\n\n    while (!isLoaded) {\n      setTimeout(() => {}, 250);\n    }\n  }, [qrcodeSrc]);\n\n  const modalJSX = () => {\n    var _isQrCodeLoaded;\n\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          className: \"text-center\",\n          hidden: hideQRcode,\n          children: \"Scan the QR code in Google Authenticator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"d-flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center\",\n          hidden: hideQRcode,\n          children: [(_isQrCodeLoaded = !isQrCodeLoaded) !== null && _isQrCodeLoaded !== void 0 ? _isQrCodeLoaded : /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\",\n            role: \"status\",\n            className: \"my-3\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"visually-hidden\",\n              children: \"Spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"my-3\",\n            src: qrcodeSrc,\n            alt: \"QR code\",\n            ref: qrCodeImgRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: submitHandler,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3 text-center\",\n              controlId: \"authCode\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                required: true,\n                isInvalid: !isOTPcorrect,\n                placeholder: \"One Time PIN\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"The OTP is incorrect\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                children: \"Authenticate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoadingVisible ? /*#__PURE__*/_jsxDEV(Loading, {\n      show: isLoadingVisible,\n      children: \"Logging in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this) : modalJSX()\n  }, void 0, false);\n}\n\n_s(MFA, \"Itwa/OYDl/9OEJnu6onGCHKzQV4=\");\n\n_c = MFA;\n\nvar _c;\n\n$RefreshReg$(_c, \"MFA\");","map":{"version":3,"names":["useState","useEffect","useRef","Form","Button","Modal","Spinner","axios","Loading","MFA","show","setShow","onSuccess","hideQRcode","user","qrcodeSrc","setQrcodeSrc","secret","setSecret","isOTPcorrect","setIsOTPcorrect","isLoadingVisible","setIsLoadingVisible","isQrCodeLoaded","setIsQrCodeLoaded","url","apiKey","getQrCode","res","options","method","headers","request","secretKey","data","params","issuer","account","firstName","lastName","submitHandler","e","preventDefault","code","target","value","then","response","handleClose","qrCodeImgRef","isLoaded","setTimeout","modalJSX"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/MFA.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport { Form, Button, Modal, Spinner } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Loading from \"./Loading\";\n\nexport default function MFA({ show, setShow, onSuccess, hideQRcode, user }) {\n  // When the prop hideQRcode is true, MFA is used in SignInForm\n  const [qrcodeSrc, setQrcodeSrc] = useState(\"\");\n  const [secret, setSecret] = useState(user.secret);\n  const [isOTPcorrect, setIsOTPcorrect] = useState(true);\n  const [isLoadingVisible, setIsLoadingVisible] = useState(false);\n  const [isQrCodeLoaded, setIsQrCodeLoaded] = useState(false);\n  const url = \"https://google-authenticator.p.rapidapi.com\";\n  const apiKey = \"414bc5d180msh86e5db53aea8bbcp1bcd81jsn6915fb5401f0\";\n\n  async function getQrCode() {\n    // options for the initial request to get a secret key\n    let res;\n    let options = {\n      method: \"GET\",\n      url: url + \"/new_v2/\",\n      headers: {\n        \"X-RapidAPI-Key\": apiKey,\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\",\n      },\n    };\n    res = await axios.request(options);\n    let secretKey = res.data;\n    setSecret(secretKey);\n\n    // Re-define options again to make a request to get a QR code.\n    options = {\n      method: \"GET\",\n      url: url + \"/enroll/\",\n      params: {\n        secret: secretKey,\n        issuer: \"lan\",\n        account: `${user.firstName} ${user.lastName}`,\n      },\n      headers: {\n        \"X-RapidAPI-Key\": apiKey,\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\",\n      },\n    };\n    res = await axios.request(options);\n    setQrcodeSrc(res.data);\n  }\n\n  useEffect(() => {\n    if (show) {\n      // If sign-in\n      if (hideQRcode) {\n        setSecret(user.secret);\n      } else {\n        getQrCode();\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [show]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    setIsLoadingVisible(true);\n    const code = e.target[0].value;\n\n    const options = {\n      method: \"GET\",\n      url: url + \"/validate/\",\n      params: { code: code, secret: secret },\n      headers: {\n        \"X-RapidAPI-Key\": apiKey,\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\",\n      },\n    };\n\n    axios.request(options).then((response) => {\n      if (response.data === \"True\") {\n        if (hideQRcode) {\n          onSuccess();\n        } else {\n          onSuccess(secret);\n        }\n        setIsOTPcorrect(true);\n        setShow(false);\n        setIsLoadingVisible(false);\n      } else {\n        setIsOTPcorrect(false);\n        setIsLoadingVisible(false);\n      }\n    });\n  };\n\n  const handleClose = () => {\n    setShow(false);\n    setIsOTPcorrect(true);\n  };\n\n  // Wehn the QR code source is updated, constantly check whether its image has been loaded\n\n  const qrCodeImgRef = useRef(null);\n  useEffect(() => {\n    let isLoaded = false;\n    while (!isLoaded) {\n      setTimeout(() => {\n        \n      }, 250);\n    }\n    \n  }, [qrcodeSrc])\n\n  const modalJSX = () => (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title className=\"text-center\" hidden={hideQRcode}>\n          Scan the QR code in Google Authenticator\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body className=\"d-flex-column\">\n        <div className=\"d-flex justify-content-center\" hidden={hideQRcode}>\n          {!isQrCodeLoaded ?? (\n            <Spinner animation=\"border\" role=\"status\" className=\"my-3\">\n              <span className=\"visually-hidden\">Spinner</span>\n            </Spinner>\n          )}\n          <img className=\"my-3\" src={qrcodeSrc} alt=\"QR code\" ref={qrCodeImgRef} />\n        </div>\n        <div className=\"d-flex justify-content-center\">\n          <Form onSubmit={submitHandler}>\n            <Form.Group className=\"mb-3 text-center\" controlId=\"authCode\">\n              <Form.Control\n                type=\"text\"\n                required\n                isInvalid={!isOTPcorrect}\n                placeholder=\"One Time PIN\"\n              ></Form.Control>\n              <Form.Control.Feedback type=\"invalid\">\n                The OTP is incorrect\n              </Form.Control.Feedback>\n            </Form.Group>\n            <div className=\"text-center\">\n              <Button type=\"submit\">Authenticate</Button>\n            </div>\n          </Form>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n\n  return (\n    <>\n      {isLoadingVisible ? (\n        <Loading show={isLoadingVisible}>Logging in</Loading>\n      ) : (\n        modalJSX()\n      )}\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}