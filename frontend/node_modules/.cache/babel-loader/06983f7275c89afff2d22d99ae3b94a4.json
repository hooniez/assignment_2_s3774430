{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar DependentHostedNumberOrderList = require('./authorizationDocument/dependentHostedNumberOrder').DependentHostedNumberOrderList;\n\nvar Page = require('../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../base/values');\n/* jshint ignore:line */\n\n\nvar AuthorizationDocumentList;\nvar AuthorizationDocumentPage;\nvar AuthorizationDocumentInstance;\nvar AuthorizationDocumentContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the AuthorizationDocumentList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.AuthorizationDocumentList\n *\n * @param {Twilio.Preview.HostedNumbers} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nAuthorizationDocumentList = function AuthorizationDocumentList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function authorizationDocuments\n   * @memberof Twilio.Preview.HostedNumbers#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.HostedNumbers.AuthorizationDocumentContext}\n   */\n\n  /* jshint ignore:end */\n  function AuthorizationDocumentListInstance(sid) {\n    return AuthorizationDocumentListInstance.get(sid);\n  }\n\n  AuthorizationDocumentListInstance._version = version; // Path Solution\n\n  AuthorizationDocumentListInstance._solution = {};\n  AuthorizationDocumentListInstance._uri = `/AuthorizationDocuments`;\n  /* jshint ignore:start */\n\n  /**\n   * Streams AuthorizationDocumentInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.email] - Email.\n   * @param {authorization_document.status} [opts.status] -\n   *          The Status of this AuthorizationDocument.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n  AuthorizationDocumentListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists AuthorizationDocumentInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.email] - Email.\n   * @param {authorization_document.status} [opts.status] -\n   *          The Status of this AuthorizationDocument.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  AuthorizationDocumentListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of AuthorizationDocumentInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.email] - Email.\n   * @param {authorization_document.status} [opts.status] -\n   *          The Status of this AuthorizationDocument.\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  AuthorizationDocumentListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'Email': _.get(opts, 'email'),\n      'Status': _.get(opts, 'status'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new AuthorizationDocumentPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of AuthorizationDocumentInstance records from the\n   * API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  AuthorizationDocumentListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new AuthorizationDocumentPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * create a AuthorizationDocumentInstance\n   *\n   * @function create\n   * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string|list} opts.hostedNumberOrderSids -\n   *          A list of HostedNumberOrder sids.\n   * @param {string} opts.addressSid - Address sid.\n   * @param {string} opts.email - Email.\n   * @param {string} opts.contactTitle -\n   *          Title of signee of this Authorization Document.\n   * @param {string} opts.contactPhoneNumber -\n   *          Authorization Document's signee's phone number.\n   * @param {string|list} [opts.ccEmails] - A list of emails.\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed AuthorizationDocumentInstance\n   */\n\n  /* jshint ignore:end */\n\n\n  AuthorizationDocumentListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n\n    if (_.isUndefined(opts['hostedNumberOrderSids'])) {\n      throw new Error('Required parameter \"opts[\\'hostedNumberOrderSids\\']\" missing.');\n    }\n\n    if (_.isUndefined(opts['addressSid'])) {\n      throw new Error('Required parameter \"opts[\\'addressSid\\']\" missing.');\n    }\n\n    if (_.isUndefined(opts['email'])) {\n      throw new Error('Required parameter \"opts[\\'email\\']\" missing.');\n    }\n\n    if (_.isUndefined(opts['contactTitle'])) {\n      throw new Error('Required parameter \"opts[\\'contactTitle\\']\" missing.');\n    }\n\n    if (_.isUndefined(opts['contactPhoneNumber'])) {\n      throw new Error('Required parameter \"opts[\\'contactPhoneNumber\\']\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'HostedNumberOrderSids': serialize.map(_.get(opts, 'hostedNumberOrderSids'), function (e) {\n        return e;\n      }),\n      'AddressSid': _.get(opts, 'addressSid'),\n      'Email': _.get(opts, 'email'),\n      'ContactTitle': _.get(opts, 'contactTitle'),\n      'ContactPhoneNumber': _.get(opts, 'contactPhoneNumber'),\n      'CcEmails': serialize.map(_.get(opts, 'ccEmails'), function (e) {\n        return e;\n      })\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new AuthorizationDocumentInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a authorization_document\n   *\n   * @function get\n   * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentList#\n   *\n   * @param {string} sid - AuthorizationDocument sid.\n   *\n   * @returns {Twilio.Preview.HostedNumbers.AuthorizationDocumentContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  AuthorizationDocumentListInstance.get = function get(sid) {\n    return new AuthorizationDocumentContext(this._version, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  AuthorizationDocumentListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  AuthorizationDocumentListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return AuthorizationDocumentListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the AuthorizationDocumentPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.AuthorizationDocumentPage\n *\n * @param {HostedNumbers} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {AuthorizationDocumentSolution} solution - Path solution\n *\n * @returns AuthorizationDocumentPage\n */\n\n/* jshint ignore:end */\n\n\nAuthorizationDocumentPage = function AuthorizationDocumentPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(AuthorizationDocumentPage.prototype, Page.prototype);\n\nAuthorizationDocumentPage.prototype.constructor = AuthorizationDocumentPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of AuthorizationDocumentInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentPage#\n *\n * @param {AuthorizationDocumentPayload} payload - Payload response from the API\n *\n * @returns AuthorizationDocumentInstance\n */\n\n/* jshint ignore:end */\n\nAuthorizationDocumentPage.prototype.getInstance = function getInstance(payload) {\n  return new AuthorizationDocumentInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nAuthorizationDocumentPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nAuthorizationDocumentPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the AuthorizationDocumentContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.AuthorizationDocumentInstance\n *\n * @property {string} sid - AuthorizationDocument sid.\n * @property {string} addressSid - Address sid.\n * @property {authorization_document.status} status -\n *          The Status of this AuthorizationDocument.\n * @property {string} email - Email.\n * @property {string} ccEmails - A list of emails.\n * @property {Date} dateCreated - The date this AuthorizationDocument was created.\n * @property {Date} dateUpdated - The date this AuthorizationDocument was updated.\n * @property {string} url - The url\n * @property {string} links - The links\n *\n * @param {HostedNumbers} version - Version of the resource\n * @param {AuthorizationDocumentPayload} payload - The instance payload\n * @param {sid} sid - AuthorizationDocument sid.\n */\n\n/* jshint ignore:end */\n\n\nAuthorizationDocumentInstance = function AuthorizationDocumentInstance(version, payload, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.addressSid = payload.address_sid; // jshint ignore:line\n\n  this.status = payload.status; // jshint ignore:line\n\n  this.email = payload.email; // jshint ignore:line\n\n  this.ccEmails = payload.cc_emails; // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n\n  this.links = payload.links; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(AuthorizationDocumentInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new AuthorizationDocumentContext(this._version, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a AuthorizationDocumentInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AuthorizationDocumentInstance\n */\n\n/* jshint ignore:end */\n\nAuthorizationDocumentInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * update a AuthorizationDocumentInstance\n *\n * @function update\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string|list} [opts.hostedNumberOrderSids] -\n *          A list of HostedNumberOrder sids.\n * @param {string} [opts.addressSid] - Address sid.\n * @param {string} [opts.email] - Email.\n * @param {string|list} [opts.ccEmails] - A list of emails.\n * @param {authorization_document.status} [opts.status] -\n *          The Status of this AuthorizationDocument.\n * @param {string} [opts.contactTitle] -\n *          Title of signee of this Authorization Document.\n * @param {string} [opts.contactPhoneNumber] -\n *          Authorization Document's signee's phone number.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AuthorizationDocumentInstance\n */\n\n/* jshint ignore:end */\n\n\nAuthorizationDocumentInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Access the dependentHostedNumberOrders\n *\n * @function dependentHostedNumberOrders\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentInstance#\n *\n * @returns {Twilio.Preview.HostedNumbers.AuthorizationDocumentContext.DependentHostedNumberOrderList}\n */\n\n/* jshint ignore:end */\n\n\nAuthorizationDocumentInstance.prototype.dependentHostedNumberOrders = function dependentHostedNumberOrders() {\n  return this._proxy.dependentHostedNumberOrders;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nAuthorizationDocumentInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nAuthorizationDocumentInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the AuthorizationDocumentContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.AuthorizationDocumentContext\n *\n * @property {Twilio.Preview.HostedNumbers.AuthorizationDocumentContext.DependentHostedNumberOrderList} dependentHostedNumberOrders -\n *          dependentHostedNumberOrders resource\n *\n * @param {HostedNumbers} version - Version of the resource\n * @param {sid} sid - AuthorizationDocument sid.\n */\n\n/* jshint ignore:end */\n\n\nAuthorizationDocumentContext = function AuthorizationDocumentContext(version, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    sid: sid\n  };\n  this._uri = `/AuthorizationDocuments/${sid}`; // Dependents\n\n  this._dependentHostedNumberOrders = undefined;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a AuthorizationDocumentInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AuthorizationDocumentInstance\n */\n\n/* jshint ignore:end */\n\n\nAuthorizationDocumentContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new AuthorizationDocumentInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * update a AuthorizationDocumentInstance\n *\n * @function update\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string|list} [opts.hostedNumberOrderSids] -\n *          A list of HostedNumberOrder sids.\n * @param {string} [opts.addressSid] - Address sid.\n * @param {string} [opts.email] - Email.\n * @param {string|list} [opts.ccEmails] - A list of emails.\n * @param {authorization_document.status} [opts.status] -\n *          The Status of this AuthorizationDocument.\n * @param {string} [opts.contactTitle] -\n *          Title of signee of this Authorization Document.\n * @param {string} [opts.contactPhoneNumber] -\n *          Authorization Document's signee's phone number.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AuthorizationDocumentInstance\n */\n\n/* jshint ignore:end */\n\n\nAuthorizationDocumentContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'HostedNumberOrderSids': serialize.map(_.get(opts, 'hostedNumberOrderSids'), function (e) {\n      return e;\n    }),\n    'AddressSid': _.get(opts, 'addressSid'),\n    'Email': _.get(opts, 'email'),\n    'CcEmails': serialize.map(_.get(opts, 'ccEmails'), function (e) {\n      return e;\n    }),\n    'Status': _.get(opts, 'status'),\n    'ContactTitle': _.get(opts, 'contactTitle'),\n    'ContactPhoneNumber': _.get(opts, 'contactPhoneNumber')\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new AuthorizationDocumentInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(AuthorizationDocumentContext.prototype, 'dependentHostedNumberOrders', {\n  get: function () {\n    if (!this._dependentHostedNumberOrders) {\n      this._dependentHostedNumberOrders = new DependentHostedNumberOrderList(this._version, this._solution.sid);\n    }\n\n    return this._dependentHostedNumberOrders;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\nAuthorizationDocumentContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nAuthorizationDocumentContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  AuthorizationDocumentList: AuthorizationDocumentList,\n  AuthorizationDocumentPage: AuthorizationDocumentPage,\n  AuthorizationDocumentInstance: AuthorizationDocumentInstance,\n  AuthorizationDocumentContext: AuthorizationDocumentContext\n};","map":{"version":3,"names":["Q","require","_","util","DependentHostedNumberOrderList","Page","deserialize","serialize","values","AuthorizationDocumentList","AuthorizationDocumentPage","AuthorizationDocumentInstance","AuthorizationDocumentContext","version","AuthorizationDocumentListInstance","sid","get","_version","_solution","_uri","each","opts","callback","isFunction","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","error","fetchNextPage","fn","promise","then","page","instances","instance","bind","nextPage","catch","merge","list","deferred","defer","allResources","resource","push","length","resolve","reject","nodeify","data","of","pageToken","pageNumber","uri","method","params","payload","getPage","targetUrl","_domain","twilio","request","create","map","e","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","addressSid","address_sid","status","email","ccEmails","cc_emails","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","url","links","_context","undefined","Object","defineProperty","fetch","_proxy","update","dependentHostedNumberOrders","_dependentHostedNumberOrders","module","exports"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/twilio/lib/rest/preview/hosted_numbers/authorizationDocument.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar DependentHostedNumberOrderList = require(\n    './authorizationDocument/dependentHostedNumberOrder').DependentHostedNumberOrderList;\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require('../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar AuthorizationDocumentList;\nvar AuthorizationDocumentPage;\nvar AuthorizationDocumentInstance;\nvar AuthorizationDocumentContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the AuthorizationDocumentList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.AuthorizationDocumentList\n *\n * @param {Twilio.Preview.HostedNumbers} version - Version of the resource\n */\n/* jshint ignore:end */\nAuthorizationDocumentList = function AuthorizationDocumentList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function authorizationDocuments\n   * @memberof Twilio.Preview.HostedNumbers#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.HostedNumbers.AuthorizationDocumentContext}\n   */\n  /* jshint ignore:end */\n  function AuthorizationDocumentListInstance(sid) {\n    return AuthorizationDocumentListInstance.get(sid);\n  }\n\n  AuthorizationDocumentListInstance._version = version;\n  // Path Solution\n  AuthorizationDocumentListInstance._solution = {};\n  AuthorizationDocumentListInstance._uri = `/AuthorizationDocuments`;\n  /* jshint ignore:start */\n  /**\n   * Streams AuthorizationDocumentInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.email] - Email.\n   * @param {authorization_document.status} [opts.status] -\n   *          The Status of this AuthorizationDocument.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  AuthorizationDocumentListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists AuthorizationDocumentInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.email] - Email.\n   * @param {authorization_document.status} [opts.status] -\n   *          The Status of this AuthorizationDocument.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  AuthorizationDocumentListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of AuthorizationDocumentInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.email] - Email.\n   * @param {authorization_document.status} [opts.status] -\n   *          The Status of this AuthorizationDocument.\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  AuthorizationDocumentListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Email': _.get(opts, 'email'),\n      'Status': _.get(opts, 'status'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new AuthorizationDocumentPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of AuthorizationDocumentInstance records from the\n   * API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  AuthorizationDocumentListInstance.getPage = function getPage(targetUrl,\n      callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new AuthorizationDocumentPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * create a AuthorizationDocumentInstance\n   *\n   * @function create\n   * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string|list} opts.hostedNumberOrderSids -\n   *          A list of HostedNumberOrder sids.\n   * @param {string} opts.addressSid - Address sid.\n   * @param {string} opts.email - Email.\n   * @param {string} opts.contactTitle -\n   *          Title of signee of this Authorization Document.\n   * @param {string} opts.contactPhoneNumber -\n   *          Authorization Document's signee's phone number.\n   * @param {string|list} [opts.ccEmails] - A list of emails.\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed AuthorizationDocumentInstance\n   */\n  /* jshint ignore:end */\n  AuthorizationDocumentListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts['hostedNumberOrderSids'])) {\n      throw new Error('Required parameter \"opts[\\'hostedNumberOrderSids\\']\" missing.');\n    }\n    if (_.isUndefined(opts['addressSid'])) {\n      throw new Error('Required parameter \"opts[\\'addressSid\\']\" missing.');\n    }\n    if (_.isUndefined(opts['email'])) {\n      throw new Error('Required parameter \"opts[\\'email\\']\" missing.');\n    }\n    if (_.isUndefined(opts['contactTitle'])) {\n      throw new Error('Required parameter \"opts[\\'contactTitle\\']\" missing.');\n    }\n    if (_.isUndefined(opts['contactPhoneNumber'])) {\n      throw new Error('Required parameter \"opts[\\'contactPhoneNumber\\']\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'HostedNumberOrderSids': serialize.map(_.get(opts, 'hostedNumberOrderSids'), function(e) { return e; }),\n      'AddressSid': _.get(opts, 'addressSid'),\n      'Email': _.get(opts, 'email'),\n      'ContactTitle': _.get(opts, 'contactTitle'),\n      'ContactPhoneNumber': _.get(opts, 'contactPhoneNumber'),\n      'CcEmails': serialize.map(_.get(opts, 'ccEmails'), function(e) { return e; })\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new AuthorizationDocumentInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a authorization_document\n   *\n   * @function get\n   * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentList#\n   *\n   * @param {string} sid - AuthorizationDocument sid.\n   *\n   * @returns {Twilio.Preview.HostedNumbers.AuthorizationDocumentContext}\n   */\n  /* jshint ignore:end */\n  AuthorizationDocumentListInstance.get = function get(sid) {\n    return new AuthorizationDocumentContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  AuthorizationDocumentListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  AuthorizationDocumentListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return AuthorizationDocumentListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the AuthorizationDocumentPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.AuthorizationDocumentPage\n *\n * @param {HostedNumbers} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {AuthorizationDocumentSolution} solution - Path solution\n *\n * @returns AuthorizationDocumentPage\n */\n/* jshint ignore:end */\nAuthorizationDocumentPage = function AuthorizationDocumentPage(version,\n    response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(AuthorizationDocumentPage.prototype, Page.prototype);\nAuthorizationDocumentPage.prototype.constructor = AuthorizationDocumentPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of AuthorizationDocumentInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentPage#\n *\n * @param {AuthorizationDocumentPayload} payload - Payload response from the API\n *\n * @returns AuthorizationDocumentInstance\n */\n/* jshint ignore:end */\nAuthorizationDocumentPage.prototype.getInstance = function getInstance(payload)\n    {\n  return new AuthorizationDocumentInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAuthorizationDocumentPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nAuthorizationDocumentPage.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the AuthorizationDocumentContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.AuthorizationDocumentInstance\n *\n * @property {string} sid - AuthorizationDocument sid.\n * @property {string} addressSid - Address sid.\n * @property {authorization_document.status} status -\n *          The Status of this AuthorizationDocument.\n * @property {string} email - Email.\n * @property {string} ccEmails - A list of emails.\n * @property {Date} dateCreated - The date this AuthorizationDocument was created.\n * @property {Date} dateUpdated - The date this AuthorizationDocument was updated.\n * @property {string} url - The url\n * @property {string} links - The links\n *\n * @param {HostedNumbers} version - Version of the resource\n * @param {AuthorizationDocumentPayload} payload - The instance payload\n * @param {sid} sid - AuthorizationDocument sid.\n */\n/* jshint ignore:end */\nAuthorizationDocumentInstance = function AuthorizationDocumentInstance(version,\n    payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.addressSid = payload.address_sid; // jshint ignore:line\n  this.status = payload.status; // jshint ignore:line\n  this.email = payload.email; // jshint ignore:line\n  this.ccEmails = payload.cc_emails; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.links = payload.links; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {sid: sid || this.sid, };\n};\n\nObject.defineProperty(AuthorizationDocumentInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new AuthorizationDocumentContext(this._version, this._solution.sid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a AuthorizationDocumentInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AuthorizationDocumentInstance\n */\n/* jshint ignore:end */\nAuthorizationDocumentInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a AuthorizationDocumentInstance\n *\n * @function update\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string|list} [opts.hostedNumberOrderSids] -\n *          A list of HostedNumberOrder sids.\n * @param {string} [opts.addressSid] - Address sid.\n * @param {string} [opts.email] - Email.\n * @param {string|list} [opts.ccEmails] - A list of emails.\n * @param {authorization_document.status} [opts.status] -\n *          The Status of this AuthorizationDocument.\n * @param {string} [opts.contactTitle] -\n *          Title of signee of this Authorization Document.\n * @param {string} [opts.contactPhoneNumber] -\n *          Authorization Document's signee's phone number.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AuthorizationDocumentInstance\n */\n/* jshint ignore:end */\nAuthorizationDocumentInstance.prototype.update = function update(opts, callback)\n    {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the dependentHostedNumberOrders\n *\n * @function dependentHostedNumberOrders\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentInstance#\n *\n * @returns {Twilio.Preview.HostedNumbers.AuthorizationDocumentContext.DependentHostedNumberOrderList}\n */\n/* jshint ignore:end */\nAuthorizationDocumentInstance.prototype.dependentHostedNumberOrders = function\n    dependentHostedNumberOrders() {\n  return this._proxy.dependentHostedNumberOrders;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAuthorizationDocumentInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nAuthorizationDocumentInstance.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the AuthorizationDocumentContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.HostedNumbers.AuthorizationDocumentContext\n *\n * @property {Twilio.Preview.HostedNumbers.AuthorizationDocumentContext.DependentHostedNumberOrderList} dependentHostedNumberOrders -\n *          dependentHostedNumberOrders resource\n *\n * @param {HostedNumbers} version - Version of the resource\n * @param {sid} sid - AuthorizationDocument sid.\n */\n/* jshint ignore:end */\nAuthorizationDocumentContext = function AuthorizationDocumentContext(version,\n    sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {sid: sid, };\n  this._uri = `/AuthorizationDocuments/${sid}`;\n\n  // Dependents\n  this._dependentHostedNumberOrders = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a AuthorizationDocumentInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AuthorizationDocumentInstance\n */\n/* jshint ignore:end */\nAuthorizationDocumentContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new AuthorizationDocumentInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a AuthorizationDocumentInstance\n *\n * @function update\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string|list} [opts.hostedNumberOrderSids] -\n *          A list of HostedNumberOrder sids.\n * @param {string} [opts.addressSid] - Address sid.\n * @param {string} [opts.email] - Email.\n * @param {string|list} [opts.ccEmails] - A list of emails.\n * @param {authorization_document.status} [opts.status] -\n *          The Status of this AuthorizationDocument.\n * @param {string} [opts.contactTitle] -\n *          Title of signee of this Authorization Document.\n * @param {string} [opts.contactPhoneNumber] -\n *          Authorization Document's signee's phone number.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AuthorizationDocumentInstance\n */\n/* jshint ignore:end */\nAuthorizationDocumentContext.prototype.update = function update(opts, callback)\n    {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'HostedNumberOrderSids': serialize.map(_.get(opts, 'hostedNumberOrderSids'), function(e) { return e; }),\n    'AddressSid': _.get(opts, 'addressSid'),\n    'Email': _.get(opts, 'email'),\n    'CcEmails': serialize.map(_.get(opts, 'ccEmails'), function(e) { return e; }),\n    'Status': _.get(opts, 'status'),\n    'ContactTitle': _.get(opts, 'contactTitle'),\n    'ContactPhoneNumber': _.get(opts, 'contactPhoneNumber')\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new AuthorizationDocumentInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(AuthorizationDocumentContext.prototype,\n  'dependentHostedNumberOrders', {\n    get: function() {\n      if (!this._dependentHostedNumberOrders) {\n        this._dependentHostedNumberOrders = new DependentHostedNumberOrderList(\n          this._version,\n          this._solution.sid\n        );\n      }\n      return this._dependentHostedNumberOrders;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.HostedNumbers.AuthorizationDocumentContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAuthorizationDocumentContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nAuthorizationDocumentContext.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  AuthorizationDocumentList: AuthorizationDocumentList,\n  AuthorizationDocumentPage: AuthorizationDocumentPage,\n  AuthorizationDocumentInstance: AuthorizationDocumentInstance,\n  AuthorizationDocumentContext: AuthorizationDocumentContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}