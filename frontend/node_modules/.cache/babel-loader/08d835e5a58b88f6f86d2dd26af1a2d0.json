{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../../base/values');\n/* jshint ignore:line */\n\n\nvar FeedbackList;\nvar FeedbackPage;\nvar FeedbackInstance;\n/* jshint ignore:start */\n\n/**\n * Initialize the FeedbackList\n *\n * @constructor Twilio.Api.V2010.AccountContext.MessageContext.FeedbackList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid - The SID of the Account that created the resource\n * @param {string} messageSid -\n *          The SID of the Message resource for which the feedback was provided\n */\n\n/* jshint ignore:end */\n\nFeedbackList = function FeedbackList(version, accountSid, messageSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function feedback\n   * @memberof Twilio.Api.V2010.AccountContext.MessageContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.MessageContext.FeedbackContext}\n   */\n\n  /* jshint ignore:end */\n  function FeedbackListInstance(sid) {\n    return FeedbackListInstance.get(sid);\n  }\n\n  FeedbackListInstance._version = version; // Path Solution\n\n  FeedbackListInstance._solution = {\n    accountSid: accountSid,\n    messageSid: messageSid\n  };\n  FeedbackListInstance._uri = `/Accounts/${accountSid}/Messages/${messageSid}/Feedback.json`;\n  /* jshint ignore:start */\n\n  /**\n   * create a FeedbackInstance\n   *\n   * @function create\n   * @memberof Twilio.Api.V2010.AccountContext.MessageContext.FeedbackList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {feedback.outcome} [opts.outcome] - Whether the feedback has arrived\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed FeedbackInstance\n   */\n\n  /* jshint ignore:end */\n\n  FeedbackListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'Outcome': _.get(opts, 'outcome')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new FeedbackInstance(this._version, payload));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.MessageContext.FeedbackList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  FeedbackListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  FeedbackListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return FeedbackListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the FeedbackPage\n *\n * @constructor Twilio.Api.V2010.AccountContext.MessageContext.FeedbackPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {FeedbackSolution} solution - Path solution\n *\n * @returns FeedbackPage\n */\n\n/* jshint ignore:end */\n\n\nFeedbackPage = function FeedbackPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(FeedbackPage.prototype, Page.prototype);\n\nFeedbackPage.prototype.constructor = FeedbackPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of FeedbackInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountContext.MessageContext.FeedbackPage#\n *\n * @param {FeedbackPayload} payload - Payload response from the API\n *\n * @returns FeedbackInstance\n */\n\n/* jshint ignore:end */\n\nFeedbackPage.prototype.getInstance = function getInstance(payload) {\n  return new FeedbackInstance(this._version, payload, this._solution.accountSid, this._solution.messageSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.MessageContext.FeedbackPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nFeedbackPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nFeedbackPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the FeedbackContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.MessageContext.FeedbackInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} messageSid -\n *          The SID of the Message resource for which the feedback was provided\n * @property {feedback.outcome} outcome - Whether the feedback has arrived\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT that the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT that the resource was last updated\n * @property {string} uri -\n *          The URI of the resource, relative to `https://api.twilio.com`\n *\n * @param {V2010} version - Version of the resource\n * @param {FeedbackPayload} payload - The instance payload\n * @param {sid} accountSid - The SID of the Account that created the resource\n * @param {sid} messageSid -\n *          The SID of the Message resource for which the feedback was provided\n */\n\n/* jshint ignore:end */\n\n\nFeedbackInstance = function FeedbackInstance(version, payload, accountSid, messageSid) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.messageSid = payload.message_sid; // jshint ignore:line\n\n  this.outcome = payload.outcome; // jshint ignore:line\n\n  this.dateCreated = deserialize.rfc2822DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated); // jshint ignore:line\n\n  this.uri = payload.uri; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    accountSid: accountSid,\n    messageSid: messageSid\n  };\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.MessageContext.FeedbackInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nFeedbackInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nFeedbackInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  FeedbackList: FeedbackList,\n  FeedbackPage: FeedbackPage,\n  FeedbackInstance: FeedbackInstance\n};","map":{"version":3,"names":["Q","require","_","util","Page","deserialize","values","FeedbackList","FeedbackPage","FeedbackInstance","version","accountSid","messageSid","FeedbackListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isFunction","deferred","defer","data","of","promise","uri","method","then","payload","resolve","bind","catch","error","reject","nodeify","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","account_sid","message_sid","outcome","dateCreated","rfc2822DateTime","date_created","dateUpdated","date_updated","_context","undefined","module","exports"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/twilio/lib/rest/api/v2010/account/message/feedback.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar FeedbackList;\nvar FeedbackPage;\nvar FeedbackInstance;\n\n/* jshint ignore:start */\n/**\n * Initialize the FeedbackList\n *\n * @constructor Twilio.Api.V2010.AccountContext.MessageContext.FeedbackList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid - The SID of the Account that created the resource\n * @param {string} messageSid -\n *          The SID of the Message resource for which the feedback was provided\n */\n/* jshint ignore:end */\nFeedbackList = function FeedbackList(version, accountSid, messageSid) {\n  /* jshint ignore:start */\n  /**\n   * @function feedback\n   * @memberof Twilio.Api.V2010.AccountContext.MessageContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.MessageContext.FeedbackContext}\n   */\n  /* jshint ignore:end */\n  function FeedbackListInstance(sid) {\n    return FeedbackListInstance.get(sid);\n  }\n\n  FeedbackListInstance._version = version;\n  // Path Solution\n  FeedbackListInstance._solution = {accountSid: accountSid, messageSid: messageSid};\n  FeedbackListInstance._uri = `/Accounts/${accountSid}/Messages/${messageSid}/Feedback.json`;\n  /* jshint ignore:start */\n  /**\n   * create a FeedbackInstance\n   *\n   * @function create\n   * @memberof Twilio.Api.V2010.AccountContext.MessageContext.FeedbackList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {feedback.outcome} [opts.outcome] - Whether the feedback has arrived\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed FeedbackInstance\n   */\n  /* jshint ignore:end */\n  FeedbackListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({'Outcome': _.get(opts, 'outcome')});\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new FeedbackInstance(this._version, payload));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.MessageContext.FeedbackList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  FeedbackListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  FeedbackListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return FeedbackListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the FeedbackPage\n *\n * @constructor Twilio.Api.V2010.AccountContext.MessageContext.FeedbackPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {FeedbackSolution} solution - Path solution\n *\n * @returns FeedbackPage\n */\n/* jshint ignore:end */\nFeedbackPage = function FeedbackPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(FeedbackPage.prototype, Page.prototype);\nFeedbackPage.prototype.constructor = FeedbackPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of FeedbackInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountContext.MessageContext.FeedbackPage#\n *\n * @param {FeedbackPayload} payload - Payload response from the API\n *\n * @returns FeedbackInstance\n */\n/* jshint ignore:end */\nFeedbackPage.prototype.getInstance = function getInstance(payload) {\n  return new FeedbackInstance(\n    this._version,\n    payload,\n    this._solution.accountSid,\n    this._solution.messageSid\n  );\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.MessageContext.FeedbackPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFeedbackPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nFeedbackPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the FeedbackContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.MessageContext.FeedbackInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} messageSid -\n *          The SID of the Message resource for which the feedback was provided\n * @property {feedback.outcome} outcome - Whether the feedback has arrived\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT that the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT that the resource was last updated\n * @property {string} uri -\n *          The URI of the resource, relative to `https://api.twilio.com`\n *\n * @param {V2010} version - Version of the resource\n * @param {FeedbackPayload} payload - The instance payload\n * @param {sid} accountSid - The SID of the Account that created the resource\n * @param {sid} messageSid -\n *          The SID of the Message resource for which the feedback was provided\n */\n/* jshint ignore:end */\nFeedbackInstance = function FeedbackInstance(version, payload, accountSid,\n                                              messageSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.messageSid = payload.message_sid; // jshint ignore:line\n  this.outcome = payload.outcome; // jshint ignore:line\n  this.dateCreated = deserialize.rfc2822DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated); // jshint ignore:line\n  this.uri = payload.uri; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {accountSid: accountSid, messageSid: messageSid, };\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.MessageContext.FeedbackInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFeedbackInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nFeedbackInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  FeedbackList: FeedbackList,\n  FeedbackPage: FeedbackPage,\n  FeedbackInstance: FeedbackInstance\n};\n"],"mappings":"AAAA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AAEA,IAAIA,CAAC,GAAGC,OAAO,CAAC,GAAD,CAAf;AAAuB;;;AACvB,IAAIC,CAAC,GAAGD,OAAO,CAAC,QAAD,CAAf;AAA4B;;;AAC5B,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAAlB;AAA6B;;;AAC7B,IAAIG,IAAI,GAAGH,OAAO,CAAC,0BAAD,CAAlB;AAAiD;;;AACjD,IAAII,WAAW,GAAGJ,OAAO,CACrB,iCADqB,CAAzB;AACyC;;;AACzC,IAAIK,MAAM,GAAGL,OAAO,CAAC,4BAAD,CAApB;AAAqD;;;AAErD,IAAIM,YAAJ;AACA,IAAIC,YAAJ;AACA,IAAIC,gBAAJ;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACAF,YAAY,GAAG,SAASA,YAAT,CAAsBG,OAAtB,EAA+BC,UAA/B,EAA2CC,UAA3C,EAAuD;EACpE;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EACE;EACA,SAASC,oBAAT,CAA8BC,GAA9B,EAAmC;IACjC,OAAOD,oBAAoB,CAACE,GAArB,CAAyBD,GAAzB,CAAP;EACD;;EAEDD,oBAAoB,CAACG,QAArB,GAAgCN,OAAhC,CAfoE,CAgBpE;;EACAG,oBAAoB,CAACI,SAArB,GAAiC;IAACN,UAAU,EAAEA,UAAb;IAAyBC,UAAU,EAAEA;EAArC,CAAjC;EACAC,oBAAoB,CAACK,IAArB,GAA6B,aAAYP,UAAW,aAAYC,UAAW,gBAA3E;EACA;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE;;EACAC,oBAAoB,CAACM,MAArB,GAA8B,SAASA,MAAT,CAAgBC,IAAhB,EAAsBC,QAAtB,EAAgC;IAC5D,IAAInB,CAAC,CAACoB,UAAF,CAAaF,IAAb,CAAJ,EAAwB;MACtBC,QAAQ,GAAGD,IAAX;MACAA,IAAI,GAAG,EAAP;IACD;;IACDA,IAAI,GAAGA,IAAI,IAAI,EAAf;IAEA,IAAIG,QAAQ,GAAGvB,CAAC,CAACwB,KAAF,EAAf;IACA,IAAIC,IAAI,GAAGnB,MAAM,CAACoB,EAAP,CAAU;MAAC,WAAWxB,CAAC,CAACa,GAAF,CAAMK,IAAN,EAAY,SAAZ;IAAZ,CAAV,CAAX;;IAEA,IAAIO,OAAO,GAAG,KAAKX,QAAL,CAAcG,MAAd,CAAqB;MAACS,GAAG,EAAE,KAAKV,IAAX;MAAiBW,MAAM,EAAE,MAAzB;MAAiCJ,IAAI,EAAEA;IAAvC,CAArB,CAAd;;IAEAE,OAAO,GAAGA,OAAO,CAACG,IAAR,CAAa,UAASC,OAAT,EAAkB;MACvCR,QAAQ,CAACS,OAAT,CAAiB,IAAIvB,gBAAJ,CAAqB,KAAKO,QAA1B,EAAoCe,OAApC,CAAjB;IACD,CAFsB,CAErBE,IAFqB,CAEhB,IAFgB,CAAb,CAAV;IAIAN,OAAO,CAACO,KAAR,CAAc,UAASC,KAAT,EAAgB;MAC5BZ,QAAQ,CAACa,MAAT,CAAgBD,KAAhB;IACD,CAFD;;IAIA,IAAIjC,CAAC,CAACoB,UAAF,CAAaD,QAAb,CAAJ,EAA4B;MAC1BE,QAAQ,CAACI,OAAT,CAAiBU,OAAjB,CAAyBhB,QAAzB;IACD;;IAED,OAAOE,QAAQ,CAACI,OAAhB;EACD,CAzBD;EA2BA;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EACE;;;EACAd,oBAAoB,CAACyB,MAArB,GAA8B,SAASA,MAAT,GAAkB;IAC9C,OAAO,KAAKrB,SAAZ;EACD,CAFD;;EAIAJ,oBAAoB,CAACV,IAAI,CAACoC,OAAL,CAAaC,MAAd,CAApB,GAA4C,SAASD,OAAT,CAAiBE,KAAjB,EAAwBC,OAAxB,EAAiC;IAC3E,OAAOvC,IAAI,CAACoC,OAAL,CAAa,KAAKD,MAAL,EAAb,EAA4BI,OAA5B,CAAP;EACD,CAFD;;EAIA,OAAO7B,oBAAP;AACD,CA/ED;AAkFA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAL,YAAY,GAAG,SAASA,YAAT,CAAsBE,OAAtB,EAA+BiC,QAA/B,EAAyCC,QAAzC,EAAmD;EAChE;EACA,KAAK3B,SAAL,GAAiB2B,QAAjB;EAEAxC,IAAI,CAACyC,SAAL,CAAeC,WAAf,CAA2BC,IAA3B,CAAgC,IAAhC,EAAsCrC,OAAtC,EAA+CiC,QAA/C,EAAyD,KAAK1B,SAA9D;AACD,CALD;;AAOAf,CAAC,CAAC8C,MAAF,CAASxC,YAAY,CAACqC,SAAtB,EAAiCzC,IAAI,CAACyC,SAAtC;;AACArC,YAAY,CAACqC,SAAb,CAAuBC,WAAvB,GAAqCtC,YAArC;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACAA,YAAY,CAACqC,SAAb,CAAuBI,WAAvB,GAAqC,SAASA,WAAT,CAAqBlB,OAArB,EAA8B;EACjE,OAAO,IAAItB,gBAAJ,CACL,KAAKO,QADA,EAELe,OAFK,EAGL,KAAKd,SAAL,CAAeN,UAHV,EAIL,KAAKM,SAAL,CAAeL,UAJV,CAAP;AAMD,CAPD;AASA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAJ,YAAY,CAACqC,SAAb,CAAuBP,MAAvB,GAAgC,SAASA,MAAT,GAAkB;EAChD,IAAIY,KAAK,GAAG,EAAZ;;EACAhD,CAAC,CAACiD,MAAF,CAAS,IAAT,EAAe,UAASC,KAAT,EAAgBC,GAAhB,EAAqB;IAClC,IAAI,CAACnD,CAAC,CAACoD,UAAF,CAAaD,GAAb,EAAkB,GAAlB,CAAD,IAA2B,CAAEnD,CAAC,CAACoB,UAAF,CAAa8B,KAAb,CAAjC,EAAsD;MACpDF,KAAK,CAACG,GAAD,CAAL,GAAaD,KAAb;IACD;EACF,CAJD;;EAKA,OAAOF,KAAP;AACD,CARD;;AAUA1C,YAAY,CAACqC,SAAb,CAAuB1C,IAAI,CAACoC,OAAL,CAAaC,MAApC,IAA8C,SAASD,OAAT,CAAiBE,KAAjB,EAAwBC,OAAxB,EAAiC;EAC7E,OAAOvC,IAAI,CAACoC,OAAL,CAAa,KAAKD,MAAL,EAAb,EAA4BI,OAA5B,CAAP;AACD,CAFD;AAKA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAjC,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,OAA1B,EAAmCqB,OAAnC,EAA4CpB,UAA5C,EAC2BC,UAD3B,EACuC;EACxD,KAAKI,QAAL,GAAgBN,OAAhB,CADwD,CAGxD;;EACA,KAAKC,UAAL,GAAkBoB,OAAO,CAACwB,WAA1B,CAJwD,CAIjB;;EACvC,KAAK3C,UAAL,GAAkBmB,OAAO,CAACyB,WAA1B,CALwD,CAKjB;;EACvC,KAAKC,OAAL,GAAe1B,OAAO,CAAC0B,OAAvB,CANwD,CAMxB;;EAChC,KAAKC,WAAL,GAAmBrD,WAAW,CAACsD,eAAZ,CAA4B5B,OAAO,CAAC6B,YAApC,CAAnB,CAPwD,CAOc;;EACtE,KAAKC,WAAL,GAAmBxD,WAAW,CAACsD,eAAZ,CAA4B5B,OAAO,CAAC+B,YAApC,CAAnB,CARwD,CAQc;;EACtE,KAAKlC,GAAL,GAAWG,OAAO,CAACH,GAAnB,CATwD,CAShC;EAExB;;EACA,KAAKmC,QAAL,GAAgBC,SAAhB;EACA,KAAK/C,SAAL,GAAiB;IAACN,UAAU,EAAEA,UAAb;IAAyBC,UAAU,EAAEA;EAArC,CAAjB;AACD,CAfD;AAiBA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAH,gBAAgB,CAACoC,SAAjB,CAA2BP,MAA3B,GAAoC,SAASA,MAAT,GAAkB;EACpD,IAAIY,KAAK,GAAG,EAAZ;;EACAhD,CAAC,CAACiD,MAAF,CAAS,IAAT,EAAe,UAASC,KAAT,EAAgBC,GAAhB,EAAqB;IAClC,IAAI,CAACnD,CAAC,CAACoD,UAAF,CAAaD,GAAb,EAAkB,GAAlB,CAAD,IAA2B,CAAEnD,CAAC,CAACoB,UAAF,CAAa8B,KAAb,CAAjC,EAAsD;MACpDF,KAAK,CAACG,GAAD,CAAL,GAAaD,KAAb;IACD;EACF,CAJD;;EAKA,OAAOF,KAAP;AACD,CARD;;AAUAzC,gBAAgB,CAACoC,SAAjB,CAA2B1C,IAAI,CAACoC,OAAL,CAAaC,MAAxC,IAAkD,SAASD,OAAT,CAAiBE,KAAjB,EAC9CC,OAD8C,EACrC;EACX,OAAOvC,IAAI,CAACoC,OAAL,CAAa,KAAKD,MAAL,EAAb,EAA4BI,OAA5B,CAAP;AACD,CAHD;;AAKAuB,MAAM,CAACC,OAAP,GAAiB;EACf3D,YAAY,EAAEA,YADC;EAEfC,YAAY,EAAEA,YAFC;EAGfC,gBAAgB,EAAEA;AAHH,CAAjB"},"metadata":{},"sourceType":"script"}