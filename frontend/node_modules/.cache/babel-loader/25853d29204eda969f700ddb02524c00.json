{"ast":null,"code":"export default function validate(values, users, type) {\n  let errors = {};\n\n  if (type === \"signin\") {} else if (type === \"signup\") {\n    if (values.email in users) {\n      error.email = true;\n    }\n    /* A regex pattern that matches invalid passwords\n        - Anything with less than eight characters OR\n        - Anything with no numbers OR\n        - Anything with no uppercase letter OR\n        - Anything with no lowercase letter OR\n        - Anything with no special characters\n    */\n\n\n    const regex = \"^(.{0,7}|[^0-9]*|[^A-Z]*|[^a-z]*|[a-zA-Z0-9]*)$\"; // If there are any matches, the password is invalid\n\n    if (values.password.match(regex)) {\n      errorr.password = true;\n    }\n\n    if (values.password !== document.querySelector(\"#formSignupPassword\").value) {\n      errorr.passwordsDifferent = true;\n    }\n  }\n\n  return errors;\n}","map":{"version":3,"names":["validate","values","users","type","errors","email","error","regex","password","match","errorr","document","querySelector","value","passwordsDifferent"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/SignFormValidationRules.js"],"sourcesContent":["export default function validate(values, users, type) {\n  let errors = {};\n  if (type === \"signin\") {\n\n  } else if (type === \"signup\") {\n    if (values.email in users) {\n      error.email = true;\n    }\n\n    /* A regex pattern that matches invalid passwords\n        - Anything with less than eight characters OR\n        - Anything with no numbers OR\n        - Anything with no uppercase letter OR\n        - Anything with no lowercase letter OR\n        - Anything with no special characters\n    */\n    const regex = \"^(.{0,7}|[^0-9]*|[^A-Z]*|[^a-z]*|[a-zA-Z0-9]*)$\";\n    // If there are any matches, the password is invalid\n    if (values.password.match(regex)) {\n      errorr.password = true;\n    } \n\n    if (values.password !== document.querySelector(\"#formSignupPassword\").value) {\n      errorr.passwordsDifferent = true;\n    }\n\n  }\n  \n  return errors;\n}"],"mappings":"AAAA,eAAe,SAASA,QAAT,CAAkBC,MAAlB,EAA0BC,KAA1B,EAAiCC,IAAjC,EAAuC;EACpD,IAAIC,MAAM,GAAG,EAAb;;EACA,IAAID,IAAI,KAAK,QAAb,EAAuB,CAEtB,CAFD,MAEO,IAAIA,IAAI,KAAK,QAAb,EAAuB;IAC5B,IAAIF,MAAM,CAACI,KAAP,IAAgBH,KAApB,EAA2B;MACzBI,KAAK,CAACD,KAAN,GAAc,IAAd;IACD;IAED;AACJ;AACA;AACA;AACA;AACA;AACA;;;IACI,MAAME,KAAK,GAAG,iDAAd,CAZ4B,CAa5B;;IACA,IAAIN,MAAM,CAACO,QAAP,CAAgBC,KAAhB,CAAsBF,KAAtB,CAAJ,EAAkC;MAChCG,MAAM,CAACF,QAAP,GAAkB,IAAlB;IACD;;IAED,IAAIP,MAAM,CAACO,QAAP,KAAoBG,QAAQ,CAACC,aAAT,CAAuB,qBAAvB,EAA8CC,KAAtE,EAA6E;MAC3EH,MAAM,CAACI,kBAAP,GAA4B,IAA5B;IACD;EAEF;;EAED,OAAOV,MAAP;AACD"},"metadata":{},"sourceType":"module"}