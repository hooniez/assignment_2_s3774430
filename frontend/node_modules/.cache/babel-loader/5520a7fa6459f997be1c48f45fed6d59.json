{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar CustomerProfilesChannelEndpointAssignmentList = require('./customerProfiles/customerProfilesChannelEndpointAssignment').CustomerProfilesChannelEndpointAssignmentList;\n\nvar CustomerProfilesEntityAssignmentsList = require('./customerProfiles/customerProfilesEntityAssignments').CustomerProfilesEntityAssignmentsList;\n\nvar CustomerProfilesEvaluationsList = require('./customerProfiles/customerProfilesEvaluations').CustomerProfilesEvaluationsList;\n\nvar Page = require('../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../base/values');\n/* jshint ignore:line */\n\n\nvar CustomerProfilesList;\nvar CustomerProfilesPage;\nvar CustomerProfilesInstance;\nvar CustomerProfilesContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the CustomerProfilesList\n *\n * @constructor Twilio.Trusthub.V1.CustomerProfilesList\n *\n * @param {Twilio.Trusthub.V1} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nCustomerProfilesList = function CustomerProfilesList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function customerProfiles\n   * @memberof Twilio.Trusthub.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Trusthub.V1.CustomerProfilesContext}\n   */\n\n  /* jshint ignore:end */\n  function CustomerProfilesListInstance(sid) {\n    return CustomerProfilesListInstance.get(sid);\n  }\n\n  CustomerProfilesListInstance._version = version; // Path Solution\n\n  CustomerProfilesListInstance._solution = {};\n  CustomerProfilesListInstance._uri = `/CustomerProfiles`;\n  /* jshint ignore:start */\n\n  /**\n   * create a CustomerProfilesInstance\n   *\n   * @function create\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.friendlyName -\n   *          The string that you assigned to describe the resource\n   * @param {string} opts.email - The email address\n   * @param {string} opts.policySid - The unique string of a policy.\n   * @param {string} [opts.statusCallback] -\n   *          The URL we call to inform your application of status changes.\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed CustomerProfilesInstance\n   */\n\n  /* jshint ignore:end */\n\n  CustomerProfilesListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n\n    if (_.isUndefined(opts['friendlyName'])) {\n      throw new Error('Required parameter \"opts[\\'friendlyName\\']\" missing.');\n    }\n\n    if (_.isUndefined(opts['email'])) {\n      throw new Error('Required parameter \"opts[\\'email\\']\" missing.');\n    }\n\n    if (_.isUndefined(opts['policySid'])) {\n      throw new Error('Required parameter \"opts[\\'policySid\\']\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'Email': _.get(opts, 'email'),\n      'PolicySid': _.get(opts, 'policySid'),\n      'StatusCallback': _.get(opts, 'statusCallback')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new CustomerProfilesInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Streams CustomerProfilesInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {customer_profiles.status} [opts.status] -\n   *          The verification status of the Customer-Profile resource\n   * @param {string} [opts.friendlyName] -\n   *          The string that you assigned to describe the resource\n   * @param {string} [opts.policySid] - The unique string of a policy.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n\n  CustomerProfilesListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists CustomerProfilesInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {customer_profiles.status} [opts.status] -\n   *          The verification status of the Customer-Profile resource\n   * @param {string} [opts.friendlyName] -\n   *          The string that you assigned to describe the resource\n   * @param {string} [opts.policySid] - The unique string of a policy.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  CustomerProfilesListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of CustomerProfilesInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {customer_profiles.status} [opts.status] -\n   *          The verification status of the Customer-Profile resource\n   * @param {string} [opts.friendlyName] -\n   *          The string that you assigned to describe the resource\n   * @param {string} [opts.policySid] - The unique string of a policy.\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  CustomerProfilesListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'Status': _.get(opts, 'status'),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'PolicySid': _.get(opts, 'policySid'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new CustomerProfilesPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of CustomerProfilesInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  CustomerProfilesListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new CustomerProfilesPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a customer_profiles\n   *\n   * @function get\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesList#\n   *\n   * @param {string} sid - The unique string that identifies the resource.\n   *\n   * @returns {Twilio.Trusthub.V1.CustomerProfilesContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  CustomerProfilesListInstance.get = function get(sid) {\n    return new CustomerProfilesContext(this._version, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  CustomerProfilesListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  CustomerProfilesListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return CustomerProfilesListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the CustomerProfilesPage\n *\n * @constructor Twilio.Trusthub.V1.CustomerProfilesPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {CustomerProfilesSolution} solution - Path solution\n *\n * @returns CustomerProfilesPage\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesPage = function CustomerProfilesPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(CustomerProfilesPage.prototype, Page.prototype);\n\nCustomerProfilesPage.prototype.constructor = CustomerProfilesPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of CustomerProfilesInstance\n *\n * @function getInstance\n * @memberof Twilio.Trusthub.V1.CustomerProfilesPage#\n *\n * @param {CustomerProfilesPayload} payload - Payload response from the API\n *\n * @returns CustomerProfilesInstance\n */\n\n/* jshint ignore:end */\n\nCustomerProfilesPage.prototype.getInstance = function getInstance(payload) {\n  return new CustomerProfilesInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trusthub.V1.CustomerProfilesPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nCustomerProfilesPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the CustomerProfilesContext\n *\n * @constructor Twilio.Trusthub.V1.CustomerProfilesInstance\n *\n * @property {string} sid - The unique string that identifies the resource.\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} policySid - The unique string of a policy.\n * @property {string} friendlyName -\n *          The string that you assigned to describe the resource\n * @property {customer_profiles.status} status -\n *          The verification status of the Customer-Profile resource\n * @property {Date} validUntil -\n *          The ISO 8601 date and time in GMT when the resource will be valid until.\n * @property {string} email - The email address\n * @property {string} statusCallback -\n *          The URL we call to inform your application of status changes.\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the resource was last updated\n * @property {string} url - The absolute URL of the Customer-Profile resource\n * @property {string} links -\n *          The URLs of the Assigned Items of the Customer-Profile resource\n *\n * @param {V1} version - Version of the resource\n * @param {CustomerProfilesPayload} payload - The instance payload\n * @param {sid} sid - The unique string that identifies the resource.\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesInstance = function CustomerProfilesInstance(version, payload, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.policySid = payload.policy_sid; // jshint ignore:line\n\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n\n  this.status = payload.status; // jshint ignore:line\n\n  this.validUntil = deserialize.iso8601DateTime(payload.valid_until); // jshint ignore:line\n\n  this.email = payload.email; // jshint ignore:line\n\n  this.statusCallback = payload.status_callback; // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n\n  this.links = payload.links; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(CustomerProfilesInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new CustomerProfilesContext(this._version, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a CustomerProfilesInstance\n *\n * @function fetch\n * @memberof Twilio.Trusthub.V1.CustomerProfilesInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CustomerProfilesInstance\n */\n\n/* jshint ignore:end */\n\nCustomerProfilesInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * update a CustomerProfilesInstance\n *\n * @function update\n * @memberof Twilio.Trusthub.V1.CustomerProfilesInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {customer_profiles.status} [opts.status] -\n *          The verification status of the Customer-Profile resource\n * @param {string} [opts.statusCallback] -\n *          The URL we call to inform your application of status changes.\n * @param {string} [opts.friendlyName] -\n *          The string that you assigned to describe the resource\n * @param {string} [opts.email] - The email address\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CustomerProfilesInstance\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * remove a CustomerProfilesInstance\n *\n * @function remove\n * @memberof Twilio.Trusthub.V1.CustomerProfilesInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CustomerProfilesInstance\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n/* jshint ignore:start */\n\n/**\n * Access the customerProfilesEntityAssignments\n *\n * @function customerProfilesEntityAssignments\n * @memberof Twilio.Trusthub.V1.CustomerProfilesInstance#\n *\n * @returns {Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsList}\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesInstance.prototype.customerProfilesEntityAssignments = function customerProfilesEntityAssignments() {\n  return this._proxy.customerProfilesEntityAssignments;\n};\n/* jshint ignore:start */\n\n/**\n * Access the customerProfilesEvaluations\n *\n * @function customerProfilesEvaluations\n * @memberof Twilio.Trusthub.V1.CustomerProfilesInstance#\n *\n * @returns {Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEvaluationsList}\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesInstance.prototype.customerProfilesEvaluations = function customerProfilesEvaluations() {\n  return this._proxy.customerProfilesEvaluations;\n};\n/* jshint ignore:start */\n\n/**\n * Access the customerProfilesChannelEndpointAssignment\n *\n * @function customerProfilesChannelEndpointAssignment\n * @memberof Twilio.Trusthub.V1.CustomerProfilesInstance#\n *\n * @returns {Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesChannelEndpointAssignmentList}\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesInstance.prototype.customerProfilesChannelEndpointAssignment = function customerProfilesChannelEndpointAssignment() {\n  return this._proxy.customerProfilesChannelEndpointAssignment;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trusthub.V1.CustomerProfilesInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nCustomerProfilesInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the CustomerProfilesContext\n *\n * @constructor Twilio.Trusthub.V1.CustomerProfilesContext\n *\n * @property {Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsList} customerProfilesEntityAssignments -\n *          customerProfilesEntityAssignments resource\n * @property {Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEvaluationsList} customerProfilesEvaluations -\n *          customerProfilesEvaluations resource\n * @property {Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesChannelEndpointAssignmentList} customerProfilesChannelEndpointAssignment -\n *          customerProfilesChannelEndpointAssignment resource\n *\n * @param {V1} version - Version of the resource\n * @param {sid} sid - The unique string that identifies the resource.\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesContext = function CustomerProfilesContext(version, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    sid: sid\n  };\n  this._uri = `/CustomerProfiles/${sid}`; // Dependents\n\n  this._customerProfilesEntityAssignments = undefined;\n  this._customerProfilesEvaluations = undefined;\n  this._customerProfilesChannelEndpointAssignment = undefined;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a CustomerProfilesInstance\n *\n * @function fetch\n * @memberof Twilio.Trusthub.V1.CustomerProfilesContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CustomerProfilesInstance\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new CustomerProfilesInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * update a CustomerProfilesInstance\n *\n * @function update\n * @memberof Twilio.Trusthub.V1.CustomerProfilesContext#\n *\n * @param {object} [opts] - Options for request\n * @param {customer_profiles.status} [opts.status] -\n *          The verification status of the Customer-Profile resource\n * @param {string} [opts.statusCallback] -\n *          The URL we call to inform your application of status changes.\n * @param {string} [opts.friendlyName] -\n *          The string that you assigned to describe the resource\n * @param {string} [opts.email] - The email address\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CustomerProfilesInstance\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'Status': _.get(opts, 'status'),\n    'StatusCallback': _.get(opts, 'statusCallback'),\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'Email': _.get(opts, 'email')\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new CustomerProfilesInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * remove a CustomerProfilesInstance\n *\n * @function remove\n * @memberof Twilio.Trusthub.V1.CustomerProfilesContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CustomerProfilesInstance\n */\n\n/* jshint ignore:end */\n\n\nCustomerProfilesContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(CustomerProfilesContext.prototype, 'customerProfilesEntityAssignments', {\n  get: function () {\n    if (!this._customerProfilesEntityAssignments) {\n      this._customerProfilesEntityAssignments = new CustomerProfilesEntityAssignmentsList(this._version, this._solution.sid);\n    }\n\n    return this._customerProfilesEntityAssignments;\n  }\n});\nObject.defineProperty(CustomerProfilesContext.prototype, 'customerProfilesEvaluations', {\n  get: function () {\n    if (!this._customerProfilesEvaluations) {\n      this._customerProfilesEvaluations = new CustomerProfilesEvaluationsList(this._version, this._solution.sid);\n    }\n\n    return this._customerProfilesEvaluations;\n  }\n});\nObject.defineProperty(CustomerProfilesContext.prototype, 'customerProfilesChannelEndpointAssignment', {\n  get: function () {\n    if (!this._customerProfilesChannelEndpointAssignment) {\n      this._customerProfilesChannelEndpointAssignment = new CustomerProfilesChannelEndpointAssignmentList(this._version, this._solution.sid);\n    }\n\n    return this._customerProfilesChannelEndpointAssignment;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trusthub.V1.CustomerProfilesContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\nCustomerProfilesContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nCustomerProfilesContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  CustomerProfilesList: CustomerProfilesList,\n  CustomerProfilesPage: CustomerProfilesPage,\n  CustomerProfilesInstance: CustomerProfilesInstance,\n  CustomerProfilesContext: CustomerProfilesContext\n};","map":{"version":3,"names":["Q","require","_","util","CustomerProfilesChannelEndpointAssignmentList","CustomerProfilesEntityAssignmentsList","CustomerProfilesEvaluationsList","Page","deserialize","values","CustomerProfilesList","CustomerProfilesPage","CustomerProfilesInstance","CustomerProfilesContext","version","CustomerProfilesListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isUndefined","Error","deferred","defer","data","of","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","each","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","fetchNextPage","fn","page","instances","instance","nextPage","merge","list","allResources","resource","push","length","pageToken","pageNumber","params","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","accountSid","account_sid","policySid","policy_sid","friendlyName","friendly_name","status","validUntil","iso8601DateTime","valid_until","email","statusCallback","status_callback","dateCreated","date_created","dateUpdated","date_updated","url","links","_context","undefined","Object","defineProperty","fetch","_proxy","update","remove","customerProfilesEntityAssignments","customerProfilesEvaluations","customerProfilesChannelEndpointAssignment","_customerProfilesEntityAssignments","_customerProfilesEvaluations","_customerProfilesChannelEndpointAssignment","module","exports"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/twilio/lib/rest/trusthub/v1/customerProfiles.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar CustomerProfilesChannelEndpointAssignmentList = require(\n    './customerProfiles/customerProfilesChannelEndpointAssignment').CustomerProfilesChannelEndpointAssignmentList;\nvar CustomerProfilesEntityAssignmentsList = require(\n    './customerProfiles/customerProfilesEntityAssignments').CustomerProfilesEntityAssignmentsList;\nvar CustomerProfilesEvaluationsList = require(\n    './customerProfiles/customerProfilesEvaluations').CustomerProfilesEvaluationsList;\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar CustomerProfilesList;\nvar CustomerProfilesPage;\nvar CustomerProfilesInstance;\nvar CustomerProfilesContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the CustomerProfilesList\n *\n * @constructor Twilio.Trusthub.V1.CustomerProfilesList\n *\n * @param {Twilio.Trusthub.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nCustomerProfilesList = function CustomerProfilesList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function customerProfiles\n   * @memberof Twilio.Trusthub.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Trusthub.V1.CustomerProfilesContext}\n   */\n  /* jshint ignore:end */\n  function CustomerProfilesListInstance(sid) {\n    return CustomerProfilesListInstance.get(sid);\n  }\n\n  CustomerProfilesListInstance._version = version;\n  // Path Solution\n  CustomerProfilesListInstance._solution = {};\n  CustomerProfilesListInstance._uri = `/CustomerProfiles`;\n  /* jshint ignore:start */\n  /**\n   * create a CustomerProfilesInstance\n   *\n   * @function create\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.friendlyName -\n   *          The string that you assigned to describe the resource\n   * @param {string} opts.email - The email address\n   * @param {string} opts.policySid - The unique string of a policy.\n   * @param {string} [opts.statusCallback] -\n   *          The URL we call to inform your application of status changes.\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed CustomerProfilesInstance\n   */\n  /* jshint ignore:end */\n  CustomerProfilesListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts['friendlyName'])) {\n      throw new Error('Required parameter \"opts[\\'friendlyName\\']\" missing.');\n    }\n    if (_.isUndefined(opts['email'])) {\n      throw new Error('Required parameter \"opts[\\'email\\']\" missing.');\n    }\n    if (_.isUndefined(opts['policySid'])) {\n      throw new Error('Required parameter \"opts[\\'policySid\\']\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'Email': _.get(opts, 'email'),\n      'PolicySid': _.get(opts, 'policySid'),\n      'StatusCallback': _.get(opts, 'statusCallback')\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new CustomerProfilesInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams CustomerProfilesInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {customer_profiles.status} [opts.status] -\n   *          The verification status of the Customer-Profile resource\n   * @param {string} [opts.friendlyName] -\n   *          The string that you assigned to describe the resource\n   * @param {string} [opts.policySid] - The unique string of a policy.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  CustomerProfilesListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists CustomerProfilesInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {customer_profiles.status} [opts.status] -\n   *          The verification status of the Customer-Profile resource\n   * @param {string} [opts.friendlyName] -\n   *          The string that you assigned to describe the resource\n   * @param {string} [opts.policySid] - The unique string of a policy.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  CustomerProfilesListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of CustomerProfilesInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {customer_profiles.status} [opts.status] -\n   *          The verification status of the Customer-Profile resource\n   * @param {string} [opts.friendlyName] -\n   *          The string that you assigned to describe the resource\n   * @param {string} [opts.policySid] - The unique string of a policy.\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  CustomerProfilesListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Status': _.get(opts, 'status'),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'PolicySid': _.get(opts, 'policySid'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new CustomerProfilesPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of CustomerProfilesInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  CustomerProfilesListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new CustomerProfilesPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a customer_profiles\n   *\n   * @function get\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesList#\n   *\n   * @param {string} sid - The unique string that identifies the resource.\n   *\n   * @returns {Twilio.Trusthub.V1.CustomerProfilesContext}\n   */\n  /* jshint ignore:end */\n  CustomerProfilesListInstance.get = function get(sid) {\n    return new CustomerProfilesContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Trusthub.V1.CustomerProfilesList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  CustomerProfilesListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  CustomerProfilesListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return CustomerProfilesListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the CustomerProfilesPage\n *\n * @constructor Twilio.Trusthub.V1.CustomerProfilesPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {CustomerProfilesSolution} solution - Path solution\n *\n * @returns CustomerProfilesPage\n */\n/* jshint ignore:end */\nCustomerProfilesPage = function CustomerProfilesPage(version, response,\n                                                      solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(CustomerProfilesPage.prototype, Page.prototype);\nCustomerProfilesPage.prototype.constructor = CustomerProfilesPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of CustomerProfilesInstance\n *\n * @function getInstance\n * @memberof Twilio.Trusthub.V1.CustomerProfilesPage#\n *\n * @param {CustomerProfilesPayload} payload - Payload response from the API\n *\n * @returns CustomerProfilesInstance\n */\n/* jshint ignore:end */\nCustomerProfilesPage.prototype.getInstance = function getInstance(payload) {\n  return new CustomerProfilesInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trusthub.V1.CustomerProfilesPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nCustomerProfilesPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nCustomerProfilesPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the CustomerProfilesContext\n *\n * @constructor Twilio.Trusthub.V1.CustomerProfilesInstance\n *\n * @property {string} sid - The unique string that identifies the resource.\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} policySid - The unique string of a policy.\n * @property {string} friendlyName -\n *          The string that you assigned to describe the resource\n * @property {customer_profiles.status} status -\n *          The verification status of the Customer-Profile resource\n * @property {Date} validUntil -\n *          The ISO 8601 date and time in GMT when the resource will be valid until.\n * @property {string} email - The email address\n * @property {string} statusCallback -\n *          The URL we call to inform your application of status changes.\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the resource was last updated\n * @property {string} url - The absolute URL of the Customer-Profile resource\n * @property {string} links -\n *          The URLs of the Assigned Items of the Customer-Profile resource\n *\n * @param {V1} version - Version of the resource\n * @param {CustomerProfilesPayload} payload - The instance payload\n * @param {sid} sid - The unique string that identifies the resource.\n */\n/* jshint ignore:end */\nCustomerProfilesInstance = function CustomerProfilesInstance(version, payload,\n    sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.policySid = payload.policy_sid; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.status = payload.status; // jshint ignore:line\n  this.validUntil = deserialize.iso8601DateTime(payload.valid_until); // jshint ignore:line\n  this.email = payload.email; // jshint ignore:line\n  this.statusCallback = payload.status_callback; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.links = payload.links; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {sid: sid || this.sid, };\n};\n\nObject.defineProperty(CustomerProfilesInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new CustomerProfilesContext(this._version, this._solution.sid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a CustomerProfilesInstance\n *\n * @function fetch\n * @memberof Twilio.Trusthub.V1.CustomerProfilesInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CustomerProfilesInstance\n */\n/* jshint ignore:end */\nCustomerProfilesInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a CustomerProfilesInstance\n *\n * @function update\n * @memberof Twilio.Trusthub.V1.CustomerProfilesInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {customer_profiles.status} [opts.status] -\n *          The verification status of the Customer-Profile resource\n * @param {string} [opts.statusCallback] -\n *          The URL we call to inform your application of status changes.\n * @param {string} [opts.friendlyName] -\n *          The string that you assigned to describe the resource\n * @param {string} [opts.email] - The email address\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CustomerProfilesInstance\n */\n/* jshint ignore:end */\nCustomerProfilesInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a CustomerProfilesInstance\n *\n * @function remove\n * @memberof Twilio.Trusthub.V1.CustomerProfilesInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CustomerProfilesInstance\n */\n/* jshint ignore:end */\nCustomerProfilesInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the customerProfilesEntityAssignments\n *\n * @function customerProfilesEntityAssignments\n * @memberof Twilio.Trusthub.V1.CustomerProfilesInstance#\n *\n * @returns {Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsList}\n */\n/* jshint ignore:end */\nCustomerProfilesInstance.prototype.customerProfilesEntityAssignments = function\n    customerProfilesEntityAssignments() {\n  return this._proxy.customerProfilesEntityAssignments;\n};\n\n/* jshint ignore:start */\n/**\n * Access the customerProfilesEvaluations\n *\n * @function customerProfilesEvaluations\n * @memberof Twilio.Trusthub.V1.CustomerProfilesInstance#\n *\n * @returns {Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEvaluationsList}\n */\n/* jshint ignore:end */\nCustomerProfilesInstance.prototype.customerProfilesEvaluations = function\n    customerProfilesEvaluations() {\n  return this._proxy.customerProfilesEvaluations;\n};\n\n/* jshint ignore:start */\n/**\n * Access the customerProfilesChannelEndpointAssignment\n *\n * @function customerProfilesChannelEndpointAssignment\n * @memberof Twilio.Trusthub.V1.CustomerProfilesInstance#\n *\n * @returns {Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesChannelEndpointAssignmentList}\n */\n/* jshint ignore:end */\nCustomerProfilesInstance.prototype.customerProfilesChannelEndpointAssignment =\n    function customerProfilesChannelEndpointAssignment() {\n  return this._proxy.customerProfilesChannelEndpointAssignment;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trusthub.V1.CustomerProfilesInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nCustomerProfilesInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nCustomerProfilesInstance.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the CustomerProfilesContext\n *\n * @constructor Twilio.Trusthub.V1.CustomerProfilesContext\n *\n * @property {Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEntityAssignmentsList} customerProfilesEntityAssignments -\n *          customerProfilesEntityAssignments resource\n * @property {Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesEvaluationsList} customerProfilesEvaluations -\n *          customerProfilesEvaluations resource\n * @property {Twilio.Trusthub.V1.CustomerProfilesContext.CustomerProfilesChannelEndpointAssignmentList} customerProfilesChannelEndpointAssignment -\n *          customerProfilesChannelEndpointAssignment resource\n *\n * @param {V1} version - Version of the resource\n * @param {sid} sid - The unique string that identifies the resource.\n */\n/* jshint ignore:end */\nCustomerProfilesContext = function CustomerProfilesContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {sid: sid, };\n  this._uri = `/CustomerProfiles/${sid}`;\n\n  // Dependents\n  this._customerProfilesEntityAssignments = undefined;\n  this._customerProfilesEvaluations = undefined;\n  this._customerProfilesChannelEndpointAssignment = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a CustomerProfilesInstance\n *\n * @function fetch\n * @memberof Twilio.Trusthub.V1.CustomerProfilesContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CustomerProfilesInstance\n */\n/* jshint ignore:end */\nCustomerProfilesContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new CustomerProfilesInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a CustomerProfilesInstance\n *\n * @function update\n * @memberof Twilio.Trusthub.V1.CustomerProfilesContext#\n *\n * @param {object} [opts] - Options for request\n * @param {customer_profiles.status} [opts.status] -\n *          The verification status of the Customer-Profile resource\n * @param {string} [opts.statusCallback] -\n *          The URL we call to inform your application of status changes.\n * @param {string} [opts.friendlyName] -\n *          The string that you assigned to describe the resource\n * @param {string} [opts.email] - The email address\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CustomerProfilesInstance\n */\n/* jshint ignore:end */\nCustomerProfilesContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'Status': _.get(opts, 'status'),\n    'StatusCallback': _.get(opts, 'statusCallback'),\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'Email': _.get(opts, 'email')\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new CustomerProfilesInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a CustomerProfilesInstance\n *\n * @function remove\n * @memberof Twilio.Trusthub.V1.CustomerProfilesContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed CustomerProfilesInstance\n */\n/* jshint ignore:end */\nCustomerProfilesContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(CustomerProfilesContext.prototype,\n  'customerProfilesEntityAssignments', {\n    get: function() {\n      if (!this._customerProfilesEntityAssignments) {\n        this._customerProfilesEntityAssignments = new CustomerProfilesEntityAssignmentsList(\n          this._version,\n          this._solution.sid\n        );\n      }\n      return this._customerProfilesEntityAssignments;\n    }\n});\n\nObject.defineProperty(CustomerProfilesContext.prototype,\n  'customerProfilesEvaluations', {\n    get: function() {\n      if (!this._customerProfilesEvaluations) {\n        this._customerProfilesEvaluations = new CustomerProfilesEvaluationsList(\n          this._version,\n          this._solution.sid\n        );\n      }\n      return this._customerProfilesEvaluations;\n    }\n});\n\nObject.defineProperty(CustomerProfilesContext.prototype,\n  'customerProfilesChannelEndpointAssignment', {\n    get: function() {\n      if (!this._customerProfilesChannelEndpointAssignment) {\n        this._customerProfilesChannelEndpointAssignment = new CustomerProfilesChannelEndpointAssignmentList(\n          this._version,\n          this._solution.sid\n        );\n      }\n      return this._customerProfilesChannelEndpointAssignment;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trusthub.V1.CustomerProfilesContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nCustomerProfilesContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nCustomerProfilesContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  CustomerProfilesList: CustomerProfilesList,\n  CustomerProfilesPage: CustomerProfilesPage,\n  CustomerProfilesInstance: CustomerProfilesInstance,\n  CustomerProfilesContext: CustomerProfilesContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}