{"ast":null,"code":"var _jsxFileName = \"/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/PostForm.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { Row, Col, Card, Form, Button, Container, ProgressBar, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport { Image } from \"react-bootstrap-icons\"; // import Post from \"./Post\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst postUrl = \"https://api.cloudinary.com/v1_1/duc4zmhl7/image/upload\";\nconst resUrl = \"https://res.cloudinary.com/duc4zmhl7/image/upload\";\nexport default function PostForm(_ref) {\n  _s();\n\n  let {\n    user,\n    dispatchUser,\n    addPost,\n    postId\n  } = _ref;\n  const [isPostable, setIsPostable] = React.useState(false);\n  const [numCharsTyped, setNumCharsTyped] = React.useState(0);\n  const [progressBarVariant, setProgressBarVariant] = React.useState(\"success\");\n  const wordLimit = 250;\n  React.useEffect(() => {\n    // Disable/enable the post button\n    clearTimeout(validateTextareaTimeoutId);\n    validateTextareaTimeoutId = setTimeout(() => {\n      setIsPostable(validateTextarea(numCharsTyped));\n    }, 500);\n\n    if (Math.floor(numCharsTyped / wordLimit * 100) <= 70) {\n      setProgressBarVariant(\"success\");\n    } else if (numCharsTyped <= wordLimit) {\n      setProgressBarVariant(\"warning\");\n    } else {\n      setProgressBarVariant(\"danger\");\n    }\n  }, [numCharsTyped]);\n  let validateTextareaTimeoutId;\n\n  const validateTextarea = num => num > 0 && num <= wordLimit;\n\n  const textareaChangeHandler = event => {\n    setNumCharsTyped(event.target.value.length);\n  };\n\n  const imageUploadHandler = event => {\n    let img = document.querySelector(\"#myImg\");\n    img.src = URL.createObjectURL(event.target.files[0]); // TODO: CLEAN UP AFTER \n  };\n\n  const postHandler = async e => {\n    e.preventDefault();\n    let imagesToUpload = document.querySelector(\"#imageUpload\").files;\n\n    if (imagesToUpload.length != 0) {\n      const data = new FormData();\n      data.append(\"file\", imagesToUpload[0]);\n      data.append(\"upload_preset\", \"zqlcfaas\");\n      fetch(postUrl, {\n        method: \"POST\",\n        body: data\n      }).then(response => response.json()).then(data => {\n        addPost({\n          postId: postId,\n          parentId: null,\n          children: [],\n          img: `${resUrl}/v${data.version}/${data.public_id}.${data.format}`,\n          text: e.target[0].value,\n          datePosted: new Date(),\n          postyBy: user.data.email\n        });\n        e.target.reset();\n        e.target.querySelector(\"img\").src = \"#\";\n        setIsPostable(false);\n      }).catch(error => console.log(error));\n    } else {\n      // If no image was attached\n      addPost({\n        postId: postId,\n        parentId: null,\n        email: user.data.email,\n        text: e.target[0].value,\n        img: null,\n        datePosted: new Date()\n      });\n      e.target.reset();\n      setIsPostable(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"#\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"gx-0\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 2,\n        children: /*#__PURE__*/_jsxDEV(Card.Img, {\n          src: user.data.avatarsrc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: postHandler,\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 3,\n            onChange: textareaChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"myImg\",\n            src: \"#\",\n            className: \"img-fluid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n            className: \"my-3\",\n            variant: progressBarVariant,\n            now: Math.floor(numCharsTyped / wordLimit * 100),\n            label: progressBarVariant !== \"success\" && `${wordLimit - numCharsTyped} letters left`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Container, {\n            className: \"d-flex justify-content-between mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"imageUpload\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: /*#__PURE__*/_jsxDEV(Image, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"file\",\n                className: \"d-none\",\n                onChange: imageUploadHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              disabled: !isPostable,\n              children: \"Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostForm, \"d1h2uLj+C+m6pzlIZmXwdS5W4IE=\");\n\n_c = PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","Row","Col","Card","Form","Button","Container","ProgressBar","OverlayTrigger","Tooltip","Image","postUrl","resUrl","PostForm","user","dispatchUser","addPost","postId","isPostable","setIsPostable","useState","numCharsTyped","setNumCharsTyped","progressBarVariant","setProgressBarVariant","wordLimit","useEffect","clearTimeout","validateTextareaTimeoutId","setTimeout","validateTextarea","Math","floor","num","textareaChangeHandler","event","target","value","length","imageUploadHandler","img","document","querySelector","src","URL","createObjectURL","files","postHandler","e","preventDefault","imagesToUpload","data","FormData","append","fetch","method","body","then","response","json","parentId","children","version","public_id","format","text","datePosted","Date","postyBy","email","reset","catch","error","console","log","avatarsrc"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/PostForm.js"],"sourcesContent":["import * as React from \"react\";\nimport {\n  Row,\n  Col,\n  Card,\n  Form,\n  Button,\n  Container,\n  ProgressBar,\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\nimport { Image } from \"react-bootstrap-icons\";\n// import Post from \"./Post\";\n\nconst postUrl = \"https://api.cloudinary.com/v1_1/duc4zmhl7/image/upload\";\nconst resUrl = \"https://res.cloudinary.com/duc4zmhl7/image/upload\";\n\nexport default function PostForm({ user, dispatchUser, addPost, postId }) {\n  const [isPostable, setIsPostable] = React.useState(false);\n  const [numCharsTyped, setNumCharsTyped] = React.useState(0);\n  const [progressBarVariant, setProgressBarVariant] = React.useState(\"success\");\n  const wordLimit = 250;\n\n  React.useEffect(() => {\n    // Disable/enable the post button\n    clearTimeout(validateTextareaTimeoutId);\n    validateTextareaTimeoutId = setTimeout(() => {\n      setIsPostable(validateTextarea(numCharsTyped));\n    }, 500);\n\n    if (Math.floor((numCharsTyped / wordLimit) * 100) <= 70) {\n      setProgressBarVariant(\"success\");\n    } else if (numCharsTyped <= wordLimit) {\n      setProgressBarVariant(\"warning\");\n    } else {\n      setProgressBarVariant(\"danger\");\n    }\n  }, [numCharsTyped]);\n\n  let validateTextareaTimeoutId;\n\n  const validateTextarea = (num) => num > 0 && num <= wordLimit;\n\n  const textareaChangeHandler = (event) => {\n    setNumCharsTyped(event.target.value.length);\n  };\n\n  const imageUploadHandler = (event) => {\n    let img = document.querySelector(\"#myImg\");\n    img.src = URL.createObjectURL(event.target.files[0]);\n\n    // TODO: CLEAN UP AFTER \n  };\n\n  const postHandler = async (e) => {\n    e.preventDefault();\n\n    let imagesToUpload = document.querySelector(\"#imageUpload\").files;\n    if (imagesToUpload.length != 0) {\n      const data = new FormData();\n      data.append(\"file\", imagesToUpload[0]);\n      data.append(\"upload_preset\", \"zqlcfaas\");\n\n      fetch(postUrl, {\n        method: \"POST\",\n        body: data,\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          addPost(\n            {\n              postId: postId,\n              parentId: null, \n              children: [],\n              img: `${resUrl}/v${data.version}/${data.public_id}.${data.format}`,\n              text: e.target[0].value,\n              datePosted: new Date(),\n              postyBy:  user.data.email,\n          });\n          e.target.reset();\n          e.target.querySelector(\"img\").src = \"#\";\n          setIsPostable(false);\n        })\n        .catch((error) => console.log(error));\n    } else {\n      // If no image was attached\n      addPost({\n        postId: postId,\n        parentId: null, \n        email: user.data.email,\n        text: e.target[0].value,\n        img: null,\n        datePosted: new Date(),\n        \n      });\n      e.target.reset();\n      setIsPostable(false);\n    }\n  };\n\n  return (\n    <Card>\n      <img src=\"#\"></img>\n      <Row className=\"gx-0\">\n        <Col xs={2}>\n          <Card.Img src={user.data.avatarsrc}></Card.Img>\n        </Col>\n        <Col>\n          <Form onSubmit={postHandler}>\n            <Form.Control\n              as=\"textarea\"\n              rows={3}\n              onChange={textareaChangeHandler}\n            ></Form.Control>\n            <img id=\"myImg\" src=\"#\" className=\"img-fluid\"></img>\n\n            <ProgressBar\n              className=\"my-3\"\n              variant={progressBarVariant}\n              now={Math.floor((numCharsTyped / wordLimit) * 100)}\n              label={\n                progressBarVariant !== \"success\" &&\n                `${wordLimit - numCharsTyped} letters left`\n              }\n            ></ProgressBar>\n\n            <Container className=\"d-flex justify-content-between mb-3\">\n              <Form.Group controlId=\"imageUpload\">\n                <Form.Label>\n                  <Image></Image>\n                </Form.Label>\n                <Form.Control\n                  type=\"file\"\n                  className=\"d-none\"\n                  onChange={imageUploadHandler}\n                ></Form.Control>\n              </Form.Group>\n\n              <Button type=\"submit\" disabled={!isPostable}>\n                Post\n              </Button>\n            </Container>\n          </Form>\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}