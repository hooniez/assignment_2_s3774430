{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar AnnotationList;\nvar AnnotationPage;\nvar AnnotationInstance;\nvar AnnotationContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the AnnotationList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Insights.V1.CallContext.AnnotationList\n *\n * @param {Twilio.Insights.V1} version - Version of the resource\n * @param {string} callSid - Call SID.\n */\n\n/* jshint ignore:end */\n\nAnnotationList = function AnnotationList(version, callSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function annotation\n   * @memberof Twilio.Insights.V1.CallContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Insights.V1.CallContext.AnnotationContext}\n   */\n\n  /* jshint ignore:end */\n  function AnnotationListInstance(sid) {\n    return AnnotationListInstance.get(sid);\n  }\n\n  AnnotationListInstance._version = version; // Path Solution\n\n  AnnotationListInstance._solution = {\n    callSid: callSid\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a annotation\n   *\n   * @function get\n   * @memberof Twilio.Insights.V1.CallContext.AnnotationList#\n   *\n   * @returns {Twilio.Insights.V1.CallContext.AnnotationContext}\n   */\n\n  /* jshint ignore:end */\n\n  AnnotationListInstance.get = function get() {\n    return new AnnotationContext(this._version, this._solution.callSid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Insights.V1.CallContext.AnnotationList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  AnnotationListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  AnnotationListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return AnnotationListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the AnnotationPage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Insights.V1.CallContext.AnnotationPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {AnnotationSolution} solution - Path solution\n *\n * @returns AnnotationPage\n */\n\n/* jshint ignore:end */\n\n\nAnnotationPage = function AnnotationPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(AnnotationPage.prototype, Page.prototype);\n\nAnnotationPage.prototype.constructor = AnnotationPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of AnnotationInstance\n *\n * @function getInstance\n * @memberof Twilio.Insights.V1.CallContext.AnnotationPage#\n *\n * @param {AnnotationPayload} payload - Payload response from the API\n *\n * @returns AnnotationInstance\n */\n\n/* jshint ignore:end */\n\nAnnotationPage.prototype.getInstance = function getInstance(payload) {\n  return new AnnotationInstance(this._version, payload, this._solution.callSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Insights.V1.CallContext.AnnotationPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nAnnotationPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nAnnotationPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the AnnotationContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Insights.V1.CallContext.AnnotationInstance\n *\n * @property {string} callSid - Call SID.\n * @property {string} accountSid - Account SID.\n * @property {annotation.answered_by} answeredBy -\n *          Indicates the answering entity as determined by Answering Machine Detection.\n * @property {annotation.connectivity_issue} connectivityIssue -\n *          Indicates if the call had any connectivity issue\n * @property {string} qualityIssues -\n *          Indicates if the call had audio quality issues.\n * @property {boolean} spam - Call spam indicator\n * @property {number} callScore - Call Score\n * @property {string} comment - User comments\n * @property {string} incident - Call tag for incidents or support ticket\n * @property {string} url - The URL of this resource.\n *\n * @param {V1} version - Version of the resource\n * @param {AnnotationPayload} payload - The instance payload\n * @param {sid} callSid - Call SID.\n */\n\n/* jshint ignore:end */\n\n\nAnnotationInstance = function AnnotationInstance(version, payload, callSid) {\n  this._version = version; // Marshaled Properties\n\n  this.callSid = payload.call_sid; // jshint ignore:line\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.answeredBy = payload.answered_by; // jshint ignore:line\n\n  this.connectivityIssue = payload.connectivity_issue; // jshint ignore:line\n\n  this.qualityIssues = payload.quality_issues; // jshint ignore:line\n\n  this.spam = payload.spam; // jshint ignore:line\n\n  this.callScore = deserialize.integer(payload.call_score); // jshint ignore:line\n\n  this.comment = payload.comment; // jshint ignore:line\n\n  this.incident = payload.incident; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    callSid: callSid\n  };\n};\n\nObject.defineProperty(AnnotationInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new AnnotationContext(this._version, this._solution.callSid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * update a AnnotationInstance\n *\n * @function update\n * @memberof Twilio.Insights.V1.CallContext.AnnotationInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {annotation.answered_by} [opts.answeredBy] -\n *          Indicates the answering entity as determined by Answering Machine Detection.\n * @param {annotation.connectivity_issue} [opts.connectivityIssue] -\n *          Indicates if the call had any connectivity issue\n * @param {string} [opts.qualityIssues] -\n *          Indicates if the call had audio quality issues.\n * @param {boolean} [opts.spam] - Call spam indicator\n * @param {number} [opts.callScore] - Call Score\n * @param {string} [opts.comment] - User comments\n * @param {string} [opts.incident] - Call tag for incidents or support ticket\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AnnotationInstance\n */\n\n/* jshint ignore:end */\n\nAnnotationInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * fetch a AnnotationInstance\n *\n * @function fetch\n * @memberof Twilio.Insights.V1.CallContext.AnnotationInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AnnotationInstance\n */\n\n/* jshint ignore:end */\n\n\nAnnotationInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Insights.V1.CallContext.AnnotationInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nAnnotationInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nAnnotationInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the AnnotationContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Insights.V1.CallContext.AnnotationContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} callSid - Call SID.\n */\n\n/* jshint ignore:end */\n\n\nAnnotationContext = function AnnotationContext(version, callSid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    callSid: callSid\n  };\n  this._uri = `/Voice/${callSid}/Annotation`;\n};\n/* jshint ignore:start */\n\n/**\n * update a AnnotationInstance\n *\n * @function update\n * @memberof Twilio.Insights.V1.CallContext.AnnotationContext#\n *\n * @param {object} [opts] - Options for request\n * @param {annotation.answered_by} [opts.answeredBy] -\n *          Indicates the answering entity as determined by Answering Machine Detection.\n * @param {annotation.connectivity_issue} [opts.connectivityIssue] -\n *          Indicates if the call had any connectivity issue\n * @param {string} [opts.qualityIssues] -\n *          Indicates if the call had audio quality issues.\n * @param {boolean} [opts.spam] - Call spam indicator\n * @param {number} [opts.callScore] - Call Score\n * @param {string} [opts.comment] - User comments\n * @param {string} [opts.incident] - Call tag for incidents or support ticket\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AnnotationInstance\n */\n\n/* jshint ignore:end */\n\n\nAnnotationContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'AnsweredBy': _.get(opts, 'answeredBy'),\n    'ConnectivityIssue': _.get(opts, 'connectivityIssue'),\n    'QualityIssues': _.get(opts, 'qualityIssues'),\n    'Spam': serialize.bool(_.get(opts, 'spam')),\n    'CallScore': _.get(opts, 'callScore'),\n    'Comment': _.get(opts, 'comment'),\n    'Incident': _.get(opts, 'incident')\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new AnnotationInstance(this._version, payload, this._solution.callSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a AnnotationInstance\n *\n * @function fetch\n * @memberof Twilio.Insights.V1.CallContext.AnnotationContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AnnotationInstance\n */\n\n/* jshint ignore:end */\n\n\nAnnotationContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new AnnotationInstance(this._version, payload, this._solution.callSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Insights.V1.CallContext.AnnotationContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nAnnotationContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nAnnotationContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  AnnotationList: AnnotationList,\n  AnnotationPage: AnnotationPage,\n  AnnotationInstance: AnnotationInstance,\n  AnnotationContext: AnnotationContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","deserialize","serialize","values","AnnotationList","AnnotationPage","AnnotationInstance","AnnotationContext","version","callSid","AnnotationListInstance","sid","get","_version","_solution","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","call_sid","accountSid","account_sid","answeredBy","answered_by","connectivityIssue","connectivity_issue","qualityIssues","quality_issues","spam","callScore","integer","call_score","comment","incident","url","_context","undefined","Object","defineProperty","update","opts","callback","_proxy","fetch","_uri","deferred","defer","data","of","bool","promise","uri","method","then","resolve","bind","catch","error","reject","nodeify","module","exports"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/twilio/lib/rest/insights/v1/call/annotation.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require('../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar AnnotationList;\nvar AnnotationPage;\nvar AnnotationInstance;\nvar AnnotationContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the AnnotationList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Insights.V1.CallContext.AnnotationList\n *\n * @param {Twilio.Insights.V1} version - Version of the resource\n * @param {string} callSid - Call SID.\n */\n/* jshint ignore:end */\nAnnotationList = function AnnotationList(version, callSid) {\n  /* jshint ignore:start */\n  /**\n   * @function annotation\n   * @memberof Twilio.Insights.V1.CallContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Insights.V1.CallContext.AnnotationContext}\n   */\n  /* jshint ignore:end */\n  function AnnotationListInstance(sid) {\n    return AnnotationListInstance.get(sid);\n  }\n\n  AnnotationListInstance._version = version;\n  // Path Solution\n  AnnotationListInstance._solution = {callSid: callSid};\n  /* jshint ignore:start */\n  /**\n   * Constructs a annotation\n   *\n   * @function get\n   * @memberof Twilio.Insights.V1.CallContext.AnnotationList#\n   *\n   * @returns {Twilio.Insights.V1.CallContext.AnnotationContext}\n   */\n  /* jshint ignore:end */\n  AnnotationListInstance.get = function get() {\n    return new AnnotationContext(this._version, this._solution.callSid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Insights.V1.CallContext.AnnotationList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  AnnotationListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  AnnotationListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return AnnotationListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the AnnotationPage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Insights.V1.CallContext.AnnotationPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {AnnotationSolution} solution - Path solution\n *\n * @returns AnnotationPage\n */\n/* jshint ignore:end */\nAnnotationPage = function AnnotationPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(AnnotationPage.prototype, Page.prototype);\nAnnotationPage.prototype.constructor = AnnotationPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of AnnotationInstance\n *\n * @function getInstance\n * @memberof Twilio.Insights.V1.CallContext.AnnotationPage#\n *\n * @param {AnnotationPayload} payload - Payload response from the API\n *\n * @returns AnnotationInstance\n */\n/* jshint ignore:end */\nAnnotationPage.prototype.getInstance = function getInstance(payload) {\n  return new AnnotationInstance(this._version, payload, this._solution.callSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Insights.V1.CallContext.AnnotationPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAnnotationPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nAnnotationPage.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the AnnotationContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Insights.V1.CallContext.AnnotationInstance\n *\n * @property {string} callSid - Call SID.\n * @property {string} accountSid - Account SID.\n * @property {annotation.answered_by} answeredBy -\n *          Indicates the answering entity as determined by Answering Machine Detection.\n * @property {annotation.connectivity_issue} connectivityIssue -\n *          Indicates if the call had any connectivity issue\n * @property {string} qualityIssues -\n *          Indicates if the call had audio quality issues.\n * @property {boolean} spam - Call spam indicator\n * @property {number} callScore - Call Score\n * @property {string} comment - User comments\n * @property {string} incident - Call tag for incidents or support ticket\n * @property {string} url - The URL of this resource.\n *\n * @param {V1} version - Version of the resource\n * @param {AnnotationPayload} payload - The instance payload\n * @param {sid} callSid - Call SID.\n */\n/* jshint ignore:end */\nAnnotationInstance = function AnnotationInstance(version, payload, callSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.callSid = payload.call_sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.answeredBy = payload.answered_by; // jshint ignore:line\n  this.connectivityIssue = payload.connectivity_issue; // jshint ignore:line\n  this.qualityIssues = payload.quality_issues; // jshint ignore:line\n  this.spam = payload.spam; // jshint ignore:line\n  this.callScore = deserialize.integer(payload.call_score); // jshint ignore:line\n  this.comment = payload.comment; // jshint ignore:line\n  this.incident = payload.incident; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {callSid: callSid, };\n};\n\nObject.defineProperty(AnnotationInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new AnnotationContext(this._version, this._solution.callSid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * update a AnnotationInstance\n *\n * @function update\n * @memberof Twilio.Insights.V1.CallContext.AnnotationInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {annotation.answered_by} [opts.answeredBy] -\n *          Indicates the answering entity as determined by Answering Machine Detection.\n * @param {annotation.connectivity_issue} [opts.connectivityIssue] -\n *          Indicates if the call had any connectivity issue\n * @param {string} [opts.qualityIssues] -\n *          Indicates if the call had audio quality issues.\n * @param {boolean} [opts.spam] - Call spam indicator\n * @param {number} [opts.callScore] - Call Score\n * @param {string} [opts.comment] - User comments\n * @param {string} [opts.incident] - Call tag for incidents or support ticket\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AnnotationInstance\n */\n/* jshint ignore:end */\nAnnotationInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * fetch a AnnotationInstance\n *\n * @function fetch\n * @memberof Twilio.Insights.V1.CallContext.AnnotationInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AnnotationInstance\n */\n/* jshint ignore:end */\nAnnotationInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Insights.V1.CallContext.AnnotationInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAnnotationInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nAnnotationInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the AnnotationContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Insights.V1.CallContext.AnnotationContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} callSid - Call SID.\n */\n/* jshint ignore:end */\nAnnotationContext = function AnnotationContext(version, callSid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {callSid: callSid, };\n  this._uri = `/Voice/${callSid}/Annotation`;\n};\n\n/* jshint ignore:start */\n/**\n * update a AnnotationInstance\n *\n * @function update\n * @memberof Twilio.Insights.V1.CallContext.AnnotationContext#\n *\n * @param {object} [opts] - Options for request\n * @param {annotation.answered_by} [opts.answeredBy] -\n *          Indicates the answering entity as determined by Answering Machine Detection.\n * @param {annotation.connectivity_issue} [opts.connectivityIssue] -\n *          Indicates if the call had any connectivity issue\n * @param {string} [opts.qualityIssues] -\n *          Indicates if the call had audio quality issues.\n * @param {boolean} [opts.spam] - Call spam indicator\n * @param {number} [opts.callScore] - Call Score\n * @param {string} [opts.comment] - User comments\n * @param {string} [opts.incident] - Call tag for incidents or support ticket\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AnnotationInstance\n */\n/* jshint ignore:end */\nAnnotationContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'AnsweredBy': _.get(opts, 'answeredBy'),\n    'ConnectivityIssue': _.get(opts, 'connectivityIssue'),\n    'QualityIssues': _.get(opts, 'qualityIssues'),\n    'Spam': serialize.bool(_.get(opts, 'spam')),\n    'CallScore': _.get(opts, 'callScore'),\n    'Comment': _.get(opts, 'comment'),\n    'Incident': _.get(opts, 'incident')\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new AnnotationInstance(this._version, payload, this._solution.callSid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a AnnotationInstance\n *\n * @function fetch\n * @memberof Twilio.Insights.V1.CallContext.AnnotationContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed AnnotationInstance\n */\n/* jshint ignore:end */\nAnnotationContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new AnnotationInstance(this._version, payload, this._solution.callSid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Insights.V1.CallContext.AnnotationContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nAnnotationContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nAnnotationContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  AnnotationList: AnnotationList,\n  AnnotationPage: AnnotationPage,\n  AnnotationInstance: AnnotationInstance,\n  AnnotationContext: AnnotationContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}