{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../../base/values');\n/* jshint ignore:line */\n\n\nvar WorkerStatisticsList;\nvar WorkerStatisticsPage;\nvar WorkerStatisticsInstance;\nvar WorkerStatisticsContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the WorkerStatisticsList\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsList\n *\n * @param {Twilio.Taskrouter.V1} version - Version of the resource\n * @param {string} workspaceSid -\n *          The SID of the Workspace that contains the WorkerChannel\n * @param {string} workerSid -\n *          The SID of the Worker that contains the WorkerChannel\n */\n\n/* jshint ignore:end */\n\nWorkerStatisticsList = function WorkerStatisticsList(version, workspaceSid, workerSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function statistics\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsContext}\n   */\n\n  /* jshint ignore:end */\n  function WorkerStatisticsListInstance(sid) {\n    return WorkerStatisticsListInstance.get(sid);\n  }\n\n  WorkerStatisticsListInstance._version = version; // Path Solution\n\n  WorkerStatisticsListInstance._solution = {\n    workspaceSid: workspaceSid,\n    workerSid: workerSid\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a worker_statistics\n   *\n   * @function get\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsList#\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsContext}\n   */\n\n  /* jshint ignore:end */\n\n  WorkerStatisticsListInstance.get = function get() {\n    return new WorkerStatisticsContext(this._version, this._solution.workspaceSid, this._solution.workerSid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  WorkerStatisticsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  WorkerStatisticsListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return WorkerStatisticsListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the WorkerStatisticsPage\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {WorkerStatisticsSolution} solution - Path solution\n *\n * @returns WorkerStatisticsPage\n */\n\n/* jshint ignore:end */\n\n\nWorkerStatisticsPage = function WorkerStatisticsPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(WorkerStatisticsPage.prototype, Page.prototype);\n\nWorkerStatisticsPage.prototype.constructor = WorkerStatisticsPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of WorkerStatisticsInstance\n *\n * @function getInstance\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsPage#\n *\n * @param {WorkerStatisticsPayload} payload - Payload response from the API\n *\n * @returns WorkerStatisticsInstance\n */\n\n/* jshint ignore:end */\n\nWorkerStatisticsPage.prototype.getInstance = function getInstance(payload) {\n  return new WorkerStatisticsInstance(this._version, payload, this._solution.workspaceSid, this._solution.workerSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nWorkerStatisticsPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nWorkerStatisticsPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the WorkerStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {object} cumulative -\n *          An object that contains the cumulative statistics for the Worker\n * @property {string} workerSid -\n *          The SID of the Worker that contains the WorkerChannel\n * @property {string} workspaceSid -\n *          The SID of the Workspace that contains the WorkerChannel\n * @property {string} url -\n *          The absolute URL of the WorkerChannel statistics resource\n *\n * @param {V1} version - Version of the resource\n * @param {WorkerStatisticsPayload} payload - The instance payload\n * @param {sid} workspaceSid -\n *          The SID of the Workspace that contains the WorkerChannel\n * @param {sid} workerSid - The SID of the Worker that contains the WorkerChannel\n */\n\n/* jshint ignore:end */\n\n\nWorkerStatisticsInstance = function WorkerStatisticsInstance(version, payload, workspaceSid, workerSid) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.cumulative = payload.cumulative; // jshint ignore:line\n\n  this.workerSid = payload.worker_sid; // jshint ignore:line\n\n  this.workspaceSid = payload.workspace_sid; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    workspaceSid: workspaceSid,\n    workerSid: workerSid\n  };\n};\n\nObject.defineProperty(WorkerStatisticsInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new WorkerStatisticsContext(this._version, this._solution.workspaceSid, this._solution.workerSid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a WorkerStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.minutes] -\n *          Only calculate statistics since this many minutes in the past\n * @param {Date} [opts.startDate] -\n *          Only calculate statistics from on or after this date\n * @param {Date} [opts.endDate] -\n *          Only include usage that occurred on or before this date\n * @param {string} [opts.taskChannel] -\n *          Only calculate statistics on this TaskChannel\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkerStatisticsInstance\n */\n\n/* jshint ignore:end */\n\nWorkerStatisticsInstance.prototype.fetch = function fetch(opts, callback) {\n  return this._proxy.fetch(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nWorkerStatisticsInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nWorkerStatisticsInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the WorkerStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} workspaceSid -\n *          The SID of the Workspace with the WorkerChannel to fetch\n * @param {sid} workerSid - The SID of the Worker with the WorkerChannel to fetch\n */\n\n/* jshint ignore:end */\n\n\nWorkerStatisticsContext = function WorkerStatisticsContext(version, workspaceSid, workerSid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    workspaceSid: workspaceSid,\n    workerSid: workerSid\n  };\n  this._uri = `/Workspaces/${workspaceSid}/Workers/${workerSid}/Statistics`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a WorkerStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsContext#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.minutes] -\n *          Only calculate statistics since this many minutes in the past\n * @param {Date} [opts.startDate] -\n *          Only calculate statistics from on or after this date\n * @param {Date} [opts.endDate] -\n *          Only include usage that occurred on or before this date\n * @param {string} [opts.taskChannel] -\n *          Only calculate statistics on this TaskChannel\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkerStatisticsInstance\n */\n\n/* jshint ignore:end */\n\n\nWorkerStatisticsContext.prototype.fetch = function fetch(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'Minutes': _.get(opts, 'minutes'),\n    'StartDate': serialize.iso8601DateTime(_.get(opts, 'startDate')),\n    'EndDate': serialize.iso8601DateTime(_.get(opts, 'endDate')),\n    'TaskChannel': _.get(opts, 'taskChannel')\n  });\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET',\n    params: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new WorkerStatisticsInstance(this._version, payload, this._solution.workspaceSid, this._solution.workerSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nWorkerStatisticsContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nWorkerStatisticsContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  WorkerStatisticsList: WorkerStatisticsList,\n  WorkerStatisticsPage: WorkerStatisticsPage,\n  WorkerStatisticsInstance: WorkerStatisticsInstance,\n  WorkerStatisticsContext: WorkerStatisticsContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","serialize","values","WorkerStatisticsList","WorkerStatisticsPage","WorkerStatisticsInstance","WorkerStatisticsContext","version","workspaceSid","workerSid","WorkerStatisticsListInstance","sid","get","_version","_solution","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","accountSid","account_sid","cumulative","worker_sid","workspace_sid","url","_context","undefined","Object","defineProperty","fetch","opts","callback","_proxy","_uri","deferred","defer","data","of","iso8601DateTime","promise","uri","method","params","then","resolve","bind","catch","error","reject","nodeify","module","exports"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/twilio/lib/rest/taskrouter/v1/workspace/worker/workerStatistics.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar serialize = require(\n    '../../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar WorkerStatisticsList;\nvar WorkerStatisticsPage;\nvar WorkerStatisticsInstance;\nvar WorkerStatisticsContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkerStatisticsList\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsList\n *\n * @param {Twilio.Taskrouter.V1} version - Version of the resource\n * @param {string} workspaceSid -\n *          The SID of the Workspace that contains the WorkerChannel\n * @param {string} workerSid -\n *          The SID of the Worker that contains the WorkerChannel\n */\n/* jshint ignore:end */\nWorkerStatisticsList = function WorkerStatisticsList(version, workspaceSid,\n                                                      workerSid) {\n  /* jshint ignore:start */\n  /**\n   * @function statistics\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsContext}\n   */\n  /* jshint ignore:end */\n  function WorkerStatisticsListInstance(sid) {\n    return WorkerStatisticsListInstance.get(sid);\n  }\n\n  WorkerStatisticsListInstance._version = version;\n  // Path Solution\n  WorkerStatisticsListInstance._solution = {workspaceSid: workspaceSid, workerSid: workerSid};\n  /* jshint ignore:start */\n  /**\n   * Constructs a worker_statistics\n   *\n   * @function get\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsList#\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsContext}\n   */\n  /* jshint ignore:end */\n  WorkerStatisticsListInstance.get = function get() {\n    return new WorkerStatisticsContext(\n      this._version,\n      this._solution.workspaceSid,\n      this._solution.workerSid\n    );\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  WorkerStatisticsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  WorkerStatisticsListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return WorkerStatisticsListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkerStatisticsPage\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {WorkerStatisticsSolution} solution - Path solution\n *\n * @returns WorkerStatisticsPage\n */\n/* jshint ignore:end */\nWorkerStatisticsPage = function WorkerStatisticsPage(version, response,\n                                                      solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(WorkerStatisticsPage.prototype, Page.prototype);\nWorkerStatisticsPage.prototype.constructor = WorkerStatisticsPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of WorkerStatisticsInstance\n *\n * @function getInstance\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsPage#\n *\n * @param {WorkerStatisticsPayload} payload - Payload response from the API\n *\n * @returns WorkerStatisticsInstance\n */\n/* jshint ignore:end */\nWorkerStatisticsPage.prototype.getInstance = function getInstance(payload) {\n  return new WorkerStatisticsInstance(\n    this._version,\n    payload,\n    this._solution.workspaceSid,\n    this._solution.workerSid\n  );\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkerStatisticsPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nWorkerStatisticsPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkerStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {object} cumulative -\n *          An object that contains the cumulative statistics for the Worker\n * @property {string} workerSid -\n *          The SID of the Worker that contains the WorkerChannel\n * @property {string} workspaceSid -\n *          The SID of the Workspace that contains the WorkerChannel\n * @property {string} url -\n *          The absolute URL of the WorkerChannel statistics resource\n *\n * @param {V1} version - Version of the resource\n * @param {WorkerStatisticsPayload} payload - The instance payload\n * @param {sid} workspaceSid -\n *          The SID of the Workspace that contains the WorkerChannel\n * @param {sid} workerSid - The SID of the Worker that contains the WorkerChannel\n */\n/* jshint ignore:end */\nWorkerStatisticsInstance = function WorkerStatisticsInstance(version, payload,\n    workspaceSid, workerSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.cumulative = payload.cumulative; // jshint ignore:line\n  this.workerSid = payload.worker_sid; // jshint ignore:line\n  this.workspaceSid = payload.workspace_sid; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {workspaceSid: workspaceSid, workerSid: workerSid, };\n};\n\nObject.defineProperty(WorkerStatisticsInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new WorkerStatisticsContext(\n          this._version,\n          this._solution.workspaceSid,\n          this._solution.workerSid\n        );\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a WorkerStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.minutes] -\n *          Only calculate statistics since this many minutes in the past\n * @param {Date} [opts.startDate] -\n *          Only calculate statistics from on or after this date\n * @param {Date} [opts.endDate] -\n *          Only include usage that occurred on or before this date\n * @param {string} [opts.taskChannel] -\n *          Only calculate statistics on this TaskChannel\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkerStatisticsInstance\n */\n/* jshint ignore:end */\nWorkerStatisticsInstance.prototype.fetch = function fetch(opts, callback) {\n  return this._proxy.fetch(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkerStatisticsInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nWorkerStatisticsInstance.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the WorkerStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} workspaceSid -\n *          The SID of the Workspace with the WorkerChannel to fetch\n * @param {sid} workerSid - The SID of the Worker with the WorkerChannel to fetch\n */\n/* jshint ignore:end */\nWorkerStatisticsContext = function WorkerStatisticsContext(version,\n                                                            workspaceSid,\n                                                            workerSid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {workspaceSid: workspaceSid, workerSid: workerSid, };\n  this._uri = `/Workspaces/${workspaceSid}/Workers/${workerSid}/Statistics`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a WorkerStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsContext#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.minutes] -\n *          Only calculate statistics since this many minutes in the past\n * @param {Date} [opts.startDate] -\n *          Only calculate statistics from on or after this date\n * @param {Date} [opts.endDate] -\n *          Only include usage that occurred on or before this date\n * @param {string} [opts.taskChannel] -\n *          Only calculate statistics on this TaskChannel\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed WorkerStatisticsInstance\n */\n/* jshint ignore:end */\nWorkerStatisticsContext.prototype.fetch = function fetch(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'Minutes': _.get(opts, 'minutes'),\n    'StartDate': serialize.iso8601DateTime(_.get(opts, 'startDate')),\n    'EndDate': serialize.iso8601DateTime(_.get(opts, 'endDate')),\n    'TaskChannel': _.get(opts, 'taskChannel')\n  });\n\n  var promise = this._version.fetch({uri: this._uri, method: 'GET', params: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new WorkerStatisticsInstance(\n      this._version,\n      payload,\n      this._solution.workspaceSid,\n      this._solution.workerSid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.WorkerContext.WorkerStatisticsContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nWorkerStatisticsContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nWorkerStatisticsContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  WorkerStatisticsList: WorkerStatisticsList,\n  WorkerStatisticsPage: WorkerStatisticsPage,\n  WorkerStatisticsInstance: WorkerStatisticsInstance,\n  WorkerStatisticsContext: WorkerStatisticsContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}