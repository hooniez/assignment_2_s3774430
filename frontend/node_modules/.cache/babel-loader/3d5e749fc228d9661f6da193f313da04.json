{"ast":null,"code":"var _jsxFileName = \"/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/MFA.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Form, Button, Modal, Spinner } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { QrCode } from \"react-bootstrap-icons\";\nimport Loading from \"./Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MFA(_ref) {\n  _s();\n\n  let {\n    show,\n    setShow,\n    onSuccess,\n    hideQRcode,\n    user\n  } = _ref;\n  // When the prop hideQRcode is true, MFA is used in SignInForm\n  const [qrcodeSrc, setQrcodeSrc] = useState(\"\");\n  const [secret, setSecret] = useState(user.secret);\n  const [isOTPcorrect, setIsOTPcorrect] = useState(true);\n  const [isLoadingVisible, setIsLoadingVisible] = useState(false);\n  const url = \"https://google-authenticator.p.rapidapi.com\";\n  const apiKey = \"414bc5d180msh86e5db53aea8bbcp1bcd81jsn6915fb5401f0\";\n\n  async function getQrCode() {\n    // options for the initial request to get a secret key\n    let res;\n    let options = {\n      method: \"GET\",\n      url: url + \"/new_v2/\",\n      headers: {\n        \"X-RapidAPI-Key\": apiKey,\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\"\n      }\n    };\n    res = await axios.request(options);\n    let secretKey = res.data;\n    setSecret(secretKey); // Re-define options again to make a request to get a QR code.\n\n    options = {\n      method: \"GET\",\n      url: url + \"/enroll/\",\n      params: {\n        secret: secretKey,\n        issuer: \"lan\",\n        account: `${user.firstName} ${user.lastName}`\n      },\n      headers: {\n        \"X-RapidAPI-Key\": apiKey,\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\"\n      }\n    };\n    res = await axios.request(options);\n    setQrcodeSrc(res.data);\n  }\n\n  useEffect(() => {\n    if (show) {\n      // If sign-in\n      if (hideQRcode) {\n        setSecret(user.secret);\n      } else {\n        getQrCode();\n      }\n    }\n  }, [show]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    setIsLoadingVisible(true);\n    const code = e.target[0].value;\n    const options = {\n      method: \"GET\",\n      url: url + \"/validate/\",\n      params: {\n        code: code,\n        secret: secret\n      },\n      headers: {\n        \"X-RapidAPI-Key\": apiKey,\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\"\n      }\n    };\n    axios.request(options).then(response => {\n      console.log(response.data);\n\n      if (response.data === \"True\") {\n        if (hideQRcode) {\n          onSuccess();\n        } else {\n          onSuccess(secret);\n        }\n\n        setIsOTPcorrect(true);\n        setShow(false);\n        setIsLoadingVisible(false);\n      } else {\n        setIsOTPcorrect(false);\n        setIsLoadingVisible(false);\n      }\n    });\n  };\n\n  const handleClose = () => {\n    setShow(false);\n    setIsOTPcorrect(true);\n  };\n\n  const modalJSX = () => /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        className: \"text-center\",\n        hidden: hideQRcode,\n        children: \"Scan the QR code in Google Authenticator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      className: \"d-flex-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center\",\n        hidden: hideQRcode,\n        children: qrcodeSrc === \"\" ? /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\",\n          role: \"status\",\n          className: \"my-3\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: \"Spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"my-3\",\n          src: qrcodeSrc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3 text-center\",\n            controlId: \"authCode\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              required: true,\n              isInvalid: !isOTPcorrect,\n              placeholder: \"One Time PIN\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"The OTP is incorrect\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: \"Authenticate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoadingVisible ? /*#__PURE__*/_jsxDEV(Loading, {\n      show: isLoadingVisible,\n      children: \"Logging in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this) : modalJSX()\n  }, void 0, false);\n}\n\n_s(MFA, \"lF1szkjNqm3T+CE+YWjSgDOxkz8=\");\n\n_c = MFA;\n\nvar _c;\n\n$RefreshReg$(_c, \"MFA\");","map":{"version":3,"names":["useState","useEffect","Form","Button","Modal","Spinner","axios","QrCode","Loading","MFA","show","setShow","onSuccess","hideQRcode","user","qrcodeSrc","setQrcodeSrc","secret","setSecret","isOTPcorrect","setIsOTPcorrect","isLoadingVisible","setIsLoadingVisible","url","apiKey","getQrCode","res","options","method","headers","request","secretKey","data","params","issuer","account","firstName","lastName","submitHandler","e","preventDefault","code","target","value","then","response","console","log","handleClose","modalJSX"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/MFA.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Form, Button, Modal, Spinner } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { QrCode } from \"react-bootstrap-icons\";\nimport Loading from \"./Loading\";\n\nexport default function MFA({ show, setShow, onSuccess, hideQRcode, user }) { // When the prop hideQRcode is true, MFA is used in SignInForm\n  const [qrcodeSrc, setQrcodeSrc] = useState(\"\");\n  const [secret, setSecret] = useState(user.secret);\n  const [isOTPcorrect, setIsOTPcorrect] = useState(true);\n  const [isLoadingVisible, setIsLoadingVisible] = useState(false);\n  const url = \"https://google-authenticator.p.rapidapi.com\";\n  const apiKey = \"414bc5d180msh86e5db53aea8bbcp1bcd81jsn6915fb5401f0\";\n\n  async function getQrCode() {\n    // options for the initial request to get a secret key\n    let res;\n    let options = {\n      method: \"GET\",\n      url: url + \"/new_v2/\",\n      headers: {\n        \"X-RapidAPI-Key\": apiKey,\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\",\n      },\n    };\n    res = await axios.request(options);\n    let secretKey = res.data;\n    setSecret(secretKey);\n\n    // Re-define options again to make a request to get a QR code.\n    options = {\n      method: \"GET\",\n      url: url + \"/enroll/\",\n      params: {\n        secret: secretKey,\n        issuer: \"lan\",\n        account: `${user.firstName} ${user.lastName}`,\n      },\n      headers: {\n        \"X-RapidAPI-Key\": apiKey,\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\",\n      },\n    };\n    res = await axios.request(options);\n    setQrcodeSrc(res.data);\n  }\n\n  useEffect(() => {\n    if (show) {\n      // If sign-in\n      if (hideQRcode) {\n        setSecret(user.secret);\n      } else {\n        getQrCode();\n      }\n    }\n  }, [show]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    setIsLoadingVisible(true);\n    const code = e.target[0].value;\n\n    const options = {\n      method: \"GET\",\n      url: url + \"/validate/\",\n      params: { code: code, secret: secret },\n      headers: {\n        \"X-RapidAPI-Key\": apiKey,\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\",\n      },\n    };\n\n    axios.request(options).then((response) => {\n      console.log(response.data);\n      if (response.data === \"True\") {\n        if (hideQRcode) {\n          onSuccess();\n        } else {\n          onSuccess(secret);\n        }\n        setIsOTPcorrect(true);\n        setShow(false);\n        setIsLoadingVisible(false);\n      } else {\n        setIsOTPcorrect(false);\n        setIsLoadingVisible(false);\n      }\n    });\n  };\n\n  const handleClose = () => {\n    setShow(false);\n    setIsOTPcorrect(true);\n  };\n\n  const modalJSX = () => (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title className=\"text-center\" hidden={hideQRcode}>\n          Scan the QR code in Google Authenticator\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body className=\"d-flex-column\">\n        <div className=\"d-flex justify-content-center\" hidden={hideQRcode}>\n          {qrcodeSrc === \"\" ? (\n            <Spinner animation=\"border\" role=\"status\" className=\"my-3\">\n              <span className=\"visually-hidden\">Spinner</span>\n            </Spinner>\n          ) : (\n            <img className=\"my-3\" src={qrcodeSrc} />\n          )}\n        </div>\n        <div className=\"d-flex justify-content-center\">\n          <Form onSubmit={submitHandler}>\n            <Form.Group className=\"mb-3 text-center\" controlId=\"authCode\">\n              <Form.Control\n                type=\"text\"\n                required\n                isInvalid={!isOTPcorrect}\n                placeholder=\"One Time PIN\"\n              ></Form.Control>\n              <Form.Control.Feedback type=\"invalid\">\n                The OTP is incorrect\n              </Form.Control.Feedback>\n            </Form.Group>\n            <div className=\"text-center\">\n              <Button type=\"submit\">Authenticate</Button>\n            </div>\n          </Form>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n\n  return (\n    <>\n      {isLoadingVisible ? (\n        <Loading show={isLoadingVisible}>Logging in</Loading>\n      ) : (\n        modalJSX()\n      )}\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}