{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar NotificationList;\nvar NotificationPage;\nvar NotificationInstance;\n/* jshint ignore:start */\n\n/**\n * Initialize the NotificationList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Notify.V1.ServiceContext.NotificationList\n *\n * @param {Twilio.Notify.V1} version - Version of the resource\n * @param {string} serviceSid -\n *          The SID of the Service that the resource is associated with\n */\n\n/* jshint ignore:end */\n\nNotificationList = function NotificationList(version, serviceSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function notifications\n   * @memberof Twilio.Notify.V1.ServiceContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Notify.V1.ServiceContext.NotificationContext}\n   */\n\n  /* jshint ignore:end */\n  function NotificationListInstance(sid) {\n    return NotificationListInstance.get(sid);\n  }\n\n  NotificationListInstance._version = version; // Path Solution\n\n  NotificationListInstance._solution = {\n    serviceSid: serviceSid\n  };\n  NotificationListInstance._uri = `/Services/${serviceSid}/Notifications`;\n  /* jshint ignore:start */\n\n  /**\n   * create a NotificationInstance\n   *\n   * @function create\n   * @memberof Twilio.Notify.V1.ServiceContext.NotificationList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.body] - The notification body text\n   * @param {notification.priority} [opts.priority] -\n   *          The priority of the notification\n   * @param {number} [opts.ttl] - How long, in seconds, the notification is valid\n   * @param {string} [opts.title] - The notification title\n   * @param {string} [opts.sound] -\n   *          The name of the sound to be played for the notification\n   * @param {string} [opts.action] - The actions to display for the notification\n   * @param {object} [opts.data] -\n   *          The custom key-value pairs of the notification's payload\n   * @param {object} [opts.apn] -\n   *          The APNS-specific payload that overrides corresponding attributes in a generic payload for APNS Bindings\n   * @param {object} [opts.gcm] -\n   *          The GCM-specific payload that overrides corresponding attributes in generic payload for GCM Bindings\n   * @param {object} [opts.sms] -\n   *          The SMS-specific payload that overrides corresponding attributes in generic payload for SMS Bindings\n   * @param {object} [opts.facebookMessenger] - Deprecated\n   * @param {object} [opts.fcm] -\n   *          The FCM-specific payload that overrides corresponding attributes in generic payload for FCM Bindings\n   * @param {string|list} [opts.segment] - A Segment to notify\n   * @param {object} [opts.alexa] - Deprecated\n   * @param {string|list} [opts.toBinding] -\n   *          The destination address specified as a JSON string\n   * @param {string} [opts.deliveryCallbackUrl] - URL to send webhooks\n   * @param {string|list} [opts.identity] -\n   *          The `identity` value that identifies the new resource's User\n   * @param {string|list} [opts.tag] - A tag that selects the Bindings to notify\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed NotificationInstance\n   */\n\n  /* jshint ignore:end */\n\n  NotificationListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'Identity': serialize.map(_.get(opts, 'identity'), function (e) {\n        return e;\n      }),\n      'Tag': serialize.map(_.get(opts, 'tag'), function (e) {\n        return e;\n      }),\n      'Body': _.get(opts, 'body'),\n      'Priority': _.get(opts, 'priority'),\n      'Ttl': _.get(opts, 'ttl'),\n      'Title': _.get(opts, 'title'),\n      'Sound': _.get(opts, 'sound'),\n      'Action': _.get(opts, 'action'),\n      'Data': serialize.object(_.get(opts, 'data')),\n      'Apn': serialize.object(_.get(opts, 'apn')),\n      'Gcm': serialize.object(_.get(opts, 'gcm')),\n      'Sms': serialize.object(_.get(opts, 'sms')),\n      'FacebookMessenger': serialize.object(_.get(opts, 'facebookMessenger')),\n      'Fcm': serialize.object(_.get(opts, 'fcm')),\n      'Segment': serialize.map(_.get(opts, 'segment'), function (e) {\n        return e;\n      }),\n      'Alexa': serialize.object(_.get(opts, 'alexa')),\n      'ToBinding': serialize.map(_.get(opts, 'toBinding'), function (e) {\n        return e;\n      }),\n      'DeliveryCallbackUrl': _.get(opts, 'deliveryCallbackUrl')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new NotificationInstance(this._version, payload));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Notify.V1.ServiceContext.NotificationList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  NotificationListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  NotificationListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return NotificationListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the NotificationPage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Notify.V1.ServiceContext.NotificationPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {NotificationSolution} solution - Path solution\n *\n * @returns NotificationPage\n */\n\n/* jshint ignore:end */\n\n\nNotificationPage = function NotificationPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(NotificationPage.prototype, Page.prototype);\n\nNotificationPage.prototype.constructor = NotificationPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of NotificationInstance\n *\n * @function getInstance\n * @memberof Twilio.Notify.V1.ServiceContext.NotificationPage#\n *\n * @param {NotificationPayload} payload - Payload response from the API\n *\n * @returns NotificationInstance\n */\n\n/* jshint ignore:end */\n\nNotificationPage.prototype.getInstance = function getInstance(payload) {\n  return new NotificationInstance(this._version, payload, this._solution.serviceSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Notify.V1.ServiceContext.NotificationPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nNotificationPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nNotificationPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the NotificationContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Notify.V1.ServiceContext.NotificationInstance\n *\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} serviceSid -\n *          The SID of the Service that the resource is associated with\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT when the resource was created\n * @property {string} identities -\n *          The list of identity values of the Users to notify\n * @property {string} tags - The tags that select the Bindings to notify\n * @property {string} segments - The list of Segments to notify\n * @property {notification.priority} priority - The priority of the notification\n * @property {number} ttl - How long, in seconds, the notification is valid\n * @property {string} title - The notification title\n * @property {string} body - The notification body text\n * @property {string} sound -\n *          The name of the sound to be played for the notification\n * @property {string} action - The actions to display for the notification\n * @property {object} data -\n *          The custom key-value pairs of the notification's payload\n * @property {object} apn -\n *          The APNS-specific payload that overrides corresponding attributes in a generic payload for APNS Bindings\n * @property {object} gcm -\n *          The GCM-specific payload that overrides corresponding attributes in generic payload for GCM Bindings\n * @property {object} fcm -\n *          The FCM-specific payload that overrides corresponding attributes in generic payload for FCM Bindings\n * @property {object} sms -\n *          The SMS-specific payload that overrides corresponding attributes in generic payload for SMS Bindings\n * @property {object} facebookMessenger - Deprecated\n * @property {object} alexa - Deprecated\n *\n * @param {V1} version - Version of the resource\n * @param {NotificationPayload} payload - The instance payload\n * @param {sid} serviceSid -\n *          The SID of the Service that the resource is associated with\n */\n\n/* jshint ignore:end */\n\n\nNotificationInstance = function NotificationInstance(version, payload, serviceSid) {\n  this._version = version; // Marshaled Properties\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.identities = payload.identities; // jshint ignore:line\n\n  this.tags = payload.tags; // jshint ignore:line\n\n  this.segments = payload.segments; // jshint ignore:line\n\n  this.priority = payload.priority; // jshint ignore:line\n\n  this.ttl = deserialize.integer(payload.ttl); // jshint ignore:line\n\n  this.title = payload.title; // jshint ignore:line\n\n  this.body = payload.body; // jshint ignore:line\n\n  this.sound = payload.sound; // jshint ignore:line\n\n  this.action = payload.action; // jshint ignore:line\n\n  this.data = payload.data; // jshint ignore:line\n\n  this.apn = payload.apn; // jshint ignore:line\n\n  this.gcm = payload.gcm; // jshint ignore:line\n\n  this.fcm = payload.fcm; // jshint ignore:line\n\n  this.sms = payload.sms; // jshint ignore:line\n\n  this.facebookMessenger = payload.facebook_messenger; // jshint ignore:line\n\n  this.alexa = payload.alexa; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    serviceSid: serviceSid\n  };\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Notify.V1.ServiceContext.NotificationInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nNotificationInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nNotificationInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  NotificationList: NotificationList,\n  NotificationPage: NotificationPage,\n  NotificationInstance: NotificationInstance\n};","map":{"version":3,"names":["Q","require","_","util","Page","deserialize","serialize","values","NotificationList","NotificationPage","NotificationInstance","version","serviceSid","NotificationListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isFunction","deferred","defer","data","of","map","e","object","promise","uri","method","then","payload","resolve","bind","catch","error","reject","nodeify","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","accountSid","account_sid","service_sid","dateCreated","iso8601DateTime","date_created","identities","tags","segments","priority","ttl","integer","title","body","sound","action","apn","gcm","fcm","sms","facebookMessenger","facebook_messenger","alexa","_context","undefined","module","exports"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/twilio/lib/rest/notify/v1/service/notification.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require('../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar NotificationList;\nvar NotificationPage;\nvar NotificationInstance;\n\n/* jshint ignore:start */\n/**\n * Initialize the NotificationList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Notify.V1.ServiceContext.NotificationList\n *\n * @param {Twilio.Notify.V1} version - Version of the resource\n * @param {string} serviceSid -\n *          The SID of the Service that the resource is associated with\n */\n/* jshint ignore:end */\nNotificationList = function NotificationList(version, serviceSid) {\n  /* jshint ignore:start */\n  /**\n   * @function notifications\n   * @memberof Twilio.Notify.V1.ServiceContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Notify.V1.ServiceContext.NotificationContext}\n   */\n  /* jshint ignore:end */\n  function NotificationListInstance(sid) {\n    return NotificationListInstance.get(sid);\n  }\n\n  NotificationListInstance._version = version;\n  // Path Solution\n  NotificationListInstance._solution = {serviceSid: serviceSid};\n  NotificationListInstance._uri = `/Services/${serviceSid}/Notifications`;\n  /* jshint ignore:start */\n  /**\n   * create a NotificationInstance\n   *\n   * @function create\n   * @memberof Twilio.Notify.V1.ServiceContext.NotificationList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.body] - The notification body text\n   * @param {notification.priority} [opts.priority] -\n   *          The priority of the notification\n   * @param {number} [opts.ttl] - How long, in seconds, the notification is valid\n   * @param {string} [opts.title] - The notification title\n   * @param {string} [opts.sound] -\n   *          The name of the sound to be played for the notification\n   * @param {string} [opts.action] - The actions to display for the notification\n   * @param {object} [opts.data] -\n   *          The custom key-value pairs of the notification's payload\n   * @param {object} [opts.apn] -\n   *          The APNS-specific payload that overrides corresponding attributes in a generic payload for APNS Bindings\n   * @param {object} [opts.gcm] -\n   *          The GCM-specific payload that overrides corresponding attributes in generic payload for GCM Bindings\n   * @param {object} [opts.sms] -\n   *          The SMS-specific payload that overrides corresponding attributes in generic payload for SMS Bindings\n   * @param {object} [opts.facebookMessenger] - Deprecated\n   * @param {object} [opts.fcm] -\n   *          The FCM-specific payload that overrides corresponding attributes in generic payload for FCM Bindings\n   * @param {string|list} [opts.segment] - A Segment to notify\n   * @param {object} [opts.alexa] - Deprecated\n   * @param {string|list} [opts.toBinding] -\n   *          The destination address specified as a JSON string\n   * @param {string} [opts.deliveryCallbackUrl] - URL to send webhooks\n   * @param {string|list} [opts.identity] -\n   *          The `identity` value that identifies the new resource's User\n   * @param {string|list} [opts.tag] - A tag that selects the Bindings to notify\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed NotificationInstance\n   */\n  /* jshint ignore:end */\n  NotificationListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Identity': serialize.map(_.get(opts, 'identity'), function(e) { return e; }),\n      'Tag': serialize.map(_.get(opts, 'tag'), function(e) { return e; }),\n      'Body': _.get(opts, 'body'),\n      'Priority': _.get(opts, 'priority'),\n      'Ttl': _.get(opts, 'ttl'),\n      'Title': _.get(opts, 'title'),\n      'Sound': _.get(opts, 'sound'),\n      'Action': _.get(opts, 'action'),\n      'Data': serialize.object(_.get(opts, 'data')),\n      'Apn': serialize.object(_.get(opts, 'apn')),\n      'Gcm': serialize.object(_.get(opts, 'gcm')),\n      'Sms': serialize.object(_.get(opts, 'sms')),\n      'FacebookMessenger': serialize.object(_.get(opts, 'facebookMessenger')),\n      'Fcm': serialize.object(_.get(opts, 'fcm')),\n      'Segment': serialize.map(_.get(opts, 'segment'), function(e) { return e; }),\n      'Alexa': serialize.object(_.get(opts, 'alexa')),\n      'ToBinding': serialize.map(_.get(opts, 'toBinding'), function(e) { return e; }),\n      'DeliveryCallbackUrl': _.get(opts, 'deliveryCallbackUrl')\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new NotificationInstance(this._version, payload));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Notify.V1.ServiceContext.NotificationList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  NotificationListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  NotificationListInstance[util.inspect.custom] = function inspect(depth, options)\n      {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return NotificationListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the NotificationPage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Notify.V1.ServiceContext.NotificationPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {NotificationSolution} solution - Path solution\n *\n * @returns NotificationPage\n */\n/* jshint ignore:end */\nNotificationPage = function NotificationPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(NotificationPage.prototype, Page.prototype);\nNotificationPage.prototype.constructor = NotificationPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of NotificationInstance\n *\n * @function getInstance\n * @memberof Twilio.Notify.V1.ServiceContext.NotificationPage#\n *\n * @param {NotificationPayload} payload - Payload response from the API\n *\n * @returns NotificationInstance\n */\n/* jshint ignore:end */\nNotificationPage.prototype.getInstance = function getInstance(payload) {\n  return new NotificationInstance(this._version, payload, this._solution.serviceSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Notify.V1.ServiceContext.NotificationPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nNotificationPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nNotificationPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the NotificationContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Notify.V1.ServiceContext.NotificationInstance\n *\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} serviceSid -\n *          The SID of the Service that the resource is associated with\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT when the resource was created\n * @property {string} identities -\n *          The list of identity values of the Users to notify\n * @property {string} tags - The tags that select the Bindings to notify\n * @property {string} segments - The list of Segments to notify\n * @property {notification.priority} priority - The priority of the notification\n * @property {number} ttl - How long, in seconds, the notification is valid\n * @property {string} title - The notification title\n * @property {string} body - The notification body text\n * @property {string} sound -\n *          The name of the sound to be played for the notification\n * @property {string} action - The actions to display for the notification\n * @property {object} data -\n *          The custom key-value pairs of the notification's payload\n * @property {object} apn -\n *          The APNS-specific payload that overrides corresponding attributes in a generic payload for APNS Bindings\n * @property {object} gcm -\n *          The GCM-specific payload that overrides corresponding attributes in generic payload for GCM Bindings\n * @property {object} fcm -\n *          The FCM-specific payload that overrides corresponding attributes in generic payload for FCM Bindings\n * @property {object} sms -\n *          The SMS-specific payload that overrides corresponding attributes in generic payload for SMS Bindings\n * @property {object} facebookMessenger - Deprecated\n * @property {object} alexa - Deprecated\n *\n * @param {V1} version - Version of the resource\n * @param {NotificationPayload} payload - The instance payload\n * @param {sid} serviceSid -\n *          The SID of the Service that the resource is associated with\n */\n/* jshint ignore:end */\nNotificationInstance = function NotificationInstance(version, payload,\n                                                      serviceSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.identities = payload.identities; // jshint ignore:line\n  this.tags = payload.tags; // jshint ignore:line\n  this.segments = payload.segments; // jshint ignore:line\n  this.priority = payload.priority; // jshint ignore:line\n  this.ttl = deserialize.integer(payload.ttl); // jshint ignore:line\n  this.title = payload.title; // jshint ignore:line\n  this.body = payload.body; // jshint ignore:line\n  this.sound = payload.sound; // jshint ignore:line\n  this.action = payload.action; // jshint ignore:line\n  this.data = payload.data; // jshint ignore:line\n  this.apn = payload.apn; // jshint ignore:line\n  this.gcm = payload.gcm; // jshint ignore:line\n  this.fcm = payload.fcm; // jshint ignore:line\n  this.sms = payload.sms; // jshint ignore:line\n  this.facebookMessenger = payload.facebook_messenger; // jshint ignore:line\n  this.alexa = payload.alexa; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {serviceSid: serviceSid, };\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Notify.V1.ServiceContext.NotificationInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nNotificationInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nNotificationInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  NotificationList: NotificationList,\n  NotificationPage: NotificationPage,\n  NotificationInstance: NotificationInstance\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}