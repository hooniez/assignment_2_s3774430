{"ast":null,"code":"export default function convertTime(time) {\n  // Only converts delta in terms of seconds, months, hours, and days\n  let res = \"\";\n  let now = Date.now();\n  let then = new Date(time).getTime();\n  let deltaSeconds = (now - then) / 1000;\n\n  if (deltaSeconds < 60) {\n    res = \"now\";\n  } else if (deltaSeconds >= 60 && deltaSeconds < 3600) {\n    res = Math.floor(deltaSeconds / 60) + \"m\";\n  } else if (deltaSeconds >= 3600 && deltaSeconds < 86400) {\n    res = Math.floor(deltaSeconds / 3600) + \"h\";\n  } else {\n    res = Math.floor(deltaSeconds / 86400) + \"d\";\n  }\n\n  return res;\n}","map":{"version":3,"names":["convertTime","time","res","now","Date","then","getTime","deltaSeconds","Math","floor"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/src/convertTime.js"],"sourcesContent":["export default function convertTime(time) {\n  // Only converts delta in terms of seconds, months, hours, and days\n  let res = \"\";\n  let now = Date.now();\n  let then = new Date(time).getTime();\n  let deltaSeconds = (now - then) / 1000;\n  \n  if (deltaSeconds < 60) {\n    res = \"now\";\n  } else if (deltaSeconds >= 60 && deltaSeconds < 3600) {\n    res = Math.floor(deltaSeconds / 60) + \"m\";\n  } else if (deltaSeconds >= 3600 && deltaSeconds < 86400) {\n    res = Math.floor(deltaSeconds / 3600) + \"h\";\n  } else {\n    res = Math.floor(deltaSeconds / 86400) + \"d\";\n  }\n\n  return res;\n}\n"],"mappings":"AAAA,eAAe,SAASA,WAAT,CAAqBC,IAArB,EAA2B;EACxC;EACA,IAAIC,GAAG,GAAG,EAAV;EACA,IAAIC,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAV;EACA,IAAIE,IAAI,GAAG,IAAID,IAAJ,CAASH,IAAT,EAAeK,OAAf,EAAX;EACA,IAAIC,YAAY,GAAG,CAACJ,GAAG,GAAGE,IAAP,IAAe,IAAlC;;EAEA,IAAIE,YAAY,GAAG,EAAnB,EAAuB;IACrBL,GAAG,GAAG,KAAN;EACD,CAFD,MAEO,IAAIK,YAAY,IAAI,EAAhB,IAAsBA,YAAY,GAAG,IAAzC,EAA+C;IACpDL,GAAG,GAAGM,IAAI,CAACC,KAAL,CAAWF,YAAY,GAAG,EAA1B,IAAgC,GAAtC;EACD,CAFM,MAEA,IAAIA,YAAY,IAAI,IAAhB,IAAwBA,YAAY,GAAG,KAA3C,EAAkD;IACvDL,GAAG,GAAGM,IAAI,CAACC,KAAL,CAAWF,YAAY,GAAG,IAA1B,IAAkC,GAAxC;EACD,CAFM,MAEA;IACLL,GAAG,GAAGM,IAAI,CAACC,KAAL,CAAWF,YAAY,GAAG,KAA1B,IAAmC,GAAzC;EACD;;EAED,OAAOL,GAAP;AACD"},"metadata":{},"sourceType":"module"}