{"ast":null,"code":"var _jsxFileName = \"/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/PostForm.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { Row, Col, Card, Form, Button, Container, ProgressBar, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport { Image } from \"react-bootstrap-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api_key = \"6d207e02198a847aa98d0a2a901485a5\";\nconst cloud_name = \"duc4zmhl7\";\nexport default function PostForm(_ref) {\n  _s();\n\n  let {\n    user,\n    dispatchUser\n  } = _ref;\n  const [isPostable, setIsPostable] = React.useState(false);\n  const [numCharsTyped, setNumCharsTyped] = React.useState(0);\n  const [progressBarVariant, setProgressBarVariant] = React.useState(\"success\");\n  const wordLimit = 250;\n  React.useEffect(() => {\n    // Disable/enable the post button\n    clearTimeout(validateTextareaTimeoutId);\n    validateTextareaTimeoutId = setTimeout(() => {\n      setIsPostable(validateTextarea(numCharsTyped));\n    }, 500);\n\n    if (Math.floor(numCharsTyped / wordLimit * 100) <= 70) {\n      setProgressBarVariant(\"success\");\n    } else if (numCharsTyped <= wordLimit) {\n      setProgressBarVariant(\"warning\");\n    } else {\n      setProgressBarVariant(\"danger\");\n    }\n  }, [numCharsTyped]);\n  let validateTextareaTimeoutId;\n\n  const validateTextarea = num => num > 0 && num <= wordLimit;\n\n  const textareaChangeHandler = event => {\n    setNumCharsTyped(event.target.value.length);\n  };\n\n  const imageUploadHandler = event => {\n    let img = document.querySelector(\"#myImg\");\n    img.src = URL.createObjectURL(event.target.files[0]);\n  };\n\n  const postHandler = async e => {\n    e.preventDefault();\n    const data = new FormData();\n    data.append(\"file\", document.querySelector(\"#imageUpload\").files[0]); // data.append(\"api_key\", api_key);\n\n    data.append(\"upload_preset\", \"zqlcfaas\");\n    fetch(`https://freeimage.host/api/1/upload/?key=${api_key}`, {\n      Method: \"POST\",\n      // Headers: {\n      //   Accept: \"application.json\",\n      //   \"Content-Type\": \"multipart/form-data\",\n      // },\n      Body: data,\n      Cache: \"default\"\n    }).then(response => response.json()).then(data => console.log(data)).catch(error => console.log(error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"gx-0\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 2,\n        children: /*#__PURE__*/_jsxDEV(Card.Img, {\n          src: user.data.avatarsrc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: 3,\n          onChange: textareaChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"myImg\",\n          src: \"#\",\n          className: \"img-fluid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          className: \"my-3\",\n          variant: progressBarVariant,\n          now: Math.floor(numCharsTyped / wordLimit * 100),\n          label: progressBarVariant !== \"success\" && `${wordLimit - numCharsTyped} letters left`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          className: \"d-flex justify-content-between mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: postHandler,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"imageUpload\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: /*#__PURE__*/_jsxDEV(Image, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"file\",\n                className: \"d-none\",\n                onChange: imageUploadHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              disabled: !isPostable,\n              children: \"Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostForm, \"d1h2uLj+C+m6pzlIZmXwdS5W4IE=\");\n\n_c = PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","Row","Col","Card","Form","Button","Container","ProgressBar","OverlayTrigger","Tooltip","Image","api_key","cloud_name","PostForm","user","dispatchUser","isPostable","setIsPostable","useState","numCharsTyped","setNumCharsTyped","progressBarVariant","setProgressBarVariant","wordLimit","useEffect","clearTimeout","validateTextareaTimeoutId","setTimeout","validateTextarea","Math","floor","num","textareaChangeHandler","event","target","value","length","imageUploadHandler","img","document","querySelector","src","URL","createObjectURL","files","postHandler","e","preventDefault","data","FormData","append","fetch","Method","Body","Cache","then","response","json","console","log","catch","error","avatarsrc"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/PostForm.js"],"sourcesContent":["import * as React from \"react\";\nimport {\n  Row,\n  Col,\n  Card,\n  Form,\n  Button,\n  Container,\n  ProgressBar,\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\nimport { Image } from \"react-bootstrap-icons\";\n\nconst api_key = \"6d207e02198a847aa98d0a2a901485a5\";\nconst cloud_name = \"duc4zmhl7\";\n\nexport default function PostForm({ user, dispatchUser }) {\n  const [isPostable, setIsPostable] = React.useState(false);\n  const [numCharsTyped, setNumCharsTyped] = React.useState(0);\n  const [progressBarVariant, setProgressBarVariant] = React.useState(\"success\");\n  const wordLimit = 250;\n\n  React.useEffect(() => {\n    // Disable/enable the post button\n    clearTimeout(validateTextareaTimeoutId);\n    validateTextareaTimeoutId = setTimeout(() => {\n      setIsPostable(validateTextarea(numCharsTyped));\n    }, 500);\n\n    if (Math.floor((numCharsTyped / wordLimit) * 100) <= 70) {\n      setProgressBarVariant(\"success\");\n    } else if (numCharsTyped <= wordLimit) {\n      setProgressBarVariant(\"warning\");\n    } else {\n      setProgressBarVariant(\"danger\");\n    }\n  }, [numCharsTyped]);\n\n  let validateTextareaTimeoutId;\n\n  const validateTextarea = (num) => num > 0 && num <= wordLimit;\n\n  const textareaChangeHandler = (event) => {\n    setNumCharsTyped(event.target.value.length);\n  };\n\n  const imageUploadHandler = (event) => {\n    let img = document.querySelector(\"#myImg\");\n    img.src = URL.createObjectURL(event.target.files[0]);\n  };\n\n  const postHandler = async (e) => {\n    e.preventDefault();\n\n    const data = new FormData();\n    data.append(\"file\", document.querySelector(\"#imageUpload\").files[0]);\n    // data.append(\"api_key\", api_key);\n    data.append(\"upload_preset\", \"zqlcfaas\");\n    \n\n    fetch(`https://freeimage.host/api/1/upload/?key=${api_key}`, {\n      Method: \"POST\",\n      // Headers: {\n      //   Accept: \"application.json\",\n      //   \"Content-Type\": \"multipart/form-data\",\n      // },\n      Body: data,\n      Cache: \"default\",\n    })\n      .then((response) => response.json())\n      .then((data) => console.log(data))\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <Card>\n      <Row className=\"gx-0\">\n        <Col xs={2}>\n          <Card.Img src={user.data.avatarsrc}></Card.Img>\n        </Col>\n        <Col>\n          <Form.Control\n            as=\"textarea\"\n            rows={3}\n            onChange={textareaChangeHandler}\n          ></Form.Control>\n          <img id=\"myImg\" src=\"#\" className=\"img-fluid\"></img>\n\n          <ProgressBar\n            className=\"my-3\"\n            variant={progressBarVariant}\n            now={Math.floor((numCharsTyped / wordLimit) * 100)}\n            label={\n              progressBarVariant !== \"success\" &&\n              `${wordLimit - numCharsTyped} letters left`\n            }\n          ></ProgressBar>\n\n          <Container className=\"d-flex justify-content-between mb-3\">\n            <Form onSubmit={postHandler}>\n              <Form.Group controlId=\"imageUpload\">\n                <Form.Label>\n                  <Image></Image>\n                </Form.Label>\n                <Form.Control\n                  type=\"file\"\n                  className=\"d-none\"\n                  onChange={imageUploadHandler}\n                ></Form.Control>\n              </Form.Group>\n\n              <Button type=\"submit\" disabled={!isPostable}>\n                Post\n              </Button>\n            </Form>\n          </Container>\n        </Col>\n      </Row>\n    </Card>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}