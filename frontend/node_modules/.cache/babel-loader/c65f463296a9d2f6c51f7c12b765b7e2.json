{"ast":null,"code":"var _jsxFileName = \"/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/SignUpMFA.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst axios = require(\"axios\");\n\nexport default function SignUpMFA() {\n  _s();\n\n  const [qrcodeSrc, setQrcodeSrc] = React.useState(\"\");\n  const url = \"https://google-authenticator.p.rapidapi.com\";\n  const apiKey = \"414bc5d180msh86e5db53aea8bbcp1bcd81jsn6915fb5401f0\";\n\n  async function getQrCode() {\n    // options for the initial request to get a secret key\n    let options = {\n      method: \"GET\",\n      url: url + \"/new_v2/\",\n      headers: {\n        \"X-RapidAPI-Key\": apiKey,\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\"\n      }\n    };\n    let res = await axios.request(options); // Re-define options again to make a request to get a QR code.\n\n    options = {\n      method: \"GET\",\n      url: url + \"/enroll/\",\n      params: {\n        secret: res.data,\n        issuer: \"lan\",\n        account: \"JohnDoe\"\n      },\n      headers: {\n        \"X-RapidAPI-Key\": apiKey,\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\"\n      }\n    };\n    res = await axios.request(options);\n    setQrcodeSrc(res.data);\n  }\n\n  React.useEffect(() => {\n    getQrCode();\n  }, []);\n\n  const submitHandler = () => {\n    const options = {\n      method: \"GET\",\n      url: \"https://google-authenticator.p.rapidapi.com/validate/\",\n      params: {\n        code: \"266677\",\n        secret: \"GXPTBCTI4DX4UFJB\"\n      },\n      headers: {\n        \"X-RapidAPI-Key\": \"414bc5d180msh86e5db53aea8bbcp1bcd81jsn6915fb5401f0\",\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\"\n      }\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Scan the barcode from Google Authenticator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), \";\", /*#__PURE__*/_jsxDEV(\"img\", {\n      src: qrcodeSrc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"authCode\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Authentication Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Authenticate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SignUpMFA, \"darL0qigPMzaDBgAfId4WR9AK6M=\");\n\n_c = SignUpMFA;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpMFA\");","map":{"version":3,"names":["React","Form","Button","axios","require","SignUpMFA","qrcodeSrc","setQrcodeSrc","useState","url","apiKey","getQrCode","options","method","headers","res","request","params","secret","data","issuer","account","useEffect","submitHandler","code"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/SignUpMFA.js"],"sourcesContent":["import * as React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nconst axios = require(\"axios\");\n\nexport default function SignUpMFA() {\n  const [qrcodeSrc, setQrcodeSrc] = React.useState(\"\");\n  const url = \"https://google-authenticator.p.rapidapi.com\";\n  const apiKey = \"414bc5d180msh86e5db53aea8bbcp1bcd81jsn6915fb5401f0\";\n\n  async function getQrCode() {\n    // options for the initial request to get a secret key\n    let options = {\n      method: \"GET\",\n      url: url + \"/new_v2/\",\n      headers: {\n        \"X-RapidAPI-Key\": apiKey,\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\",\n      },\n    };\n    let res = await axios.request(options);\n\n    // Re-define options again to make a request to get a QR code.\n    options = {\n      method: \"GET\",\n      url: url + \"/enroll/\",\n      params: {\n        secret: res.data,\n        issuer: \"lan\",\n        account: \"JohnDoe\",\n      },\n      headers: {\n        \"X-RapidAPI-Key\": apiKey,\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\",\n      },\n    };\n    res = await axios.request(options);\n\n    setQrcodeSrc(res.data);\n  }\n\n  React.useEffect(() => {\n    getQrCode();\n  }, []);\n\n  const submitHandler = () => {\n    const options = {\n      method: \"GET\",\n      url: \"https://google-authenticator.p.rapidapi.com/validate/\",\n      params: { code: \"266677\", secret: \"GXPTBCTI4DX4UFJB\" },\n      headers: {\n        \"X-RapidAPI-Key\": \"414bc5d180msh86e5db53aea8bbcp1bcd81jsn6915fb5401f0\",\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\",\n      },\n    };\n  };\n\n  return (\n    <>\n      <h1>Scan the barcode from Google Authenticator</h1>;\n      <img src={qrcodeSrc} />\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"authCode\">\n          <Form.Label>Authentication Code</Form.Label>\n          <Form.Control type=\"text\" required></Form.Control>\n        </Form.Group>\n        <Button type=\"submit\">Authenticate</Button>\n      </Form>\n    </>\n  );\n}\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;;;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,eAAe,SAASC,SAAT,GAAqB;EAAA;;EAClC,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,KAAK,CAACQ,QAAN,CAAe,EAAf,CAAlC;EACA,MAAMC,GAAG,GAAG,6CAAZ;EACA,MAAMC,MAAM,GAAG,oDAAf;;EAEA,eAAeC,SAAf,GAA2B;IACzB;IACA,IAAIC,OAAO,GAAG;MACZC,MAAM,EAAE,KADI;MAEZJ,GAAG,EAAEA,GAAG,GAAG,UAFC;MAGZK,OAAO,EAAE;QACP,kBAAkBJ,MADX;QAEP,mBAAmB;MAFZ;IAHG,CAAd;IAQA,IAAIK,GAAG,GAAG,MAAMZ,KAAK,CAACa,OAAN,CAAcJ,OAAd,CAAhB,CAVyB,CAYzB;;IACAA,OAAO,GAAG;MACRC,MAAM,EAAE,KADA;MAERJ,GAAG,EAAEA,GAAG,GAAG,UAFH;MAGRQ,MAAM,EAAE;QACNC,MAAM,EAAEH,GAAG,CAACI,IADN;QAENC,MAAM,EAAE,KAFF;QAGNC,OAAO,EAAE;MAHH,CAHA;MAQRP,OAAO,EAAE;QACP,kBAAkBJ,MADX;QAEP,mBAAmB;MAFZ;IARD,CAAV;IAaAK,GAAG,GAAG,MAAMZ,KAAK,CAACa,OAAN,CAAcJ,OAAd,CAAZ;IAEAL,YAAY,CAACQ,GAAG,CAACI,IAAL,CAAZ;EACD;;EAEDnB,KAAK,CAACsB,SAAN,CAAgB,MAAM;IACpBX,SAAS;EACV,CAFD,EAEG,EAFH;;EAIA,MAAMY,aAAa,GAAG,MAAM;IAC1B,MAAMX,OAAO,GAAG;MACdC,MAAM,EAAE,KADM;MAEdJ,GAAG,EAAE,uDAFS;MAGdQ,MAAM,EAAE;QAAEO,IAAI,EAAE,QAAR;QAAkBN,MAAM,EAAE;MAA1B,CAHM;MAIdJ,OAAO,EAAE;QACP,kBAAkB,oDADX;QAEP,mBAAmB;MAFZ;IAJK,CAAhB;EASD,CAVD;;EAYA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,oBAEE;MAAK,GAAG,EAAER;IAAV;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,IAAD;MAAM,QAAQ,EAAEiB,aAAhB;MAAA,wBACE,QAAC,IAAD,CAAM,KAAN;QAAY,SAAS,EAAC,UAAtB;QAAA,wBACE,QAAC,IAAD,CAAM,KAAN;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,IAAD,CAAM,OAAN;UAAc,IAAI,EAAC,MAAnB;UAA0B,QAAQ;QAAlC;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAKE,QAAC,MAAD;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA,gBADF;AAaD;;GAjEuBlB,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}