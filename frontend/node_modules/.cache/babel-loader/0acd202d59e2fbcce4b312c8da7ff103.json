{"ast":null,"code":"var _jsxFileName = \"/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/SignUpForm.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { Container, Button, Form } from \"react-bootstrap\";\nimport { useOutletContext, useNavigate } from \"react-router-dom\";\nimport unlock from \"./unlock.svg\";\nimport Loading from \"./Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Time = {\n  Day: 0,\n  Month: 1,\n  Date: 2,\n  Year: 3\n};\n\nfunction formatDate() {\n  let date = new Date().toString().split(\" \");\n  return `${date[Time.Day]} ${date[Time.Date]} ${date[Time.Month]} ${date[Time.Year]}`;\n}\n\nexport default function SignUpForm() {\n  _s();\n\n  const [isPasswordValid, setIsPasswordValid] = React.useState(true);\n  const [isPasswordIdentical, setIsPasswordIdentical] = React.useState(true);\n  const [isPasswordVisible, setIsPasswordVisble] = React.useState(false);\n  const [isEmailValid, setIsEmailValid] = React.useState(true);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [user, dispatchUser] = useOutletContext();\n  const navigate = useNavigate();\n  let validatePasswordTimeoutId;\n  let confirmPasswordTimeoutId;\n  let validateEmailTimeoutId;\n  const timeDelayed = 1000;\n  const avatars = ['male', 'female', 'human', 'identicon', 'initials', 'bottts', 'avataars', 'jdenticon', 'gridy', 'micah'];\n\n  function validateEmail(email) {\n    return !(email in user.users);\n  }\n\n  function validatePassword(password) {\n    /* A regex pattern that matches invalid passwords\n        - Anything with less than eight characters OR\n        - Anything with no numbers OR\n        - Anything with no uppercase letter OR\n        - Anything with no lowercase letter OR\n        - Anything with no special characters\n    */\n    const regex = \"^(.{0,7}|[^0-9]*|[^A-Z]*|[^a-z]*|[a-zA-Z0-9]*)$\"; // If there are any matches, the password is invalid\n\n    return password.match(regex) ? false : true;\n  }\n\n  function confirmPassword(password) {\n    return password === document.querySelector(\"#formSignupPassword\").value;\n  } // The 3 handlers below only validate after timeDelayed microseconds\n\n\n  const validateEmailHandler = event => {\n    clearTimeout(validateEmailTimeoutId);\n    validateEmailTimeoutId = setTimeout(() => {\n      setIsEmailValid(validateEmail(event.target.value));\n    }, timeDelayed);\n  };\n\n  const validatePasswordHandler = event => {\n    clearTimeout(validatePasswordTimeoutId);\n    validatePasswordTimeoutId = setTimeout(() => {\n      setIsPasswordValid(validatePassword(event.target.value));\n    }, timeDelayed);\n  };\n\n  const confirmPasswordHandler = event => {\n    clearTimeout(confirmPasswordTimeoutId);\n    confirmPasswordTimeoutId = setTimeout(() => {\n      setIsPasswordIdentical(confirmPassword(event.target.value));\n    }, timeDelayed);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    let email = event.target[2].value;\n    let password = event.target[3].value;\n    let confirmedPassword = event.target[4].value; // Make sure to check whether all the entries are valid once more\n\n    if (validateEmail(email) && validatePassword(password) && confirmPassword(confirmedPassword)) {\n      let user = {\n        firstName: event.target[0].value,\n        lastName: event.target[1].value,\n        email: email,\n        password: confirmedPassword,\n        joinedDate: formatDate(),\n        avatarsrc: `https://avatars.dicebear.com/api/${avatars[Math.floor(Math.random() * avatars.length)]}/${email}`\n      };\n      dispatchUser({\n        type: \"SIGNUP_USER\",\n        payload: user\n      });\n      setIsLoading(true);\n      clearTimeout(validateEmailTimeoutId);\n      clearTimeout(confirmPasswordTimeoutId);\n      clearTimeout(validatePasswordTimeoutId);\n      setTimeout(() => {\n        setIsLoading(false);\n        navigate(\"/profile\");\n      }, timeDelayed);\n    } else {\n      setIsEmailValid(validateEmail(email));\n      setIsPasswordValid(validatePassword(password));\n      setIsPasswordIdentical(confirmPassword(confirmedPassword));\n    }\n  };\n\n  const togglePasswordVisability = event => {\n    setIsPasswordVisble(!isPasswordVisible);\n  };\n\n  const unlockImage = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-column align-items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"object\", {\n      data: unlock,\n      type: \"image/svg+xml\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Loading, {\n      show: isLoading,\n      children: \"Logging in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      className: \"my-5\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"mb-5\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-4\",\n        controlId: \"formSignupFirstName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          visuallyHidden: \"true\",\n          children: \"First name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          required: true,\n          placeholder: \"First name\",\n          defaultValue: \"Myeonghoon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-4\",\n        controlId: \"formSignupLastName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          visuallyHidden: \"true\",\n          children: \"Last name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          required: true,\n          placeholder: \"Last name\",\n          defaultValue: \"Sun\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-5\",\n        controlId: \"formSignupEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          visuallyHidden: true,\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          required: true,\n          placeholder: \"Email\",\n          defaultValue: \"MyeonghoonSun@lan.com.au\",\n          onChange: validateEmailHandler,\n          isInvalid: !isEmailValid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"The email already exists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-4\",\n        controlId: \"formSignupPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          visuallyHidden: true,\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: isPasswordVisible ? \"text\" : \"password\",\n          required: true,\n          placeholder: \"Password\",\n          onChange: validatePasswordHandler,\n          isInvalid: !isPasswordValid,\n          defaultValue: \"abcDEF1!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Use 8 or more character with a mix of lowercase and uppercase letters, numbers & symbols\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-2\",\n        controlId: \"formSignupPasswordConfirm\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          visuallyHidden: \"true\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: isPasswordVisible ? \"text\" : \"password\",\n          required: true,\n          placeholder: \"Confirm\",\n          isInvalid: !isPasswordIdentical,\n          onChange: confirmPasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Passwords are not identical\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"Use 8 or more character with a mix of lowercase and uppercase letters, numbers & symbols\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formSignupShowPassword\",\n        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          label: \"Show password\",\n          onClick: togglePasswordVisability\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUpForm, \"EhX4IKkH2hndBRMN5psRORK/E3E=\", false, function () {\n  return [useOutletContext, useNavigate];\n});\n\n_c = SignUpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"names":["React","Container","Button","Form","useOutletContext","useNavigate","unlock","Loading","Time","Day","Month","Date","Year","formatDate","date","toString","split","SignUpForm","isPasswordValid","setIsPasswordValid","useState","isPasswordIdentical","setIsPasswordIdentical","isPasswordVisible","setIsPasswordVisble","isEmailValid","setIsEmailValid","isLoading","setIsLoading","user","dispatchUser","navigate","validatePasswordTimeoutId","confirmPasswordTimeoutId","validateEmailTimeoutId","timeDelayed","avatars","validateEmail","email","users","validatePassword","password","regex","match","confirmPassword","document","querySelector","value","validateEmailHandler","event","clearTimeout","setTimeout","target","validatePasswordHandler","confirmPasswordHandler","submitHandler","preventDefault","confirmedPassword","firstName","lastName","joinedDate","avatarsrc","Math","floor","random","length","type","payload","togglePasswordVisability","unlockImage"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/SignUpForm.js"],"sourcesContent":["import * as React from \"react\";\nimport { Container, Button, Form } from \"react-bootstrap\";\nimport { useOutletContext, useNavigate } from \"react-router-dom\";\nimport unlock from \"./unlock.svg\";\nimport Loading from \"./Loading\";\n\nconst Time = {\n  Day: 0,\n  Month: 1,\n  Date: 2,\n  Year: 3,\n};\n\nfunction formatDate() {\n  let date = new Date().toString().split(\" \");\n  return `${date[Time.Day]} ${date[Time.Date]} ${date[Time.Month]} ${\n    date[Time.Year]\n  }`;\n}\n\nexport default function SignUpForm() {\n  const [isPasswordValid, setIsPasswordValid] = React.useState(true);\n  const [isPasswordIdentical, setIsPasswordIdentical] = React.useState(true);\n  const [isPasswordVisible, setIsPasswordVisble] = React.useState(false);\n  const [isEmailValid, setIsEmailValid] = React.useState(true);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const [user, dispatchUser] = useOutletContext();\n  const navigate = useNavigate();\n\n  let validatePasswordTimeoutId;\n  let confirmPasswordTimeoutId;\n  let validateEmailTimeoutId;\n  const timeDelayed = 1000;\n\n  const avatars = ['male', 'female', 'human', 'identicon', 'initials', 'bottts', 'avataars', 'jdenticon', 'gridy', 'micah'];\n\n  function validateEmail(email) {\n    return !(email in user.users);\n  }\n\n  function validatePassword(password) {\n    /* A regex pattern that matches invalid passwords\n        - Anything with less than eight characters OR\n        - Anything with no numbers OR\n        - Anything with no uppercase letter OR\n        - Anything with no lowercase letter OR\n        - Anything with no special characters\n    */\n    const regex = \"^(.{0,7}|[^0-9]*|[^A-Z]*|[^a-z]*|[a-zA-Z0-9]*)$\";\n    // If there are any matches, the password is invalid\n    return password.match(regex) ? false : true;\n  }\n\n  function confirmPassword(password) {\n    return password === document.querySelector(\"#formSignupPassword\").value;\n  }\n\n  // The 3 handlers below only validate after timeDelayed microseconds\n\n  const validateEmailHandler = (event) => {\n    clearTimeout(validateEmailTimeoutId);\n    validateEmailTimeoutId = setTimeout(() => {\n      setIsEmailValid(validateEmail(event.target.value));\n    }, timeDelayed);\n  };\n\n  const validatePasswordHandler = (event) => {\n    clearTimeout(validatePasswordTimeoutId);\n    validatePasswordTimeoutId = setTimeout(() => {\n      setIsPasswordValid(validatePassword(event.target.value));\n    }, timeDelayed);\n  };\n\n  const confirmPasswordHandler = (event) => {\n    clearTimeout(confirmPasswordTimeoutId);\n    confirmPasswordTimeoutId = setTimeout(() => {\n      setIsPasswordIdentical(confirmPassword(event.target.value));\n    }, timeDelayed);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    let email = event.target[2].value;\n    let password = event.target[3].value;\n    let confirmedPassword = event.target[4].value;\n\n    // Make sure to check whether all the entries are valid once more\n    if (\n      validateEmail(email) &&\n      validatePassword(password) &&\n      confirmPassword(confirmedPassword)\n    ) {\n      let user = {\n        firstName: event.target[0].value,\n        lastName: event.target[1].value,\n        email: email,\n        password: confirmedPassword,\n        joinedDate: formatDate(),\n        avatarsrc: `https://avatars.dicebear.com/api/${avatars[Math.floor(Math.random() * avatars.length)]}/${email}`\n      };\n      dispatchUser({\n        type: \"SIGNUP_USER\",\n        payload: user,\n      });\n\n      setIsLoading(true);\n\n      clearTimeout(validateEmailTimeoutId);\n      clearTimeout(confirmPasswordTimeoutId);\n      clearTimeout(validatePasswordTimeoutId);\n\n      setTimeout(() => {\n        setIsLoading(false);\n        navigate(\"/profile\");\n      }, timeDelayed);\n    } else {\n      setIsEmailValid(validateEmail(email));\n      setIsPasswordValid(validatePassword(password));\n      setIsPasswordIdentical(confirmPassword(confirmedPassword));\n    }\n  };\n\n  const togglePasswordVisability = (event) => {\n    setIsPasswordVisble(!isPasswordVisible);\n  };\n\n  const unlockImage = (\n    <div className=\"d-flex flex-column align-items-center\">\n      <object data={unlock} type=\"image/svg+xml\"></object>\n    </div>\n  );\n  return (\n    <Container>\n      <Loading show={isLoading}>Logging in</Loading>\n      <Form className=\"my-5\" onSubmit={submitHandler}>\n        <header className=\"mb-5\">\n          <h1 className=\"text-center\">Sign up</h1>\n        </header>\n        <Form.Group className=\"mb-4\" controlId=\"formSignupFirstName\">\n          <Form.Label visuallyHidden=\"true\">First name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            required\n            placeholder=\"First name\"\n            defaultValue=\"Myeonghoon\"\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group className=\"mb-4\" controlId=\"formSignupLastName\">\n          <Form.Label visuallyHidden=\"true\">Last name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            required\n            placeholder=\"Last name\"\n            defaultValue=\"Sun\"\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group className=\"mb-5\" controlId=\"formSignupEmail\">\n          <Form.Label visuallyHidden>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            required\n            placeholder=\"Email\"\n            defaultValue=\"MyeonghoonSun@lan.com.au\"\n            onChange={validateEmailHandler}\n            isInvalid={!isEmailValid}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            The email already exists\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className=\"mb-4\" controlId=\"formSignupPassword\">\n          <Form.Label visuallyHidden>Password</Form.Label>\n          <Form.Control\n            type={isPasswordVisible ? \"text\" : \"password\"}\n            required\n            placeholder=\"Password\"\n            onChange={validatePasswordHandler}\n            isInvalid={!isPasswordValid}\n            defaultValue=\"abcDEF1!\"\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Use 8 or more character with a mix of lowercase and uppercase\n            letters, numbers & symbols\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className=\"mb-2\" controlId=\"formSignupPasswordConfirm\">\n          <Form.Label visuallyHidden=\"true\">Confirm Password</Form.Label>\n          <Form.Control\n            type={isPasswordVisible ? \"text\" : \"password\"}\n            required\n            placeholder=\"Confirm\"\n            isInvalid={!isPasswordIdentical}\n            onChange={confirmPasswordHandler}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Passwords are not identical\n          </Form.Control.Feedback>\n          <Form.Text className=\"text-muted\">\n            Use 8 or more character with a mix of lowercase and uppercase\n            letters, numbers & symbols\n          </Form.Text>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"formSignupShowPassword\">\n          <Form.Check\n            type=\"checkbox\"\n            label=\"Show password\"\n            onClick={togglePasswordVisability}\n          />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Sign Up\n        </Button>\n      </Form>\n    </Container>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}