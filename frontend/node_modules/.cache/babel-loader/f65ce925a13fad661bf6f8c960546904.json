{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar ConnectAppList;\nvar ConnectAppPage;\nvar ConnectAppInstance;\nvar ConnectAppContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the ConnectAppList\n *\n * @constructor Twilio.Api.V2010.AccountContext.ConnectAppList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid - The SID of the Account that created the resource\n */\n\n/* jshint ignore:end */\n\nConnectAppList = function ConnectAppList(version, accountSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function connectApps\n   * @memberof Twilio.Api.V2010.AccountContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.ConnectAppContext}\n   */\n\n  /* jshint ignore:end */\n  function ConnectAppListInstance(sid) {\n    return ConnectAppListInstance.get(sid);\n  }\n\n  ConnectAppListInstance._version = version; // Path Solution\n\n  ConnectAppListInstance._solution = {\n    accountSid: accountSid\n  };\n  ConnectAppListInstance._uri = `/Accounts/${accountSid}/ConnectApps.json`;\n  /* jshint ignore:start */\n\n  /**\n   * Streams ConnectAppInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Api.V2010.AccountContext.ConnectAppList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n  ConnectAppListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists ConnectAppInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Api.V2010.AccountContext.ConnectAppList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  ConnectAppListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of ConnectAppInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Api.V2010.AccountContext.ConnectAppList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  ConnectAppListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new ConnectAppPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of ConnectAppInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Api.V2010.AccountContext.ConnectAppList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  ConnectAppListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new ConnectAppPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a connect_app\n   *\n   * @function get\n   * @memberof Twilio.Api.V2010.AccountContext.ConnectAppList#\n   *\n   * @param {string} sid - The unique string that identifies the resource\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.ConnectAppContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  ConnectAppListInstance.get = function get(sid) {\n    return new ConnectAppContext(this._version, this._solution.accountSid, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.ConnectAppList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  ConnectAppListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  ConnectAppListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return ConnectAppListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the ConnectAppPage\n *\n * @constructor Twilio.Api.V2010.AccountContext.ConnectAppPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {ConnectAppSolution} solution - Path solution\n *\n * @returns ConnectAppPage\n */\n\n/* jshint ignore:end */\n\n\nConnectAppPage = function ConnectAppPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(ConnectAppPage.prototype, Page.prototype);\n\nConnectAppPage.prototype.constructor = ConnectAppPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of ConnectAppInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountContext.ConnectAppPage#\n *\n * @param {ConnectAppPayload} payload - Payload response from the API\n *\n * @returns ConnectAppInstance\n */\n\n/* jshint ignore:end */\n\nConnectAppPage.prototype.getInstance = function getInstance(payload) {\n  return new ConnectAppInstance(this._version, payload, this._solution.accountSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.ConnectAppPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nConnectAppPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nConnectAppPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the ConnectAppContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.ConnectAppInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} authorizeRedirectUrl -\n *          The URL to redirect the user to after authorization\n * @property {string} companyName - The company name set for the Connect App\n * @property {string} deauthorizeCallbackMethod -\n *          The HTTP method we use to call deauthorize_callback_url\n * @property {string} deauthorizeCallbackUrl -\n *          The URL we call to de-authorize the Connect App\n * @property {string} description - The description of the Connect App\n * @property {string} friendlyName -\n *          The string that you assigned to describe the resource\n * @property {string} homepageUrl - The URL users can obtain more information\n * @property {connect_app.permission} permissions -\n *          The set of permissions that your ConnectApp requests\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} uri -\n *          The URI of the resource, relative to `https://api.twilio.com`\n *\n * @param {V2010} version - Version of the resource\n * @param {ConnectAppPayload} payload - The instance payload\n * @param {sid} accountSid - The SID of the Account that created the resource\n * @param {sid} sid - The unique string that identifies the resource\n */\n\n/* jshint ignore:end */\n\n\nConnectAppInstance = function ConnectAppInstance(version, payload, accountSid, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.authorizeRedirectUrl = payload.authorize_redirect_url; // jshint ignore:line\n\n  this.companyName = payload.company_name; // jshint ignore:line\n\n  this.deauthorizeCallbackMethod = payload.deauthorize_callback_method; // jshint ignore:line\n\n  this.deauthorizeCallbackUrl = payload.deauthorize_callback_url; // jshint ignore:line\n\n  this.description = payload.description; // jshint ignore:line\n\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n\n  this.homepageUrl = payload.homepage_url; // jshint ignore:line\n\n  this.permissions = payload.permissions; // jshint ignore:line\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.uri = payload.uri; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    accountSid: accountSid,\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(ConnectAppInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new ConnectAppContext(this._version, this._solution.accountSid, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a ConnectAppInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.ConnectAppInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConnectAppInstance\n */\n\n/* jshint ignore:end */\n\nConnectAppInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * update a ConnectAppInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.ConnectAppInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.authorizeRedirectUrl] -\n *          The URL to redirect the user to after authorization\n * @param {string} [opts.companyName] - The company name to set for the Connect App\n * @param {string} [opts.deauthorizeCallbackMethod] -\n *          The HTTP method to use when calling deauthorize_callback_url\n * @param {string} [opts.deauthorizeCallbackUrl] -\n *          The URL to call to de-authorize the Connect App\n * @param {string} [opts.description] - A description of the Connect App\n * @param {string} [opts.friendlyName] - A string to describe the resource\n * @param {string} [opts.homepageUrl] -\n *          A public URL where users can obtain more information\n * @param {connect_app.permission|list} [opts.permissions] -\n *          The set of permissions that your ConnectApp will request\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConnectAppInstance\n */\n\n/* jshint ignore:end */\n\n\nConnectAppInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * remove a ConnectAppInstance\n *\n * @function remove\n * @memberof Twilio.Api.V2010.AccountContext.ConnectAppInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConnectAppInstance\n */\n\n/* jshint ignore:end */\n\n\nConnectAppInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.ConnectAppInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nConnectAppInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nConnectAppInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the ConnectAppContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.ConnectAppContext\n *\n * @param {V2010} version - Version of the resource\n * @param {sid} accountSid -\n *          The SID of the Account that created the resource to fetch\n * @param {sid} sid - The unique string that identifies the resource\n */\n\n/* jshint ignore:end */\n\n\nConnectAppContext = function ConnectAppContext(version, accountSid, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    accountSid: accountSid,\n    sid: sid\n  };\n  this._uri = `/Accounts/${accountSid}/ConnectApps/${sid}.json`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a ConnectAppInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.ConnectAppContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConnectAppInstance\n */\n\n/* jshint ignore:end */\n\n\nConnectAppContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new ConnectAppInstance(this._version, payload, this._solution.accountSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * update a ConnectAppInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.ConnectAppContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.authorizeRedirectUrl] -\n *          The URL to redirect the user to after authorization\n * @param {string} [opts.companyName] - The company name to set for the Connect App\n * @param {string} [opts.deauthorizeCallbackMethod] -\n *          The HTTP method to use when calling deauthorize_callback_url\n * @param {string} [opts.deauthorizeCallbackUrl] -\n *          The URL to call to de-authorize the Connect App\n * @param {string} [opts.description] - A description of the Connect App\n * @param {string} [opts.friendlyName] - A string to describe the resource\n * @param {string} [opts.homepageUrl] -\n *          A public URL where users can obtain more information\n * @param {connect_app.permission|list} [opts.permissions] -\n *          The set of permissions that your ConnectApp will request\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConnectAppInstance\n */\n\n/* jshint ignore:end */\n\n\nConnectAppContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'AuthorizeRedirectUrl': _.get(opts, 'authorizeRedirectUrl'),\n    'CompanyName': _.get(opts, 'companyName'),\n    'DeauthorizeCallbackMethod': _.get(opts, 'deauthorizeCallbackMethod'),\n    'DeauthorizeCallbackUrl': _.get(opts, 'deauthorizeCallbackUrl'),\n    'Description': _.get(opts, 'description'),\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'HomepageUrl': _.get(opts, 'homepageUrl'),\n    'Permissions': serialize.map(_.get(opts, 'permissions'), function (e) {\n      return e;\n    })\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new ConnectAppInstance(this._version, payload, this._solution.accountSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * remove a ConnectAppInstance\n *\n * @function remove\n * @memberof Twilio.Api.V2010.AccountContext.ConnectAppContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConnectAppInstance\n */\n\n/* jshint ignore:end */\n\n\nConnectAppContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.ConnectAppContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nConnectAppContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nConnectAppContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  ConnectAppList: ConnectAppList,\n  ConnectAppPage: ConnectAppPage,\n  ConnectAppInstance: ConnectAppInstance,\n  ConnectAppContext: ConnectAppContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","serialize","values","ConnectAppList","ConnectAppPage","ConnectAppInstance","ConnectAppContext","version","accountSid","ConnectAppListInstance","sid","get","_version","_solution","_uri","each","opts","callback","isFunction","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","error","fetchNextPage","fn","promise","then","page","instances","instance","bind","nextPage","catch","merge","list","deferred","defer","allResources","resource","push","length","resolve","reject","nodeify","data","of","pageToken","pageNumber","uri","method","params","payload","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","account_sid","authorizeRedirectUrl","authorize_redirect_url","companyName","company_name","deauthorizeCallbackMethod","deauthorize_callback_method","deauthorizeCallbackUrl","deauthorize_callback_url","description","friendlyName","friendly_name","homepageUrl","homepage_url","permissions","_context","undefined","Object","defineProperty","fetch","_proxy","update","remove","map","e","module","exports"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/twilio/lib/rest/api/v2010/account/connectApp.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar serialize = require('../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar ConnectAppList;\nvar ConnectAppPage;\nvar ConnectAppInstance;\nvar ConnectAppContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the ConnectAppList\n *\n * @constructor Twilio.Api.V2010.AccountContext.ConnectAppList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid - The SID of the Account that created the resource\n */\n/* jshint ignore:end */\nConnectAppList = function ConnectAppList(version, accountSid) {\n  /* jshint ignore:start */\n  /**\n   * @function connectApps\n   * @memberof Twilio.Api.V2010.AccountContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.ConnectAppContext}\n   */\n  /* jshint ignore:end */\n  function ConnectAppListInstance(sid) {\n    return ConnectAppListInstance.get(sid);\n  }\n\n  ConnectAppListInstance._version = version;\n  // Path Solution\n  ConnectAppListInstance._solution = {accountSid: accountSid};\n  ConnectAppListInstance._uri = `/Accounts/${accountSid}/ConnectApps.json`;\n  /* jshint ignore:start */\n  /**\n   * Streams ConnectAppInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Api.V2010.AccountContext.ConnectAppList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  ConnectAppListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists ConnectAppInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Api.V2010.AccountContext.ConnectAppList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ConnectAppListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of ConnectAppInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Api.V2010.AccountContext.ConnectAppList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ConnectAppListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new ConnectAppPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of ConnectAppInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Api.V2010.AccountContext.ConnectAppList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ConnectAppListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new ConnectAppPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a connect_app\n   *\n   * @function get\n   * @memberof Twilio.Api.V2010.AccountContext.ConnectAppList#\n   *\n   * @param {string} sid - The unique string that identifies the resource\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.ConnectAppContext}\n   */\n  /* jshint ignore:end */\n  ConnectAppListInstance.get = function get(sid) {\n    return new ConnectAppContext(this._version, this._solution.accountSid, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.ConnectAppList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  ConnectAppListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  ConnectAppListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return ConnectAppListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ConnectAppPage\n *\n * @constructor Twilio.Api.V2010.AccountContext.ConnectAppPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {ConnectAppSolution} solution - Path solution\n *\n * @returns ConnectAppPage\n */\n/* jshint ignore:end */\nConnectAppPage = function ConnectAppPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(ConnectAppPage.prototype, Page.prototype);\nConnectAppPage.prototype.constructor = ConnectAppPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of ConnectAppInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountContext.ConnectAppPage#\n *\n * @param {ConnectAppPayload} payload - Payload response from the API\n *\n * @returns ConnectAppInstance\n */\n/* jshint ignore:end */\nConnectAppPage.prototype.getInstance = function getInstance(payload) {\n  return new ConnectAppInstance(this._version, payload, this._solution.accountSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.ConnectAppPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nConnectAppPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nConnectAppPage.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ConnectAppContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.ConnectAppInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} authorizeRedirectUrl -\n *          The URL to redirect the user to after authorization\n * @property {string} companyName - The company name set for the Connect App\n * @property {string} deauthorizeCallbackMethod -\n *          The HTTP method we use to call deauthorize_callback_url\n * @property {string} deauthorizeCallbackUrl -\n *          The URL we call to de-authorize the Connect App\n * @property {string} description - The description of the Connect App\n * @property {string} friendlyName -\n *          The string that you assigned to describe the resource\n * @property {string} homepageUrl - The URL users can obtain more information\n * @property {connect_app.permission} permissions -\n *          The set of permissions that your ConnectApp requests\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} uri -\n *          The URI of the resource, relative to `https://api.twilio.com`\n *\n * @param {V2010} version - Version of the resource\n * @param {ConnectAppPayload} payload - The instance payload\n * @param {sid} accountSid - The SID of the Account that created the resource\n * @param {sid} sid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nConnectAppInstance = function ConnectAppInstance(version, payload, accountSid,\n                                                  sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.authorizeRedirectUrl = payload.authorize_redirect_url; // jshint ignore:line\n  this.companyName = payload.company_name; // jshint ignore:line\n  this.deauthorizeCallbackMethod = payload.deauthorize_callback_method; // jshint ignore:line\n  this.deauthorizeCallbackUrl = payload.deauthorize_callback_url; // jshint ignore:line\n  this.description = payload.description; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.homepageUrl = payload.homepage_url; // jshint ignore:line\n  this.permissions = payload.permissions; // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n  this.uri = payload.uri; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {accountSid: accountSid, sid: sid || this.sid, };\n};\n\nObject.defineProperty(ConnectAppInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new ConnectAppContext(this._version, this._solution.accountSid, this._solution.sid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a ConnectAppInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.ConnectAppInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConnectAppInstance\n */\n/* jshint ignore:end */\nConnectAppInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a ConnectAppInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.ConnectAppInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.authorizeRedirectUrl] -\n *          The URL to redirect the user to after authorization\n * @param {string} [opts.companyName] - The company name to set for the Connect App\n * @param {string} [opts.deauthorizeCallbackMethod] -\n *          The HTTP method to use when calling deauthorize_callback_url\n * @param {string} [opts.deauthorizeCallbackUrl] -\n *          The URL to call to de-authorize the Connect App\n * @param {string} [opts.description] - A description of the Connect App\n * @param {string} [opts.friendlyName] - A string to describe the resource\n * @param {string} [opts.homepageUrl] -\n *          A public URL where users can obtain more information\n * @param {connect_app.permission|list} [opts.permissions] -\n *          The set of permissions that your ConnectApp will request\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConnectAppInstance\n */\n/* jshint ignore:end */\nConnectAppInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a ConnectAppInstance\n *\n * @function remove\n * @memberof Twilio.Api.V2010.AccountContext.ConnectAppInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConnectAppInstance\n */\n/* jshint ignore:end */\nConnectAppInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.ConnectAppInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nConnectAppInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nConnectAppInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ConnectAppContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.ConnectAppContext\n *\n * @param {V2010} version - Version of the resource\n * @param {sid} accountSid -\n *          The SID of the Account that created the resource to fetch\n * @param {sid} sid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nConnectAppContext = function ConnectAppContext(version, accountSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {accountSid: accountSid, sid: sid, };\n  this._uri = `/Accounts/${accountSid}/ConnectApps/${sid}.json`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a ConnectAppInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.ConnectAppContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConnectAppInstance\n */\n/* jshint ignore:end */\nConnectAppContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new ConnectAppInstance(\n      this._version,\n      payload,\n      this._solution.accountSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a ConnectAppInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.ConnectAppContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.authorizeRedirectUrl] -\n *          The URL to redirect the user to after authorization\n * @param {string} [opts.companyName] - The company name to set for the Connect App\n * @param {string} [opts.deauthorizeCallbackMethod] -\n *          The HTTP method to use when calling deauthorize_callback_url\n * @param {string} [opts.deauthorizeCallbackUrl] -\n *          The URL to call to de-authorize the Connect App\n * @param {string} [opts.description] - A description of the Connect App\n * @param {string} [opts.friendlyName] - A string to describe the resource\n * @param {string} [opts.homepageUrl] -\n *          A public URL where users can obtain more information\n * @param {connect_app.permission|list} [opts.permissions] -\n *          The set of permissions that your ConnectApp will request\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConnectAppInstance\n */\n/* jshint ignore:end */\nConnectAppContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'AuthorizeRedirectUrl': _.get(opts, 'authorizeRedirectUrl'),\n    'CompanyName': _.get(opts, 'companyName'),\n    'DeauthorizeCallbackMethod': _.get(opts, 'deauthorizeCallbackMethod'),\n    'DeauthorizeCallbackUrl': _.get(opts, 'deauthorizeCallbackUrl'),\n    'Description': _.get(opts, 'description'),\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'HomepageUrl': _.get(opts, 'homepageUrl'),\n    'Permissions': serialize.map(_.get(opts, 'permissions'), function(e) { return e; })\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new ConnectAppInstance(\n      this._version,\n      payload,\n      this._solution.accountSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a ConnectAppInstance\n *\n * @function remove\n * @memberof Twilio.Api.V2010.AccountContext.ConnectAppContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ConnectAppInstance\n */\n/* jshint ignore:end */\nConnectAppContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.ConnectAppContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nConnectAppContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nConnectAppContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  ConnectAppList: ConnectAppList,\n  ConnectAppPage: ConnectAppPage,\n  ConnectAppInstance: ConnectAppInstance,\n  ConnectAppContext: ConnectAppContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}