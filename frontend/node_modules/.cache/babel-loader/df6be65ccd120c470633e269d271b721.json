{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../../base/values');\n/* jshint ignore:line */\n\n\nvar SyncListPermissionList;\nvar SyncListPermissionPage;\nvar SyncListPermissionInstance;\nvar SyncListPermissionContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the SyncListPermissionList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionList\n *\n * @param {Twilio.Preview.Sync} version - Version of the resource\n * @param {string} serviceSid - Sync Service Instance SID.\n * @param {string} listSid - Sync List SID.\n */\n\n/* jshint ignore:end */\n\nSyncListPermissionList = function SyncListPermissionList(version, serviceSid, listSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function syncListPermissions\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionContext}\n   */\n\n  /* jshint ignore:end */\n  function SyncListPermissionListInstance(sid) {\n    return SyncListPermissionListInstance.get(sid);\n  }\n\n  SyncListPermissionListInstance._version = version; // Path Solution\n\n  SyncListPermissionListInstance._solution = {\n    serviceSid: serviceSid,\n    listSid: listSid\n  };\n  SyncListPermissionListInstance._uri = `/Services/${serviceSid}/Lists/${listSid}/Permissions`;\n  /* jshint ignore:start */\n\n  /**\n   * Streams SyncListPermissionInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n  SyncListPermissionListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists SyncListPermissionInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  SyncListPermissionListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of SyncListPermissionInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  SyncListPermissionListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new SyncListPermissionPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of SyncListPermissionInstance records from the\n   * API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  SyncListPermissionListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new SyncListPermissionPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a sync_list_permission\n   *\n   * @function get\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionList#\n   *\n   * @param {string} identity -\n   *          Identity of the user to whom the Sync List Permission applies.\n   *\n   * @returns {Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  SyncListPermissionListInstance.get = function get(identity) {\n    return new SyncListPermissionContext(this._version, this._solution.serviceSid, this._solution.listSid, identity);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  SyncListPermissionListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  SyncListPermissionListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return SyncListPermissionListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the SyncListPermissionPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionPage\n *\n * @param {Sync} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {SyncListPermissionSolution} solution - Path solution\n *\n * @returns SyncListPermissionPage\n */\n\n/* jshint ignore:end */\n\n\nSyncListPermissionPage = function SyncListPermissionPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(SyncListPermissionPage.prototype, Page.prototype);\n\nSyncListPermissionPage.prototype.constructor = SyncListPermissionPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of SyncListPermissionInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionPage#\n *\n * @param {SyncListPermissionPayload} payload - Payload response from the API\n *\n * @returns SyncListPermissionInstance\n */\n\n/* jshint ignore:end */\n\nSyncListPermissionPage.prototype.getInstance = function getInstance(payload) {\n  return new SyncListPermissionInstance(this._version, payload, this._solution.serviceSid, this._solution.listSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nSyncListPermissionPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nSyncListPermissionPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the SyncListPermissionContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionInstance\n *\n * @property {string} accountSid - Twilio Account SID.\n * @property {string} serviceSid - Sync Service Instance SID.\n * @property {string} listSid - Sync List SID.\n * @property {string} identity -\n *          Identity of the user to whom the Sync List Permission applies.\n * @property {boolean} read - Read access.\n * @property {boolean} write - Write access.\n * @property {boolean} manage - Manage access.\n * @property {string} url - URL of this Sync List Permission.\n *\n * @param {Sync} version - Version of the resource\n * @param {SyncListPermissionPayload} payload - The instance payload\n * @param {sid} serviceSid - Sync Service Instance SID.\n * @param {sid} listSid - Sync List SID.\n * @param {string} identity -\n *          Identity of the user to whom the Sync List Permission applies.\n */\n\n/* jshint ignore:end */\n\n\nSyncListPermissionInstance = function SyncListPermissionInstance(version, payload, serviceSid, listSid, identity) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n\n  this.listSid = payload.list_sid; // jshint ignore:line\n\n  this.identity = payload.identity; // jshint ignore:line\n\n  this.read = payload.read; // jshint ignore:line\n\n  this.write = payload.write; // jshint ignore:line\n\n  this.manage = payload.manage; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    serviceSid: serviceSid,\n    listSid: listSid,\n    identity: identity || this.identity\n  };\n};\n\nObject.defineProperty(SyncListPermissionInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new SyncListPermissionContext(this._version, this._solution.serviceSid, this._solution.listSid, this._solution.identity);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a SyncListPermissionInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListPermissionInstance\n */\n\n/* jshint ignore:end */\n\nSyncListPermissionInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * remove a SyncListPermissionInstance\n *\n * @function remove\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListPermissionInstance\n */\n\n/* jshint ignore:end */\n\n\nSyncListPermissionInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n/* jshint ignore:start */\n\n/**\n * update a SyncListPermissionInstance\n *\n * @function update\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionInstance#\n *\n * @param {object} opts - Options for request\n * @param {boolean} opts.read - Read access.\n * @param {boolean} opts.write - Write access.\n * @param {boolean} opts.manage - Manage access.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListPermissionInstance\n */\n\n/* jshint ignore:end */\n\n\nSyncListPermissionInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nSyncListPermissionInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nSyncListPermissionInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the SyncListPermissionContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionContext\n *\n * @param {Sync} version - Version of the resource\n * @param {sid} serviceSid - The service_sid\n * @param {sid_like} listSid - Sync List SID or unique name.\n * @param {string} identity -\n *          Identity of the user to whom the Sync List Permission applies.\n */\n\n/* jshint ignore:end */\n\n\nSyncListPermissionContext = function SyncListPermissionContext(version, serviceSid, listSid, identity) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    serviceSid: serviceSid,\n    listSid: listSid,\n    identity: identity\n  };\n  this._uri = `/Services/${serviceSid}/Lists/${listSid}/Permissions/${identity}`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a SyncListPermissionInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListPermissionInstance\n */\n\n/* jshint ignore:end */\n\n\nSyncListPermissionContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new SyncListPermissionInstance(this._version, payload, this._solution.serviceSid, this._solution.listSid, this._solution.identity));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * remove a SyncListPermissionInstance\n *\n * @function remove\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListPermissionInstance\n */\n\n/* jshint ignore:end */\n\n\nSyncListPermissionContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * update a SyncListPermissionInstance\n *\n * @function update\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionContext#\n *\n * @param {object} opts - Options for request\n * @param {boolean} opts.read - Read access.\n * @param {boolean} opts.write - Write access.\n * @param {boolean} opts.manage - Manage access.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListPermissionInstance\n */\n\n/* jshint ignore:end */\n\n\nSyncListPermissionContext.prototype.update = function update(opts, callback) {\n  if (_.isUndefined(opts)) {\n    throw new Error('Required parameter \"opts\" missing.');\n  }\n\n  if (_.isUndefined(opts['read'])) {\n    throw new Error('Required parameter \"opts[\\'read\\']\" missing.');\n  }\n\n  if (_.isUndefined(opts['write'])) {\n    throw new Error('Required parameter \"opts[\\'write\\']\" missing.');\n  }\n\n  if (_.isUndefined(opts['manage'])) {\n    throw new Error('Required parameter \"opts[\\'manage\\']\" missing.');\n  }\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'Read': serialize.bool(_.get(opts, 'read')),\n    'Write': serialize.bool(_.get(opts, 'write')),\n    'Manage': serialize.bool(_.get(opts, 'manage'))\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new SyncListPermissionInstance(this._version, payload, this._solution.serviceSid, this._solution.listSid, this._solution.identity));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nSyncListPermissionContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nSyncListPermissionContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  SyncListPermissionList: SyncListPermissionList,\n  SyncListPermissionPage: SyncListPermissionPage,\n  SyncListPermissionInstance: SyncListPermissionInstance,\n  SyncListPermissionContext: SyncListPermissionContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","serialize","values","SyncListPermissionList","SyncListPermissionPage","SyncListPermissionInstance","SyncListPermissionContext","version","serviceSid","listSid","SyncListPermissionListInstance","sid","get","_version","_solution","_uri","each","opts","callback","isFunction","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","error","fetchNextPage","fn","promise","then","page","instances","instance","bind","nextPage","catch","merge","list","deferred","defer","allResources","resource","push","length","resolve","reject","nodeify","data","of","pageToken","pageNumber","uri","method","params","payload","getPage","targetUrl","_domain","twilio","request","identity","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","accountSid","account_sid","service_sid","list_sid","read","write","manage","url","_context","undefined","Object","defineProperty","fetch","_proxy","remove","update","bool","module","exports"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/twilio/lib/rest/preview/sync/service/syncList/syncListPermission.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar serialize = require(\n    '../../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar SyncListPermissionList;\nvar SyncListPermissionPage;\nvar SyncListPermissionInstance;\nvar SyncListPermissionContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncListPermissionList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionList\n *\n * @param {Twilio.Preview.Sync} version - Version of the resource\n * @param {string} serviceSid - Sync Service Instance SID.\n * @param {string} listSid - Sync List SID.\n */\n/* jshint ignore:end */\nSyncListPermissionList = function SyncListPermissionList(version, serviceSid,\n                                                          listSid) {\n  /* jshint ignore:start */\n  /**\n   * @function syncListPermissions\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionContext}\n   */\n  /* jshint ignore:end */\n  function SyncListPermissionListInstance(sid) {\n    return SyncListPermissionListInstance.get(sid);\n  }\n\n  SyncListPermissionListInstance._version = version;\n  // Path Solution\n  SyncListPermissionListInstance._solution = {serviceSid: serviceSid, listSid: listSid};\n  SyncListPermissionListInstance._uri = `/Services/${serviceSid}/Lists/${listSid}/Permissions`;\n  /* jshint ignore:start */\n  /**\n   * Streams SyncListPermissionInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  SyncListPermissionListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists SyncListPermissionInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SyncListPermissionListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of SyncListPermissionInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SyncListPermissionListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new SyncListPermissionPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of SyncListPermissionInstance records from the\n   * API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SyncListPermissionListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new SyncListPermissionPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a sync_list_permission\n   *\n   * @function get\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionList#\n   *\n   * @param {string} identity -\n   *          Identity of the user to whom the Sync List Permission applies.\n   *\n   * @returns {Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionContext}\n   */\n  /* jshint ignore:end */\n  SyncListPermissionListInstance.get = function get(identity) {\n    return new SyncListPermissionContext(\n      this._version,\n      this._solution.serviceSid,\n      this._solution.listSid,\n      identity\n    );\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  SyncListPermissionListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  SyncListPermissionListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return SyncListPermissionListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncListPermissionPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionPage\n *\n * @param {Sync} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {SyncListPermissionSolution} solution - Path solution\n *\n * @returns SyncListPermissionPage\n */\n/* jshint ignore:end */\nSyncListPermissionPage = function SyncListPermissionPage(version, response,\n                                                          solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(SyncListPermissionPage.prototype, Page.prototype);\nSyncListPermissionPage.prototype.constructor = SyncListPermissionPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of SyncListPermissionInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionPage#\n *\n * @param {SyncListPermissionPayload} payload - Payload response from the API\n *\n * @returns SyncListPermissionInstance\n */\n/* jshint ignore:end */\nSyncListPermissionPage.prototype.getInstance = function getInstance(payload) {\n  return new SyncListPermissionInstance(\n    this._version,\n    payload,\n    this._solution.serviceSid,\n    this._solution.listSid\n  );\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSyncListPermissionPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nSyncListPermissionPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncListPermissionContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionInstance\n *\n * @property {string} accountSid - Twilio Account SID.\n * @property {string} serviceSid - Sync Service Instance SID.\n * @property {string} listSid - Sync List SID.\n * @property {string} identity -\n *          Identity of the user to whom the Sync List Permission applies.\n * @property {boolean} read - Read access.\n * @property {boolean} write - Write access.\n * @property {boolean} manage - Manage access.\n * @property {string} url - URL of this Sync List Permission.\n *\n * @param {Sync} version - Version of the resource\n * @param {SyncListPermissionPayload} payload - The instance payload\n * @param {sid} serviceSid - Sync Service Instance SID.\n * @param {sid} listSid - Sync List SID.\n * @param {string} identity -\n *          Identity of the user to whom the Sync List Permission applies.\n */\n/* jshint ignore:end */\nSyncListPermissionInstance = function SyncListPermissionInstance(version,\n    payload, serviceSid, listSid, identity) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n  this.listSid = payload.list_sid; // jshint ignore:line\n  this.identity = payload.identity; // jshint ignore:line\n  this.read = payload.read; // jshint ignore:line\n  this.write = payload.write; // jshint ignore:line\n  this.manage = payload.manage; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {serviceSid: serviceSid, listSid: listSid, identity: identity || this.identity, };\n};\n\nObject.defineProperty(SyncListPermissionInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new SyncListPermissionContext(\n          this._version,\n          this._solution.serviceSid,\n          this._solution.listSid,\n          this._solution.identity\n        );\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a SyncListPermissionInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListPermissionInstance\n */\n/* jshint ignore:end */\nSyncListPermissionInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a SyncListPermissionInstance\n *\n * @function remove\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListPermissionInstance\n */\n/* jshint ignore:end */\nSyncListPermissionInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a SyncListPermissionInstance\n *\n * @function update\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionInstance#\n *\n * @param {object} opts - Options for request\n * @param {boolean} opts.read - Read access.\n * @param {boolean} opts.write - Write access.\n * @param {boolean} opts.manage - Manage access.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListPermissionInstance\n */\n/* jshint ignore:end */\nSyncListPermissionInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSyncListPermissionInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nSyncListPermissionInstance.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncListPermissionContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionContext\n *\n * @param {Sync} version - Version of the resource\n * @param {sid} serviceSid - The service_sid\n * @param {sid_like} listSid - Sync List SID or unique name.\n * @param {string} identity -\n *          Identity of the user to whom the Sync List Permission applies.\n */\n/* jshint ignore:end */\nSyncListPermissionContext = function SyncListPermissionContext(version,\n    serviceSid, listSid, identity) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {serviceSid: serviceSid, listSid: listSid, identity: identity, };\n  this._uri = `/Services/${serviceSid}/Lists/${listSid}/Permissions/${identity}`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a SyncListPermissionInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListPermissionInstance\n */\n/* jshint ignore:end */\nSyncListPermissionContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new SyncListPermissionInstance(\n      this._version,\n      payload,\n      this._solution.serviceSid,\n      this._solution.listSid,\n      this._solution.identity\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a SyncListPermissionInstance\n *\n * @function remove\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListPermissionInstance\n */\n/* jshint ignore:end */\nSyncListPermissionContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a SyncListPermissionInstance\n *\n * @function update\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionContext#\n *\n * @param {object} opts - Options for request\n * @param {boolean} opts.read - Read access.\n * @param {boolean} opts.write - Write access.\n * @param {boolean} opts.manage - Manage access.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListPermissionInstance\n */\n/* jshint ignore:end */\nSyncListPermissionContext.prototype.update = function update(opts, callback) {\n  if (_.isUndefined(opts)) {\n    throw new Error('Required parameter \"opts\" missing.');\n  }\n  if (_.isUndefined(opts['read'])) {\n    throw new Error('Required parameter \"opts[\\'read\\']\" missing.');\n  }\n  if (_.isUndefined(opts['write'])) {\n    throw new Error('Required parameter \"opts[\\'write\\']\" missing.');\n  }\n  if (_.isUndefined(opts['manage'])) {\n    throw new Error('Required parameter \"opts[\\'manage\\']\" missing.');\n  }\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'Read': serialize.bool(_.get(opts, 'read')),\n    'Write': serialize.bool(_.get(opts, 'write')),\n    'Manage': serialize.bool(_.get(opts, 'manage'))\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new SyncListPermissionInstance(\n      this._version,\n      payload,\n      this._solution.serviceSid,\n      this._solution.listSid,\n      this._solution.identity\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Sync.ServiceContext.SyncListContext.SyncListPermissionContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSyncListPermissionContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nSyncListPermissionContext.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  SyncListPermissionList: SyncListPermissionList,\n  SyncListPermissionPage: SyncListPermissionPage,\n  SyncListPermissionInstance: SyncListPermissionInstance,\n  SyncListPermissionContext: SyncListPermissionContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}