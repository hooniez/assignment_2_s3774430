{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../../base/values');\n/* jshint ignore:line */\n\n\nvar FeedbackList;\nvar FeedbackPage;\nvar FeedbackInstance;\nvar FeedbackContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the FeedbackList\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.FeedbackList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid - The unique sid that identifies this account\n * @param {string} callSid - The unique string that identifies this resource\n */\n\n/* jshint ignore:end */\n\nFeedbackList = function FeedbackList(version, accountSid, callSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function feedback\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.CallContext.FeedbackContext}\n   */\n\n  /* jshint ignore:end */\n  function FeedbackListInstance(sid) {\n    return FeedbackListInstance.get(sid);\n  }\n\n  FeedbackListInstance._version = version; // Path Solution\n\n  FeedbackListInstance._solution = {\n    accountSid: accountSid,\n    callSid: callSid\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a feedback\n   *\n   * @function get\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackList#\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.CallContext.FeedbackContext}\n   */\n\n  /* jshint ignore:end */\n\n  FeedbackListInstance.get = function get() {\n    return new FeedbackContext(this._version, this._solution.accountSid, this._solution.callSid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  FeedbackListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  FeedbackListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return FeedbackListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the FeedbackPage\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.FeedbackPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {FeedbackSolution} solution - Path solution\n *\n * @returns FeedbackPage\n */\n\n/* jshint ignore:end */\n\n\nFeedbackPage = function FeedbackPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(FeedbackPage.prototype, Page.prototype);\n\nFeedbackPage.prototype.constructor = FeedbackPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of FeedbackInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackPage#\n *\n * @param {FeedbackPayload} payload - Payload response from the API\n *\n * @returns FeedbackInstance\n */\n\n/* jshint ignore:end */\n\nFeedbackPage.prototype.getInstance = function getInstance(payload) {\n  return new FeedbackInstance(this._version, payload, this._solution.accountSid, this._solution.callSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nFeedbackPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nFeedbackPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the FeedbackContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.FeedbackInstance\n *\n * @property {string} accountSid - The unique sid that identifies this account\n * @property {Date} dateCreated - The date this resource was created\n * @property {Date} dateUpdated - The date this resource was last updated\n * @property {feedback.issues} issues - Issues experienced during the call\n * @property {number} qualityScore - 1 to 5 quality score\n * @property {string} sid -\n *          A string that uniquely identifies this feedback resource\n *\n * @param {V2010} version - Version of the resource\n * @param {FeedbackPayload} payload - The instance payload\n * @param {sid} accountSid - The unique sid that identifies this account\n * @param {sid} callSid - The unique string that identifies this resource\n */\n\n/* jshint ignore:end */\n\n\nFeedbackInstance = function FeedbackInstance(version, payload, accountSid, callSid) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.dateCreated = deserialize.rfc2822DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated); // jshint ignore:line\n\n  this.issues = payload.issues; // jshint ignore:line\n\n  this.qualityScore = deserialize.integer(payload.quality_score); // jshint ignore:line\n\n  this.sid = payload.sid; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    accountSid: accountSid,\n    callSid: callSid\n  };\n};\n\nObject.defineProperty(FeedbackInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new FeedbackContext(this._version, this._solution.accountSid, this._solution.callSid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a FeedbackInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackInstance\n */\n\n/* jshint ignore:end */\n\nFeedbackInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * create a FeedbackInstance\n *\n * @function create\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackInstance#\n *\n * @param {object} opts - Options for request\n * @param {number} opts.qualityScore -\n *          The call quality expressed as an integer from 1 to 5\n * @param {feedback.issues|list} [opts.issue] - Issues experienced during the call\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackInstance\n */\n\n/* jshint ignore:end */\n\n\nFeedbackInstance.prototype.create = function create(opts, callback) {\n  return this._proxy.create(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * update a FeedbackInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.qualityScore] -\n *          The call quality expressed as an integer from 1 to 5\n * @param {feedback.issues|list} [opts.issue] - Issues experienced during the call\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackInstance\n */\n\n/* jshint ignore:end */\n\n\nFeedbackInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nFeedbackInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nFeedbackInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the FeedbackContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.FeedbackContext\n *\n * @param {V2010} version - Version of the resource\n * @param {sid} accountSid - The unique sid that identifies this account\n * @param {sid} callSid - The call sid that uniquely identifies the call\n */\n\n/* jshint ignore:end */\n\n\nFeedbackContext = function FeedbackContext(version, accountSid, callSid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    accountSid: accountSid,\n    callSid: callSid\n  };\n  this._uri = `/Accounts/${accountSid}/Calls/${callSid}/Feedback.json`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a FeedbackInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackInstance\n */\n\n/* jshint ignore:end */\n\n\nFeedbackContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new FeedbackInstance(this._version, payload, this._solution.accountSid, this._solution.callSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * create a FeedbackInstance\n *\n * @function create\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackContext#\n *\n * @param {object} opts - Options for request\n * @param {number} opts.qualityScore -\n *          The call quality expressed as an integer from 1 to 5\n * @param {feedback.issues|list} [opts.issue] - Issues experienced during the call\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackInstance\n */\n\n/* jshint ignore:end */\n\n\nFeedbackContext.prototype.create = function create(opts, callback) {\n  if (_.isUndefined(opts)) {\n    throw new Error('Required parameter \"opts\" missing.');\n  }\n\n  if (_.isUndefined(opts['qualityScore'])) {\n    throw new Error('Required parameter \"opts[\\'qualityScore\\']\" missing.');\n  }\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'QualityScore': _.get(opts, 'qualityScore'),\n    'Issue': serialize.map(_.get(opts, 'issue'), function (e) {\n      return e;\n    })\n  });\n\n  var promise = this._version.create({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new FeedbackInstance(this._version, payload, this._solution.accountSid, this._solution.callSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * update a FeedbackInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackContext#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.qualityScore] -\n *          The call quality expressed as an integer from 1 to 5\n * @param {feedback.issues|list} [opts.issue] - Issues experienced during the call\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackInstance\n */\n\n/* jshint ignore:end */\n\n\nFeedbackContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'QualityScore': _.get(opts, 'qualityScore'),\n    'Issue': serialize.map(_.get(opts, 'issue'), function (e) {\n      return e;\n    })\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new FeedbackInstance(this._version, payload, this._solution.accountSid, this._solution.callSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nFeedbackContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nFeedbackContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  FeedbackList: FeedbackList,\n  FeedbackPage: FeedbackPage,\n  FeedbackInstance: FeedbackInstance,\n  FeedbackContext: FeedbackContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","deserialize","serialize","values","FeedbackList","FeedbackPage","FeedbackInstance","FeedbackContext","version","accountSid","callSid","FeedbackListInstance","sid","get","_version","_solution","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","account_sid","dateCreated","rfc2822DateTime","date_created","dateUpdated","date_updated","issues","qualityScore","integer","quality_score","_context","undefined","Object","defineProperty","fetch","callback","_proxy","create","opts","update","_uri","deferred","defer","promise","uri","method","then","resolve","bind","catch","error","reject","nodeify","isUndefined","Error","data","of","map","e","module","exports"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/twilio/lib/rest/api/v2010/account/call/feedback.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require(\n    '../../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar FeedbackList;\nvar FeedbackPage;\nvar FeedbackInstance;\nvar FeedbackContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the FeedbackList\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.FeedbackList\n *\n * @param {Twilio.Api.V2010} version - Version of the resource\n * @param {string} accountSid - The unique sid that identifies this account\n * @param {string} callSid - The unique string that identifies this resource\n */\n/* jshint ignore:end */\nFeedbackList = function FeedbackList(version, accountSid, callSid) {\n  /* jshint ignore:start */\n  /**\n   * @function feedback\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.CallContext.FeedbackContext}\n   */\n  /* jshint ignore:end */\n  function FeedbackListInstance(sid) {\n    return FeedbackListInstance.get(sid);\n  }\n\n  FeedbackListInstance._version = version;\n  // Path Solution\n  FeedbackListInstance._solution = {accountSid: accountSid, callSid: callSid};\n  /* jshint ignore:start */\n  /**\n   * Constructs a feedback\n   *\n   * @function get\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackList#\n   *\n   * @returns {Twilio.Api.V2010.AccountContext.CallContext.FeedbackContext}\n   */\n  /* jshint ignore:end */\n  FeedbackListInstance.get = function get() {\n    return new FeedbackContext(this._version, this._solution.accountSid, this._solution.callSid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  FeedbackListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  FeedbackListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return FeedbackListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the FeedbackPage\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.FeedbackPage\n *\n * @param {V2010} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {FeedbackSolution} solution - Path solution\n *\n * @returns FeedbackPage\n */\n/* jshint ignore:end */\nFeedbackPage = function FeedbackPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(FeedbackPage.prototype, Page.prototype);\nFeedbackPage.prototype.constructor = FeedbackPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of FeedbackInstance\n *\n * @function getInstance\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackPage#\n *\n * @param {FeedbackPayload} payload - Payload response from the API\n *\n * @returns FeedbackInstance\n */\n/* jshint ignore:end */\nFeedbackPage.prototype.getInstance = function getInstance(payload) {\n  return new FeedbackInstance(\n    this._version,\n    payload,\n    this._solution.accountSid,\n    this._solution.callSid\n  );\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFeedbackPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nFeedbackPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the FeedbackContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.FeedbackInstance\n *\n * @property {string} accountSid - The unique sid that identifies this account\n * @property {Date} dateCreated - The date this resource was created\n * @property {Date} dateUpdated - The date this resource was last updated\n * @property {feedback.issues} issues - Issues experienced during the call\n * @property {number} qualityScore - 1 to 5 quality score\n * @property {string} sid -\n *          A string that uniquely identifies this feedback resource\n *\n * @param {V2010} version - Version of the resource\n * @param {FeedbackPayload} payload - The instance payload\n * @param {sid} accountSid - The unique sid that identifies this account\n * @param {sid} callSid - The unique string that identifies this resource\n */\n/* jshint ignore:end */\nFeedbackInstance = function FeedbackInstance(version, payload, accountSid,\n                                              callSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.dateCreated = deserialize.rfc2822DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.rfc2822DateTime(payload.date_updated); // jshint ignore:line\n  this.issues = payload.issues; // jshint ignore:line\n  this.qualityScore = deserialize.integer(payload.quality_score); // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {accountSid: accountSid, callSid: callSid, };\n};\n\nObject.defineProperty(FeedbackInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new FeedbackContext(\n          this._version,\n          this._solution.accountSid,\n          this._solution.callSid\n        );\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a FeedbackInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackInstance\n */\n/* jshint ignore:end */\nFeedbackInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * create a FeedbackInstance\n *\n * @function create\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackInstance#\n *\n * @param {object} opts - Options for request\n * @param {number} opts.qualityScore -\n *          The call quality expressed as an integer from 1 to 5\n * @param {feedback.issues|list} [opts.issue] - Issues experienced during the call\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackInstance\n */\n/* jshint ignore:end */\nFeedbackInstance.prototype.create = function create(opts, callback) {\n  return this._proxy.create(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a FeedbackInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.qualityScore] -\n *          The call quality expressed as an integer from 1 to 5\n * @param {feedback.issues|list} [opts.issue] - Issues experienced during the call\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackInstance\n */\n/* jshint ignore:end */\nFeedbackInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFeedbackInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nFeedbackInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the FeedbackContext\n *\n * @constructor Twilio.Api.V2010.AccountContext.CallContext.FeedbackContext\n *\n * @param {V2010} version - Version of the resource\n * @param {sid} accountSid - The unique sid that identifies this account\n * @param {sid} callSid - The call sid that uniquely identifies the call\n */\n/* jshint ignore:end */\nFeedbackContext = function FeedbackContext(version, accountSid, callSid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {accountSid: accountSid, callSid: callSid, };\n  this._uri = `/Accounts/${accountSid}/Calls/${callSid}/Feedback.json`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a FeedbackInstance\n *\n * @function fetch\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackInstance\n */\n/* jshint ignore:end */\nFeedbackContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new FeedbackInstance(\n      this._version,\n      payload,\n      this._solution.accountSid,\n      this._solution.callSid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * create a FeedbackInstance\n *\n * @function create\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackContext#\n *\n * @param {object} opts - Options for request\n * @param {number} opts.qualityScore -\n *          The call quality expressed as an integer from 1 to 5\n * @param {feedback.issues|list} [opts.issue] - Issues experienced during the call\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackInstance\n */\n/* jshint ignore:end */\nFeedbackContext.prototype.create = function create(opts, callback) {\n  if (_.isUndefined(opts)) {\n    throw new Error('Required parameter \"opts\" missing.');\n  }\n  if (_.isUndefined(opts['qualityScore'])) {\n    throw new Error('Required parameter \"opts[\\'qualityScore\\']\" missing.');\n  }\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'QualityScore': _.get(opts, 'qualityScore'),\n    'Issue': serialize.map(_.get(opts, 'issue'), function(e) { return e; })\n  });\n\n  var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new FeedbackInstance(\n      this._version,\n      payload,\n      this._solution.accountSid,\n      this._solution.callSid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a FeedbackInstance\n *\n * @function update\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackContext#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.qualityScore] -\n *          The call quality expressed as an integer from 1 to 5\n * @param {feedback.issues|list} [opts.issue] - Issues experienced during the call\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FeedbackInstance\n */\n/* jshint ignore:end */\nFeedbackContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'QualityScore': _.get(opts, 'qualityScore'),\n    'Issue': serialize.map(_.get(opts, 'issue'), function(e) { return e; })\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new FeedbackInstance(\n      this._version,\n      payload,\n      this._solution.accountSid,\n      this._solution.callSid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Api.V2010.AccountContext.CallContext.FeedbackContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFeedbackContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nFeedbackContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  FeedbackList: FeedbackList,\n  FeedbackPage: FeedbackPage,\n  FeedbackInstance: FeedbackInstance,\n  FeedbackContext: FeedbackContext\n};\n"],"mappings":"AAAA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AAEA,IAAIA,CAAC,GAAGC,OAAO,CAAC,GAAD,CAAf;AAAuB;;;AACvB,IAAIC,CAAC,GAAGD,OAAO,CAAC,QAAD,CAAf;AAA4B;;;AAC5B,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAAlB;AAA6B;;;AAC7B,IAAIG,IAAI,GAAGH,OAAO,CAAC,0BAAD,CAAlB;AAAiD;;;AACjD,IAAII,WAAW,GAAGJ,OAAO,CACrB,iCADqB,CAAzB;AACyC;;;AACzC,IAAIK,SAAS,GAAGL,OAAO,CACnB,+BADmB,CAAvB;AACuC;;;AACvC,IAAIM,MAAM,GAAGN,OAAO,CAAC,4BAAD,CAApB;AAAqD;;;AAErD,IAAIO,YAAJ;AACA,IAAIC,YAAJ;AACA,IAAIC,gBAAJ;AACA,IAAIC,eAAJ;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACAH,YAAY,GAAG,SAASA,YAAT,CAAsBI,OAAtB,EAA+BC,UAA/B,EAA2CC,OAA3C,EAAoD;EACjE;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EACE;EACA,SAASC,oBAAT,CAA8BC,GAA9B,EAAmC;IACjC,OAAOD,oBAAoB,CAACE,GAArB,CAAyBD,GAAzB,CAAP;EACD;;EAEDD,oBAAoB,CAACG,QAArB,GAAgCN,OAAhC,CAfiE,CAgBjE;;EACAG,oBAAoB,CAACI,SAArB,GAAiC;IAACN,UAAU,EAAEA,UAAb;IAAyBC,OAAO,EAAEA;EAAlC,CAAjC;EACA;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EACE;;EACAC,oBAAoB,CAACE,GAArB,GAA2B,SAASA,GAAT,GAAe;IACxC,OAAO,IAAIN,eAAJ,CAAoB,KAAKO,QAAzB,EAAmC,KAAKC,SAAL,CAAeN,UAAlD,EAA8D,KAAKM,SAAL,CAAeL,OAA7E,CAAP;EACD,CAFD;EAIA;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EACE;;;EACAC,oBAAoB,CAACK,MAArB,GAA8B,SAASA,MAAT,GAAkB;IAC9C,OAAO,KAAKD,SAAZ;EACD,CAFD;;EAIAJ,oBAAoB,CAACZ,IAAI,CAACkB,OAAL,CAAaC,MAAd,CAApB,GAA4C,SAASD,OAAT,CAAiBE,KAAjB,EAAwBC,OAAxB,EAAiC;IAC3E,OAAOrB,IAAI,CAACkB,OAAL,CAAa,KAAKD,MAAL,EAAb,EAA4BI,OAA5B,CAAP;EACD,CAFD;;EAIA,OAAOT,oBAAP;AACD,CAnDD;AAsDA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAN,YAAY,GAAG,SAASA,YAAT,CAAsBG,OAAtB,EAA+Ba,QAA/B,EAAyCC,QAAzC,EAAmD;EAChE;EACA,KAAKP,SAAL,GAAiBO,QAAjB;EAEAtB,IAAI,CAACuB,SAAL,CAAeC,WAAf,CAA2BC,IAA3B,CAAgC,IAAhC,EAAsCjB,OAAtC,EAA+Ca,QAA/C,EAAyD,KAAKN,SAA9D;AACD,CALD;;AAOAjB,CAAC,CAAC4B,MAAF,CAASrB,YAAY,CAACkB,SAAtB,EAAiCvB,IAAI,CAACuB,SAAtC;;AACAlB,YAAY,CAACkB,SAAb,CAAuBC,WAAvB,GAAqCnB,YAArC;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACAA,YAAY,CAACkB,SAAb,CAAuBI,WAAvB,GAAqC,SAASA,WAAT,CAAqBC,OAArB,EAA8B;EACjE,OAAO,IAAItB,gBAAJ,CACL,KAAKQ,QADA,EAELc,OAFK,EAGL,KAAKb,SAAL,CAAeN,UAHV,EAIL,KAAKM,SAAL,CAAeL,OAJV,CAAP;AAMD,CAPD;AASA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAL,YAAY,CAACkB,SAAb,CAAuBP,MAAvB,GAAgC,SAASA,MAAT,GAAkB;EAChD,IAAIa,KAAK,GAAG,EAAZ;;EACA/B,CAAC,CAACgC,MAAF,CAAS,IAAT,EAAe,UAASC,KAAT,EAAgBC,GAAhB,EAAqB;IAClC,IAAI,CAAClC,CAAC,CAACmC,UAAF,CAAaD,GAAb,EAAkB,GAAlB,CAAD,IAA2B,CAAElC,CAAC,CAACoC,UAAF,CAAaH,KAAb,CAAjC,EAAsD;MACpDF,KAAK,CAACG,GAAD,CAAL,GAAaD,KAAb;IACD;EACF,CAJD;;EAKA,OAAOF,KAAP;AACD,CARD;;AAUAxB,YAAY,CAACkB,SAAb,CAAuBxB,IAAI,CAACkB,OAAL,CAAaC,MAApC,IAA8C,SAASD,OAAT,CAAiBE,KAAjB,EAAwBC,OAAxB,EAAiC;EAC7E,OAAOrB,IAAI,CAACkB,OAAL,CAAa,KAAKD,MAAL,EAAb,EAA4BI,OAA5B,CAAP;AACD,CAFD;AAKA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAd,gBAAgB,GAAG,SAASA,gBAAT,CAA0BE,OAA1B,EAAmCoB,OAAnC,EAA4CnB,UAA5C,EAC2BC,OAD3B,EACoC;EACrD,KAAKI,QAAL,GAAgBN,OAAhB,CADqD,CAGrD;;EACA,KAAKC,UAAL,GAAkBmB,OAAO,CAACO,WAA1B,CAJqD,CAId;;EACvC,KAAKC,WAAL,GAAmBnC,WAAW,CAACoC,eAAZ,CAA4BT,OAAO,CAACU,YAApC,CAAnB,CALqD,CAKiB;;EACtE,KAAKC,WAAL,GAAmBtC,WAAW,CAACoC,eAAZ,CAA4BT,OAAO,CAACY,YAApC,CAAnB,CANqD,CAMiB;;EACtE,KAAKC,MAAL,GAAcb,OAAO,CAACa,MAAtB,CAPqD,CAOvB;;EAC9B,KAAKC,YAAL,GAAoBzC,WAAW,CAAC0C,OAAZ,CAAoBf,OAAO,CAACgB,aAA5B,CAApB,CARqD,CAQW;;EAChE,KAAKhC,GAAL,GAAWgB,OAAO,CAAChB,GAAnB,CATqD,CAS7B;EAExB;;EACA,KAAKiC,QAAL,GAAgBC,SAAhB;EACA,KAAK/B,SAAL,GAAiB;IAACN,UAAU,EAAEA,UAAb;IAAyBC,OAAO,EAAEA;EAAlC,CAAjB;AACD,CAfD;;AAiBAqC,MAAM,CAACC,cAAP,CAAsB1C,gBAAgB,CAACiB,SAAvC,EACE,QADF,EACY;EACRV,GAAG,EAAE,YAAW;IACd,IAAI,CAAC,KAAKgC,QAAV,EAAoB;MAClB,KAAKA,QAAL,GAAgB,IAAItC,eAAJ,CACd,KAAKO,QADS,EAEd,KAAKC,SAAL,CAAeN,UAFD,EAGd,KAAKM,SAAL,CAAeL,OAHD,CAAhB;IAKD;;IAED,OAAO,KAAKmC,QAAZ;EACD;AAXO,CADZ;AAeA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACAvC,gBAAgB,CAACiB,SAAjB,CAA2B0B,KAA3B,GAAmC,SAASA,KAAT,CAAeC,QAAf,EAAyB;EAC1D,OAAO,KAAKC,MAAL,CAAYF,KAAZ,CAAkBC,QAAlB,CAAP;AACD,CAFD;AAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA5C,gBAAgB,CAACiB,SAAjB,CAA2B6B,MAA3B,GAAoC,SAASA,MAAT,CAAgBC,IAAhB,EAAsBH,QAAtB,EAAgC;EAClE,OAAO,KAAKC,MAAL,CAAYC,MAAZ,CAAmBC,IAAnB,EAAyBH,QAAzB,CAAP;AACD,CAFD;AAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA5C,gBAAgB,CAACiB,SAAjB,CAA2B+B,MAA3B,GAAoC,SAASA,MAAT,CAAgBD,IAAhB,EAAsBH,QAAtB,EAAgC;EAClE,OAAO,KAAKC,MAAL,CAAYG,MAAZ,CAAmBD,IAAnB,EAAyBH,QAAzB,CAAP;AACD,CAFD;AAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA5C,gBAAgB,CAACiB,SAAjB,CAA2BP,MAA3B,GAAoC,SAASA,MAAT,GAAkB;EACpD,IAAIa,KAAK,GAAG,EAAZ;;EACA/B,CAAC,CAACgC,MAAF,CAAS,IAAT,EAAe,UAASC,KAAT,EAAgBC,GAAhB,EAAqB;IAClC,IAAI,CAAClC,CAAC,CAACmC,UAAF,CAAaD,GAAb,EAAkB,GAAlB,CAAD,IAA2B,CAAElC,CAAC,CAACoC,UAAF,CAAaH,KAAb,CAAjC,EAAsD;MACpDF,KAAK,CAACG,GAAD,CAAL,GAAaD,KAAb;IACD;EACF,CAJD;;EAKA,OAAOF,KAAP;AACD,CARD;;AAUAvB,gBAAgB,CAACiB,SAAjB,CAA2BxB,IAAI,CAACkB,OAAL,CAAaC,MAAxC,IAAkD,SAASD,OAAT,CAAiBE,KAAjB,EAC9CC,OAD8C,EACrC;EACX,OAAOrB,IAAI,CAACkB,OAAL,CAAa,KAAKD,MAAL,EAAb,EAA4BI,OAA5B,CAAP;AACD,CAHD;AAMA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAb,eAAe,GAAG,SAASA,eAAT,CAAyBC,OAAzB,EAAkCC,UAAlC,EAA8CC,OAA9C,EAAuD;EACvE,KAAKI,QAAL,GAAgBN,OAAhB,CADuE,CAGvE;;EACA,KAAKO,SAAL,GAAiB;IAACN,UAAU,EAAEA,UAAb;IAAyBC,OAAO,EAAEA;EAAlC,CAAjB;EACA,KAAK6C,IAAL,GAAa,aAAY9C,UAAW,UAASC,OAAQ,gBAArD;AACD,CAND;AAQA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAH,eAAe,CAACgB,SAAhB,CAA0B0B,KAA1B,GAAkC,SAASA,KAAT,CAAeC,QAAf,EAAyB;EACzD,IAAIM,QAAQ,GAAG5D,CAAC,CAAC6D,KAAF,EAAf;;EACA,IAAIC,OAAO,GAAG,KAAK5C,QAAL,CAAcmC,KAAd,CAAoB;IAACU,GAAG,EAAE,KAAKJ,IAAX;IAAiBK,MAAM,EAAE;EAAzB,CAApB,CAAd;;EAEAF,OAAO,GAAGA,OAAO,CAACG,IAAR,CAAa,UAASjC,OAAT,EAAkB;IACvC4B,QAAQ,CAACM,OAAT,CAAiB,IAAIxD,gBAAJ,CACf,KAAKQ,QADU,EAEfc,OAFe,EAGf,KAAKb,SAAL,CAAeN,UAHA,EAIf,KAAKM,SAAL,CAAeL,OAJA,CAAjB;EAMD,CAPsB,CAOrBqD,IAPqB,CAOhB,IAPgB,CAAb,CAAV;EASAL,OAAO,CAACM,KAAR,CAAc,UAASC,KAAT,EAAgB;IAC5BT,QAAQ,CAACU,MAAT,CAAgBD,KAAhB;EACD,CAFD;;EAIA,IAAInE,CAAC,CAACoC,UAAF,CAAagB,QAAb,CAAJ,EAA4B;IAC1BM,QAAQ,CAACE,OAAT,CAAiBS,OAAjB,CAAyBjB,QAAzB;EACD;;EAED,OAAOM,QAAQ,CAACE,OAAhB;AACD,CAtBD;AAwBA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAnD,eAAe,CAACgB,SAAhB,CAA0B6B,MAA1B,GAAmC,SAASA,MAAT,CAAgBC,IAAhB,EAAsBH,QAAtB,EAAgC;EACjE,IAAIpD,CAAC,CAACsE,WAAF,CAAcf,IAAd,CAAJ,EAAyB;IACvB,MAAM,IAAIgB,KAAJ,CAAU,oCAAV,CAAN;EACD;;EACD,IAAIvE,CAAC,CAACsE,WAAF,CAAcf,IAAI,CAAC,cAAD,CAAlB,CAAJ,EAAyC;IACvC,MAAM,IAAIgB,KAAJ,CAAU,sDAAV,CAAN;EACD;;EAED,IAAIb,QAAQ,GAAG5D,CAAC,CAAC6D,KAAF,EAAf;EACA,IAAIa,IAAI,GAAGnE,MAAM,CAACoE,EAAP,CAAU;IACnB,gBAAgBzE,CAAC,CAACe,GAAF,CAAMwC,IAAN,EAAY,cAAZ,CADG;IAEnB,SAASnD,SAAS,CAACsE,GAAV,CAAc1E,CAAC,CAACe,GAAF,CAAMwC,IAAN,EAAY,OAAZ,CAAd,EAAoC,UAASoB,CAAT,EAAY;MAAE,OAAOA,CAAP;IAAW,CAA7D;EAFU,CAAV,CAAX;;EAKA,IAAIf,OAAO,GAAG,KAAK5C,QAAL,CAAcsC,MAAd,CAAqB;IAACO,GAAG,EAAE,KAAKJ,IAAX;IAAiBK,MAAM,EAAE,MAAzB;IAAiCU,IAAI,EAAEA;EAAvC,CAArB,CAAd;;EAEAZ,OAAO,GAAGA,OAAO,CAACG,IAAR,CAAa,UAASjC,OAAT,EAAkB;IACvC4B,QAAQ,CAACM,OAAT,CAAiB,IAAIxD,gBAAJ,CACf,KAAKQ,QADU,EAEfc,OAFe,EAGf,KAAKb,SAAL,CAAeN,UAHA,EAIf,KAAKM,SAAL,CAAeL,OAJA,CAAjB;EAMD,CAPsB,CAOrBqD,IAPqB,CAOhB,IAPgB,CAAb,CAAV;EASAL,OAAO,CAACM,KAAR,CAAc,UAASC,KAAT,EAAgB;IAC5BT,QAAQ,CAACU,MAAT,CAAgBD,KAAhB;EACD,CAFD;;EAIA,IAAInE,CAAC,CAACoC,UAAF,CAAagB,QAAb,CAAJ,EAA4B;IAC1BM,QAAQ,CAACE,OAAT,CAAiBS,OAAjB,CAAyBjB,QAAzB;EACD;;EAED,OAAOM,QAAQ,CAACE,OAAhB;AACD,CAlCD;AAoCA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAnD,eAAe,CAACgB,SAAhB,CAA0B+B,MAA1B,GAAmC,SAASA,MAAT,CAAgBD,IAAhB,EAAsBH,QAAtB,EAAgC;EACjE,IAAIpD,CAAC,CAACoC,UAAF,CAAamB,IAAb,CAAJ,EAAwB;IACtBH,QAAQ,GAAGG,IAAX;IACAA,IAAI,GAAG,EAAP;EACD;;EACDA,IAAI,GAAGA,IAAI,IAAI,EAAf;EAEA,IAAIG,QAAQ,GAAG5D,CAAC,CAAC6D,KAAF,EAAf;EACA,IAAIa,IAAI,GAAGnE,MAAM,CAACoE,EAAP,CAAU;IACnB,gBAAgBzE,CAAC,CAACe,GAAF,CAAMwC,IAAN,EAAY,cAAZ,CADG;IAEnB,SAASnD,SAAS,CAACsE,GAAV,CAAc1E,CAAC,CAACe,GAAF,CAAMwC,IAAN,EAAY,OAAZ,CAAd,EAAoC,UAASoB,CAAT,EAAY;MAAE,OAAOA,CAAP;IAAW,CAA7D;EAFU,CAAV,CAAX;;EAKA,IAAIf,OAAO,GAAG,KAAK5C,QAAL,CAAcwC,MAAd,CAAqB;IAACK,GAAG,EAAE,KAAKJ,IAAX;IAAiBK,MAAM,EAAE,MAAzB;IAAiCU,IAAI,EAAEA;EAAvC,CAArB,CAAd;;EAEAZ,OAAO,GAAGA,OAAO,CAACG,IAAR,CAAa,UAASjC,OAAT,EAAkB;IACvC4B,QAAQ,CAACM,OAAT,CAAiB,IAAIxD,gBAAJ,CACf,KAAKQ,QADU,EAEfc,OAFe,EAGf,KAAKb,SAAL,CAAeN,UAHA,EAIf,KAAKM,SAAL,CAAeL,OAJA,CAAjB;EAMD,CAPsB,CAOrBqD,IAPqB,CAOhB,IAPgB,CAAb,CAAV;EASAL,OAAO,CAACM,KAAR,CAAc,UAASC,KAAT,EAAgB;IAC5BT,QAAQ,CAACU,MAAT,CAAgBD,KAAhB;EACD,CAFD;;EAIA,IAAInE,CAAC,CAACoC,UAAF,CAAagB,QAAb,CAAJ,EAA4B;IAC1BM,QAAQ,CAACE,OAAT,CAAiBS,OAAjB,CAAyBjB,QAAzB;EACD;;EAED,OAAOM,QAAQ,CAACE,OAAhB;AACD,CAjCD;AAmCA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAnD,eAAe,CAACgB,SAAhB,CAA0BP,MAA1B,GAAmC,SAASA,MAAT,GAAkB;EACnD,OAAO,KAAKD,SAAZ;AACD,CAFD;;AAIAR,eAAe,CAACgB,SAAhB,CAA0BxB,IAAI,CAACkB,OAAL,CAAaC,MAAvC,IAAiD,SAASD,OAAT,CAAiBE,KAAjB,EAC7CC,OAD6C,EACpC;EACX,OAAOrB,IAAI,CAACkB,OAAL,CAAa,KAAKD,MAAL,EAAb,EAA4BI,OAA5B,CAAP;AACD,CAHD;;AAKAsD,MAAM,CAACC,OAAP,GAAiB;EACfvE,YAAY,EAAEA,YADC;EAEfC,YAAY,EAAEA,YAFC;EAGfC,gBAAgB,EAAEA,gBAHH;EAIfC,eAAe,EAAEA;AAJF,CAAjB"},"metadata":{},"sourceType":"script"}