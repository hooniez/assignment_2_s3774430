{"ast":null,"code":"// Generated by CoffeeScript 2.4.1\n(function () {\n  var NodeType, XMLDTDEntity, XMLNode, isObject;\n  ({\n    isObject\n  } = require('./Utility'));\n  XMLNode = require('./XMLNode');\n  NodeType = require('./NodeType'); // Represents an entity declaration in the DTD\n\n  module.exports = XMLDTDEntity = function () {\n    class XMLDTDEntity extends XMLNode {\n      // Initializes a new instance of `XMLDTDEntity`\n      // `parent` the parent `XMLDocType` element\n      // `pe` whether this is a parameter entity or a general entity\n      //      defaults to `false` (general entity)\n      // `name` the name of the entity\n      // `value` internal entity value or an object with external entity details\n      // `value.pubID` public identifier\n      // `value.sysID` system identifier\n      // `value.nData` notation declaration\n      constructor(parent, pe, name, value) {\n        super(parent);\n\n        if (name == null) {\n          throw new Error(\"Missing DTD entity name. \" + this.debugInfo(name));\n        }\n\n        if (value == null) {\n          throw new Error(\"Missing DTD entity value. \" + this.debugInfo(name));\n        }\n\n        this.pe = !!pe;\n        this.name = this.stringify.name(name);\n        this.type = NodeType.EntityDeclaration;\n\n        if (!isObject(value)) {\n          this.value = this.stringify.dtdEntityValue(value);\n          this.internal = true;\n        } else {\n          if (!value.pubID && !value.sysID) {\n            throw new Error(\"Public and/or system identifiers are required for an external entity. \" + this.debugInfo(name));\n          }\n\n          if (value.pubID && !value.sysID) {\n            throw new Error(\"System identifier is required for a public external entity. \" + this.debugInfo(name));\n          }\n\n          this.internal = false;\n\n          if (value.pubID != null) {\n            this.pubID = this.stringify.dtdPubID(value.pubID);\n          }\n\n          if (value.sysID != null) {\n            this.sysID = this.stringify.dtdSysID(value.sysID);\n          }\n\n          if (value.nData != null) {\n            this.nData = this.stringify.dtdNData(value.nData);\n          }\n\n          if (this.pe && this.nData) {\n            throw new Error(\"Notation declaration is not allowed in a parameter entity. \" + this.debugInfo(name));\n          }\n        }\n      } // Converts the XML fragment to string\n      // `options.pretty` pretty prints the result\n      // `options.indent` indentation for pretty print\n      // `options.offset` how many indentations to add to every line for pretty print\n      // `options.newline` newline sequence for pretty print\n\n\n      toString(options) {\n        return this.options.writer.dtdEntity(this, this.options.writer.filterOptions(options));\n      }\n\n    }\n\n    ; // DOM level 1\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'publicId', {\n      get: function () {\n        return this.pubID;\n      }\n    });\n    Object.defineProperty(XMLDTDEntity.prototype, 'systemId', {\n      get: function () {\n        return this.sysID;\n      }\n    });\n    Object.defineProperty(XMLDTDEntity.prototype, 'notationName', {\n      get: function () {\n        return this.nData || null;\n      }\n    }); // DOM level 3\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'inputEncoding', {\n      get: function () {\n        return null;\n      }\n    });\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlEncoding', {\n      get: function () {\n        return null;\n      }\n    });\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlVersion', {\n      get: function () {\n        return null;\n      }\n    });\n    return XMLDTDEntity;\n  }.call(this);\n}).call(this);","map":{"version":3,"names":["NodeType","XMLDTDEntity","XMLNode","isObject","require","module","exports","constructor","parent","pe","name","value","Error","debugInfo","stringify","type","EntityDeclaration","dtdEntityValue","internal","pubID","sysID","dtdPubID","dtdSysID","nData","dtdNData","toString","options","writer","dtdEntity","filterOptions","Object","defineProperty","prototype","get","call"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/xmlbuilder/lib/XMLDTDEntity.js"],"sourcesContent":["// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLDTDEntity, XMLNode, isObject;\n\n  ({isObject} = require('./Utility'));\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  // Represents an entity declaration in the DTD\n  module.exports = XMLDTDEntity = (function() {\n    class XMLDTDEntity extends XMLNode {\n      // Initializes a new instance of `XMLDTDEntity`\n\n      // `parent` the parent `XMLDocType` element\n      // `pe` whether this is a parameter entity or a general entity\n      //      defaults to `false` (general entity)\n      // `name` the name of the entity\n      // `value` internal entity value or an object with external entity details\n      // `value.pubID` public identifier\n      // `value.sysID` system identifier\n      // `value.nData` notation declaration\n      constructor(parent, pe, name, value) {\n        super(parent);\n        if (name == null) {\n          throw new Error(\"Missing DTD entity name. \" + this.debugInfo(name));\n        }\n        if (value == null) {\n          throw new Error(\"Missing DTD entity value. \" + this.debugInfo(name));\n        }\n        this.pe = !!pe;\n        this.name = this.stringify.name(name);\n        this.type = NodeType.EntityDeclaration;\n        if (!isObject(value)) {\n          this.value = this.stringify.dtdEntityValue(value);\n          this.internal = true;\n        } else {\n          if (!value.pubID && !value.sysID) {\n            throw new Error(\"Public and/or system identifiers are required for an external entity. \" + this.debugInfo(name));\n          }\n          if (value.pubID && !value.sysID) {\n            throw new Error(\"System identifier is required for a public external entity. \" + this.debugInfo(name));\n          }\n          this.internal = false;\n          if (value.pubID != null) {\n            this.pubID = this.stringify.dtdPubID(value.pubID);\n          }\n          if (value.sysID != null) {\n            this.sysID = this.stringify.dtdSysID(value.sysID);\n          }\n          if (value.nData != null) {\n            this.nData = this.stringify.dtdNData(value.nData);\n          }\n          if (this.pe && this.nData) {\n            throw new Error(\"Notation declaration is not allowed in a parameter entity. \" + this.debugInfo(name));\n          }\n        }\n      }\n\n      // Converts the XML fragment to string\n\n      // `options.pretty` pretty prints the result\n      // `options.indent` indentation for pretty print\n      // `options.offset` how many indentations to add to every line for pretty print\n      // `options.newline` newline sequence for pretty print\n      toString(options) {\n        return this.options.writer.dtdEntity(this, this.options.writer.filterOptions(options));\n      }\n\n    };\n\n    // DOM level 1\n    Object.defineProperty(XMLDTDEntity.prototype, 'publicId', {\n      get: function() {\n        return this.pubID;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'systemId', {\n      get: function() {\n        return this.sysID;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'notationName', {\n      get: function() {\n        return this.nData || null;\n      }\n    });\n\n    // DOM level 3\n    Object.defineProperty(XMLDTDEntity.prototype, 'inputEncoding', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlEncoding', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlVersion', {\n      get: function() {\n        return null;\n      }\n    });\n\n    return XMLDTDEntity;\n\n  }).call(this);\n\n}).call(this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}