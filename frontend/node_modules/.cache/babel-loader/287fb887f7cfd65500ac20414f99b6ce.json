{"ast":null,"code":"var _jsxFileName = \"/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/SignUpMFA.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SignUpMFA() {\n  _s();\n\n  const [qrcodeSrc, setQrcodeSrc] = React.useState(\"\"); // Make a GET request\n\n  const axios = require(\"axios\");\n\n  let options = {\n    method: \"GET\",\n    url: \"https://google-authenticator.p.rapidapi.com/new_v2/\",\n    headers: {\n      \"X-RapidAPI-Key\": \"414bc5d180msh86e5db53aea8bbcp1bcd81jsn6915fb5401f0\",\n      \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\"\n    }\n  };\n  axios.request(options).then(function (response) {\n    console.log(response.data);\n  }).then(function (data) {\n    options = {\n      method: \"GET\",\n      url: \"https://google-authenticator.p.rapidapi.com/enroll/\",\n      params: {\n        secret: \"GXPTBCTI4DX4UFJB\",\n        issuer: \"AcmeCorp\",\n        account: \"JohnDoe\"\n      },\n      headers: {\n        \"X-RapidAPI-Key\": \"414bc5d180msh86e5db53aea8bbcp1bcd81jsn6915fb5401f0\",\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\"\n      }\n    };\n    axios.request(options).then(function (response) {\n      options = {\n        method: \"GET\",\n        url: response.data,\n        \"Access-Control-Allow-Origin\": \"*\"\n      };\n      axios.request(options).then(function (response) {\n        console.log(response.data);\n      });\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }).catch(function (error) {\n    console.error(error);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Scan the barcode from Google Authenticator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), \";\", /*#__PURE__*/_jsxDEV(\"img\", {\n      src: qrcodeSrc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SignUpMFA, \"GWntSopSV4wRHhDtPigF/BRUlpk=\");\n\n_c = SignUpMFA;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpMFA\");","map":{"version":3,"names":["React","SignUpMFA","qrcodeSrc","setQrcodeSrc","useState","axios","require","options","method","url","headers","request","then","response","console","log","data","params","secret","issuer","account","catch","error"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/SignUpMFA.js"],"sourcesContent":["import * as React from \"react\";\n\nexport default function SignUpMFA() {\n  const [qrcodeSrc, setQrcodeSrc] = React.useState(\"\");\n  // Make a GET request\n  const axios = require(\"axios\");\n\n  let options = {\n    method: \"GET\",\n    url: \"https://google-authenticator.p.rapidapi.com/new_v2/\",\n    headers: {\n      \"X-RapidAPI-Key\": \"414bc5d180msh86e5db53aea8bbcp1bcd81jsn6915fb5401f0\",\n      \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\",\n    },\n  };\n\n  axios\n    .request(options)\n    .then(function (response) {\n      console.log(response.data);\n    })\n    .then(function (data) {\n      options = {\n        method: \"GET\",\n        url: \"https://google-authenticator.p.rapidapi.com/enroll/\",\n        params: {\n          secret: \"GXPTBCTI4DX4UFJB\",\n          issuer: \"AcmeCorp\",\n          account: \"JohnDoe\",\n        },\n        headers: {\n          \"X-RapidAPI-Key\":\n            \"414bc5d180msh86e5db53aea8bbcp1bcd81jsn6915fb5401f0\",\n          \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\",\n        },\n      };\n\n      axios\n        .request(options)\n        .then(function (response) {\n          options = {\n            method: \"GET\",\n            url: response.data,\n            \"Access-Control-Allow-Origin\": \"*\",\n          };\n          axios.request(options).then(function (response) {\n            console.log(response.data);\n          });\n        })\n        .catch(function (error) {\n          console.error(error);\n        });\n    })\n    .catch(function (error) {\n      console.error(error);\n    });\n\n  return (\n    <>\n      <h1>Scan the barcode from Google Authenticator</h1>;\n      <img src={qrcodeSrc} />\n    </>\n  );\n}\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,eAAe,SAASC,SAAT,GAAqB;EAAA;;EAClC,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,KAAK,CAACI,QAAN,CAAe,EAAf,CAAlC,CADkC,CAElC;;EACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;EAEA,IAAIC,OAAO,GAAG;IACZC,MAAM,EAAE,KADI;IAEZC,GAAG,EAAE,qDAFO;IAGZC,OAAO,EAAE;MACP,kBAAkB,oDADX;MAEP,mBAAmB;IAFZ;EAHG,CAAd;EASAL,KAAK,CACFM,OADH,CACWJ,OADX,EAEGK,IAFH,CAEQ,UAAUC,QAAV,EAAoB;IACxBC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;EACD,CAJH,EAKGJ,IALH,CAKQ,UAAUI,IAAV,EAAgB;IACpBT,OAAO,GAAG;MACRC,MAAM,EAAE,KADA;MAERC,GAAG,EAAE,qDAFG;MAGRQ,MAAM,EAAE;QACNC,MAAM,EAAE,kBADF;QAENC,MAAM,EAAE,UAFF;QAGNC,OAAO,EAAE;MAHH,CAHA;MAQRV,OAAO,EAAE;QACP,kBACE,oDAFK;QAGP,mBAAmB;MAHZ;IARD,CAAV;IAeAL,KAAK,CACFM,OADH,CACWJ,OADX,EAEGK,IAFH,CAEQ,UAAUC,QAAV,EAAoB;MACxBN,OAAO,GAAG;QACRC,MAAM,EAAE,KADA;QAERC,GAAG,EAAEI,QAAQ,CAACG,IAFN;QAGR,+BAA+B;MAHvB,CAAV;MAKAX,KAAK,CAACM,OAAN,CAAcJ,OAAd,EAAuBK,IAAvB,CAA4B,UAAUC,QAAV,EAAoB;QAC9CC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;MACD,CAFD;IAGD,CAXH,EAYGK,KAZH,CAYS,UAAUC,KAAV,EAAiB;MACtBR,OAAO,CAACQ,KAAR,CAAcA,KAAd;IACD,CAdH;EAeD,CApCH,EAqCGD,KArCH,CAqCS,UAAUC,KAAV,EAAiB;IACtBR,OAAO,CAACQ,KAAR,CAAcA,KAAd;EACD,CAvCH;EAyCA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,oBAEE;MAAK,GAAG,EAAEpB;IAAV;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAMD;;GA7DuBD,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}