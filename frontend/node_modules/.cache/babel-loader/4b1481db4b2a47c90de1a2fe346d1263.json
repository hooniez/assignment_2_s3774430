{"ast":null,"code":"var _jsxFileName = \"/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/SignUpForm.js\",\n    _s = $RefreshSig$();\n\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport * as React from \"react\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUpForm(_ref) {\n  _s();\n\n  let {\n    addUser\n  } = _ref;\n  const [isPasswordInvalid, setIsPasswordInvalid] = React.useState(false);\n  const [isPasswordIdentical, setIsPasswordIdentical] = React.useState(true);\n  const [isPasswordVisible, setIsPasswordVisble] = React.useState(false);\n  let validatePasswordTimeoutId;\n  let confirmPasswordTimeoutId;\n\n  const validatePassword = event => {\n    // Only validate a second after the user stops typing\n    clearTimeout(validatePasswordTimeoutId);\n    validatePasswordTimeoutId = setTimeout(() => {\n      /* A regex pattern that matches invalid passwords\n         - Anything with less than eight characters OR\n         - Anything with no numbers OR\n         - Anything with no uppercase letter OR\n         - Anything with no lowercase letter OR\n         - Anything with no special characters\n      */\n      const regex = \"^(.{0,7}|[^0-9]*|[^A-Z]*|[^a-z]*|[a-zA-Z0-9]*)$\";\n      console.log(event.target.value.match(regex)); // If there are any matches, the password is invalid\n\n      setIsPasswordInvalid(event.target.value.match(regex) ? true : false);\n    }, 1000);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault(); // Add a user to LocalStorage\n\n    console.log(event.target); // localStorage.curruser = {\n\n    let user = {\n      firstName: event.target[0].value,\n      lastName: event.target[1].value,\n      email: event.target[2].value,\n      password: event.target[3].value\n    };\n    addUser(user);\n    console.log(\"working\"); // }\n  };\n\n  const confirmPassword = event => {\n    confirmPasswordTimeoutId = setTimeout(() => {\n      setIsPasswordIdentical(event.target.value === document.querySelector(\"#formSignupPassword\").value ? true : false);\n    }, 1000);\n  };\n\n  const togglePasswordVisability = event => {\n    setIsPasswordVisble(!isPasswordVisible);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"mt-5 mb-5\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"mb-5\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-4\",\n        controlId: \"formSignupFirstName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          visuallyHidden: \"true\",\n          children: \"First name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          required: true,\n          placeholder: \"First name\",\n          value: \"Myeonghoon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-4\",\n        controlId: \"formSignupLastName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          visuallyHidden: \"true\",\n          children: \"Last name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          required: true,\n          placeholder: \"Last name\",\n          value: \"Sun\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-5\",\n        controlId: \"formSignupEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          visuallyHidden: \"true\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          required: true,\n          placeholder: \"Email\",\n          value: \"MyeonghoonSun@lan.com.au\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-4\",\n        controlId: \"formSignupPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          visuallyHidden: \"true\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: isPasswordVisible ? \"text\" : \"password\",\n          required: true,\n          placeholder: \"Password\",\n          onChange: validatePassword,\n          isInvalid: !!isPasswordInvalid,\n          value: \"abcDEF1!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Use 8 or more character with a mix of lowercase and uppercase letters, numbers & symbols\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-2\",\n        controlId: \"formSignupPasswordConfirm\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          visuallyHidden: \"true\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: isPasswordVisible ? \"text\" : \"password\",\n          required: true,\n          placeholder: \"Confirm\",\n          isInvalid: !isPasswordIdentical,\n          onChange: confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Passwords are not identical\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"Use 8 or more character with a mix of lowercase and uppercase letters, numbers & symbols\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formSignupShowPassword\",\n        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          label: \"Show password\",\n          onClick: togglePasswordVisability\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUpForm, \"/FqJUW+Wamn0QQ+NwJgurUYlxSE=\");\n\n_c = SignUpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"names":["Button","Form","React","Container","SignUpForm","addUser","isPasswordInvalid","setIsPasswordInvalid","useState","isPasswordIdentical","setIsPasswordIdentical","isPasswordVisible","setIsPasswordVisble","validatePasswordTimeoutId","confirmPasswordTimeoutId","validatePassword","event","clearTimeout","setTimeout","regex","console","log","target","value","match","handleSubmit","preventDefault","user","firstName","lastName","email","password","confirmPassword","document","querySelector","togglePasswordVisability"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/SignUpForm.js"],"sourcesContent":["import Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport * as React from \"react\";\nimport Container from \"react-bootstrap/esm/Container\";\n\nexport default function SignUpForm({ addUser }) {\n  const [isPasswordInvalid, setIsPasswordInvalid] = React.useState(false);\n  const [isPasswordIdentical, setIsPasswordIdentical] = React.useState(true);\n  const [isPasswordVisible, setIsPasswordVisble] = React.useState(false);\n\n  let validatePasswordTimeoutId;\n  let confirmPasswordTimeoutId;\n\n  const validatePassword = (event) => {\n    // Only validate a second after the user stops typing\n    clearTimeout(validatePasswordTimeoutId);\n    validatePasswordTimeoutId = setTimeout(() => {\n      /* A regex pattern that matches invalid passwords\n         - Anything with less than eight characters OR\n         - Anything with no numbers OR\n         - Anything with no uppercase letter OR\n         - Anything with no lowercase letter OR\n         - Anything with no special characters\n      */\n      const regex = \"^(.{0,7}|[^0-9]*|[^A-Z]*|[^a-z]*|[a-zA-Z0-9]*)$\";\n      console.log(event.target.value.match(regex));\n\n      // If there are any matches, the password is invalid\n      setIsPasswordInvalid(event.target.value.match(regex) ? true : false);\n    }, 1000);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // Add a user to LocalStorage\n    console.log(event.target);\n    // localStorage.curruser = {\n    let user = {\n      firstName: event.target[0].value,\n      lastName: event.target[1].value,\n      email: event.target[2].value,\n      password: event.target[3].value,\n    };\n    addUser(user);\n\n    console.log(\"working\");\n    // }\n  };\n\n  const confirmPassword = (event) => {\n    confirmPasswordTimeoutId = setTimeout(() => {\n      setIsPasswordIdentical(\n        event.target.value ===\n          document.querySelector(\"#formSignupPassword\").value\n          ? true\n          : false\n      );\n    }, 1000);\n  };\n\n  const togglePasswordVisability = (event) => {\n    setIsPasswordVisble(!isPasswordVisible);\n  };\n\n  return (\n    <Container>\n      <Form className=\"mt-5 mb-5\" onSubmit={handleSubmit}>\n      <header className=\"mb-5\">\n        <h1 className=\"text-center\">Sign Up</h1>\n      </header>\n      <Form.Group className=\"mb-4\" controlId=\"formSignupFirstName\">\n        <Form.Label visuallyHidden=\"true\">First name</Form.Label>\n        <Form.Control\n          type=\"text\"\n          required\n          placeholder=\"First name\"\n          value=\"Myeonghoon\"\n        ></Form.Control>\n      </Form.Group>\n      <Form.Group className=\"mb-4\" controlId=\"formSignupLastName\">\n        <Form.Label visuallyHidden=\"true\">Last name</Form.Label>\n        <Form.Control\n          type=\"text\"\n          required\n          placeholder=\"Last name\"\n          value=\"Sun\"\n        ></Form.Control>\n      </Form.Group>\n      <Form.Group className=\"mb-5\" controlId=\"formSignupEmail\">\n        <Form.Label visuallyHidden=\"true\">Email</Form.Label>\n        <Form.Control\n          type=\"email\"\n          required\n          placeholder=\"Email\"\n          value=\"MyeonghoonSun@lan.com.au\"\n        />\n      </Form.Group>\n\n      <Form.Group className=\"mb-4\" controlId=\"formSignupPassword\">\n        <Form.Label visuallyHidden=\"true\">Password</Form.Label>\n        <Form.Control\n          type={isPasswordVisible ? \"text\" : \"password\"}\n          required\n          placeholder=\"Password\"\n          onChange={validatePassword}\n          isInvalid={!!isPasswordInvalid}\n          value=\"abcDEF1!\"\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Use 8 or more character with a mix of lowercase and uppercase letters,\n          numbers & symbols\n        </Form.Control.Feedback>\n      </Form.Group>\n\n      <Form.Group className=\"mb-2\" controlId=\"formSignupPasswordConfirm\">\n        <Form.Label visuallyHidden=\"true\">Confirm Password</Form.Label>\n        <Form.Control\n          type={isPasswordVisible ? \"text\" : \"password\"}\n          required\n          placeholder=\"Confirm\"\n          isInvalid={!isPasswordIdentical}\n          onChange={confirmPassword}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Passwords are not identical\n        </Form.Control.Feedback>\n        <Form.Text className=\"text-muted\">\n          Use 8 or more character with a mix of lowercase and uppercase letters,\n          numbers & symbols\n        </Form.Text>\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"formSignupShowPassword\">\n        <Form.Check\n          type=\"checkbox\"\n          label=\"Show password\"\n          onClick={togglePasswordVisability}\n        />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\">\n        Sign Up\n      </Button>\n    </Form>\n    </Container>\n    \n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}