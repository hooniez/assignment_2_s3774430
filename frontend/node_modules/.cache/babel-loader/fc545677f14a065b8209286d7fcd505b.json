{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar BundleCopyList = require('./bundle/bundleCopy').BundleCopyList;\n\nvar EvaluationList = require('./bundle/evaluation').EvaluationList;\n\nvar ItemAssignmentList = require('./bundle/itemAssignment').ItemAssignmentList;\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar ReplaceItemsList = require('./bundle/replaceItems').ReplaceItemsList;\n\nvar deserialize = require('../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar BundleList;\nvar BundlePage;\nvar BundleInstance;\nvar BundleContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the BundleList\n *\n * @constructor Twilio.Numbers.V2.RegulatoryComplianceContext.BundleList\n *\n * @param {Twilio.Numbers.V2} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nBundleList = function BundleList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function bundles\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext}\n   */\n\n  /* jshint ignore:end */\n  function BundleListInstance(sid) {\n    return BundleListInstance.get(sid);\n  }\n\n  BundleListInstance._version = version; // Path Solution\n\n  BundleListInstance._solution = {};\n  BundleListInstance._uri = `/RegulatoryCompliance/Bundles`;\n  /* jshint ignore:start */\n\n  /**\n   * create a BundleInstance\n   *\n   * @function create\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.friendlyName -\n   *          The string that you assigned to describe the resource\n   * @param {string} opts.email - The email address\n   * @param {string} [opts.statusCallback] -\n   *          The URL we call to inform your application of status changes.\n   * @param {string} [opts.regulationSid] - The unique string of a regulation.\n   * @param {string} [opts.isoCountry] - The ISO country code of the country\n   * @param {bundle.end_user_type} [opts.endUserType] -\n   *          The type of End User of the Bundle resource\n   * @param {string} [opts.numberType] - The type of phone number\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed BundleInstance\n   */\n\n  /* jshint ignore:end */\n\n  BundleListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n\n    if (_.isUndefined(opts['friendlyName'])) {\n      throw new Error('Required parameter \"opts[\\'friendlyName\\']\" missing.');\n    }\n\n    if (_.isUndefined(opts['email'])) {\n      throw new Error('Required parameter \"opts[\\'email\\']\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'Email': _.get(opts, 'email'),\n      'StatusCallback': _.get(opts, 'statusCallback'),\n      'RegulationSid': _.get(opts, 'regulationSid'),\n      'IsoCountry': _.get(opts, 'isoCountry'),\n      'EndUserType': _.get(opts, 'endUserType'),\n      'NumberType': _.get(opts, 'numberType')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new BundleInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Streams BundleInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {bundle.status} [opts.status] -\n   *          The verification status of the Bundle resource\n   * @param {string} [opts.friendlyName] -\n   *          The string that you assigned to describe the resource\n   * @param {string} [opts.regulationSid] - The unique string of a regulation.\n   * @param {string} [opts.isoCountry] - The ISO country code of the country\n   * @param {string} [opts.numberType] - The type of phone number\n   * @param {boolean} [opts.hasValidUntilDate] -\n   *          Indicates that the Bundle is a valid Bundle until a specified expiration date.\n   * @param {bundle.sort_by} [opts.sortBy] -\n   *          Can be `valid-until` or `date-updated`. Defaults to `date-created`.\n   * @param {bundle.sort_direction} [opts.sortDirection] -\n   *          Default is `DESC`. Can be `ASC` or `DESC`.\n   * @param {Date} [opts.validUntilDateBefore] -\n   *          Date to filter Bundles having their `valid_until_date` before or after the specified date. Can be `ValidUntilDate>=` or `ValidUntilDate<=`. Both can be used in conjunction as well.\n   * @param {Date} [opts.validUntilDate] -\n   *          Date to filter Bundles having their `valid_until_date` before or after the specified date. Can be `ValidUntilDate>=` or `ValidUntilDate<=`. Both can be used in conjunction as well.\n   * @param {Date} [opts.validUntilDateAfter] -\n   *          Date to filter Bundles having their `valid_until_date` before or after the specified date. Can be `ValidUntilDate>=` or `ValidUntilDate<=`. Both can be used in conjunction as well.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n\n  BundleListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists BundleInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {bundle.status} [opts.status] -\n   *          The verification status of the Bundle resource\n   * @param {string} [opts.friendlyName] -\n   *          The string that you assigned to describe the resource\n   * @param {string} [opts.regulationSid] - The unique string of a regulation.\n   * @param {string} [opts.isoCountry] - The ISO country code of the country\n   * @param {string} [opts.numberType] - The type of phone number\n   * @param {boolean} [opts.hasValidUntilDate] -\n   *          Indicates that the Bundle is a valid Bundle until a specified expiration date.\n   * @param {bundle.sort_by} [opts.sortBy] -\n   *          Can be `valid-until` or `date-updated`. Defaults to `date-created`.\n   * @param {bundle.sort_direction} [opts.sortDirection] -\n   *          Default is `DESC`. Can be `ASC` or `DESC`.\n   * @param {Date} [opts.validUntilDateBefore] -\n   *          Date to filter Bundles having their `valid_until_date` before or after the specified date. Can be `ValidUntilDate>=` or `ValidUntilDate<=`. Both can be used in conjunction as well.\n   * @param {Date} [opts.validUntilDate] -\n   *          Date to filter Bundles having their `valid_until_date` before or after the specified date. Can be `ValidUntilDate>=` or `ValidUntilDate<=`. Both can be used in conjunction as well.\n   * @param {Date} [opts.validUntilDateAfter] -\n   *          Date to filter Bundles having their `valid_until_date` before or after the specified date. Can be `ValidUntilDate>=` or `ValidUntilDate<=`. Both can be used in conjunction as well.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  BundleListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of BundleInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {bundle.status} [opts.status] -\n   *          The verification status of the Bundle resource\n   * @param {string} [opts.friendlyName] -\n   *          The string that you assigned to describe the resource\n   * @param {string} [opts.regulationSid] - The unique string of a regulation.\n   * @param {string} [opts.isoCountry] - The ISO country code of the country\n   * @param {string} [opts.numberType] - The type of phone number\n   * @param {boolean} [opts.hasValidUntilDate] -\n   *          Indicates that the Bundle is a valid Bundle until a specified expiration date.\n   * @param {bundle.sort_by} [opts.sortBy] -\n   *          Can be `valid-until` or `date-updated`. Defaults to `date-created`.\n   * @param {bundle.sort_direction} [opts.sortDirection] -\n   *          Default is `DESC`. Can be `ASC` or `DESC`.\n   * @param {Date} [opts.validUntilDateBefore] -\n   *          Date to filter Bundles having their `valid_until_date` before or after the specified date. Can be `ValidUntilDate>=` or `ValidUntilDate<=`. Both can be used in conjunction as well.\n   * @param {Date} [opts.validUntilDate] -\n   *          Date to filter Bundles having their `valid_until_date` before or after the specified date. Can be `ValidUntilDate>=` or `ValidUntilDate<=`. Both can be used in conjunction as well.\n   * @param {Date} [opts.validUntilDateAfter] -\n   *          Date to filter Bundles having their `valid_until_date` before or after the specified date. Can be `ValidUntilDate>=` or `ValidUntilDate<=`. Both can be used in conjunction as well.\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  BundleListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'Status': _.get(opts, 'status'),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'RegulationSid': _.get(opts, 'regulationSid'),\n      'IsoCountry': _.get(opts, 'isoCountry'),\n      'NumberType': _.get(opts, 'numberType'),\n      'HasValidUntilDate': serialize.bool(_.get(opts, 'hasValidUntilDate')),\n      'SortBy': _.get(opts, 'sortBy'),\n      'SortDirection': _.get(opts, 'sortDirection'),\n      'ValidUntilDate<': serialize.iso8601DateTime(_.get(opts, 'validUntilDateBefore')),\n      'ValidUntilDate': serialize.iso8601DateTime(_.get(opts, 'validUntilDate')),\n      'ValidUntilDate>': serialize.iso8601DateTime(_.get(opts, 'validUntilDateAfter')),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new BundlePage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of BundleInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  BundleListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new BundlePage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a bundle\n   *\n   * @function get\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleList#\n   *\n   * @param {string} sid - The unique string that identifies the resource.\n   *\n   * @returns {Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  BundleListInstance.get = function get(sid) {\n    return new BundleContext(this._version, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  BundleListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  BundleListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return BundleListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the BundlePage\n *\n * @constructor Twilio.Numbers.V2.RegulatoryComplianceContext.BundlePage\n *\n * @param {V2} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {BundleSolution} solution - Path solution\n *\n * @returns BundlePage\n */\n\n/* jshint ignore:end */\n\n\nBundlePage = function BundlePage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(BundlePage.prototype, Page.prototype);\n\nBundlePage.prototype.constructor = BundlePage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of BundleInstance\n *\n * @function getInstance\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundlePage#\n *\n * @param {BundlePayload} payload - Payload response from the API\n *\n * @returns BundleInstance\n */\n\n/* jshint ignore:end */\n\nBundlePage.prototype.getInstance = function getInstance(payload) {\n  return new BundleInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundlePage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nBundlePage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nBundlePage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the BundleContext\n *\n * @constructor Twilio.Numbers.V2.RegulatoryComplianceContext.BundleInstance\n *\n * @property {string} sid - The unique string that identifies the resource.\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} regulationSid - The unique string of a regulation.\n * @property {string} friendlyName -\n *          The string that you assigned to describe the resource\n * @property {bundle.status} status -\n *          The verification status of the Bundle resource\n * @property {Date} validUntil -\n *          The ISO 8601 date and time in GMT when the resource will be valid until.\n * @property {string} email - The email address\n * @property {string} statusCallback -\n *          The URL we call to inform your application of status changes.\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the resource was last updated\n * @property {string} url - The absolute URL of the Bundle resource\n * @property {string} links - The URLs of the Assigned Items of the Bundle resource\n *\n * @param {V2} version - Version of the resource\n * @param {BundlePayload} payload - The instance payload\n * @param {sid} sid - The unique string that identifies the resource.\n */\n\n/* jshint ignore:end */\n\n\nBundleInstance = function BundleInstance(version, payload, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.regulationSid = payload.regulation_sid; // jshint ignore:line\n\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n\n  this.status = payload.status; // jshint ignore:line\n\n  this.validUntil = deserialize.iso8601DateTime(payload.valid_until); // jshint ignore:line\n\n  this.email = payload.email; // jshint ignore:line\n\n  this.statusCallback = payload.status_callback; // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n\n  this.links = payload.links; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(BundleInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new BundleContext(this._version, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a BundleInstance\n *\n * @function fetch\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BundleInstance\n */\n\n/* jshint ignore:end */\n\nBundleInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * update a BundleInstance\n *\n * @function update\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {bundle.status} [opts.status] -\n *          The verification status of the Bundle resource\n * @param {string} [opts.statusCallback] -\n *          The URL we call to inform your application of status changes.\n * @param {string} [opts.friendlyName] -\n *          The string that you assigned to describe the resource\n * @param {string} [opts.email] - The email address\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BundleInstance\n */\n\n/* jshint ignore:end */\n\n\nBundleInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * remove a BundleInstance\n *\n * @function remove\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BundleInstance\n */\n\n/* jshint ignore:end */\n\n\nBundleInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n/* jshint ignore:start */\n\n/**\n * Access the evaluations\n *\n * @function evaluations\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleInstance#\n *\n * @returns {Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList}\n */\n\n/* jshint ignore:end */\n\n\nBundleInstance.prototype.evaluations = function evaluations() {\n  return this._proxy.evaluations;\n};\n/* jshint ignore:start */\n\n/**\n * Access the itemAssignments\n *\n * @function itemAssignments\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleInstance#\n *\n * @returns {Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentList}\n */\n\n/* jshint ignore:end */\n\n\nBundleInstance.prototype.itemAssignments = function itemAssignments() {\n  return this._proxy.itemAssignments;\n};\n/* jshint ignore:start */\n\n/**\n * Access the bundleCopies\n *\n * @function bundleCopies\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleInstance#\n *\n * @returns {Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.BundleCopyList}\n */\n\n/* jshint ignore:end */\n\n\nBundleInstance.prototype.bundleCopies = function bundleCopies() {\n  return this._proxy.bundleCopies;\n};\n/* jshint ignore:start */\n\n/**\n * Access the replaceItems\n *\n * @function replaceItems\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleInstance#\n *\n * @returns {Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ReplaceItemsList}\n */\n\n/* jshint ignore:end */\n\n\nBundleInstance.prototype.replaceItems = function replaceItems() {\n  return this._proxy.replaceItems;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nBundleInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nBundleInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the BundleContext\n *\n * @constructor Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext\n *\n * @property {Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList} evaluations -\n *          evaluations resource\n * @property {Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentList} itemAssignments -\n *          itemAssignments resource\n * @property {Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.BundleCopyList} bundleCopies -\n *          bundleCopies resource\n * @property {Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ReplaceItemsList} replaceItems -\n *          replaceItems resource\n *\n * @param {V2} version - Version of the resource\n * @param {sid} sid - The unique string that identifies the resource.\n */\n\n/* jshint ignore:end */\n\n\nBundleContext = function BundleContext(version, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    sid: sid\n  };\n  this._uri = `/RegulatoryCompliance/Bundles/${sid}`; // Dependents\n\n  this._evaluations = undefined;\n  this._itemAssignments = undefined;\n  this._bundleCopies = undefined;\n  this._replaceItems = undefined;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a BundleInstance\n *\n * @function fetch\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BundleInstance\n */\n\n/* jshint ignore:end */\n\n\nBundleContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new BundleInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * update a BundleInstance\n *\n * @function update\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext#\n *\n * @param {object} [opts] - Options for request\n * @param {bundle.status} [opts.status] -\n *          The verification status of the Bundle resource\n * @param {string} [opts.statusCallback] -\n *          The URL we call to inform your application of status changes.\n * @param {string} [opts.friendlyName] -\n *          The string that you assigned to describe the resource\n * @param {string} [opts.email] - The email address\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BundleInstance\n */\n\n/* jshint ignore:end */\n\n\nBundleContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'Status': _.get(opts, 'status'),\n    'StatusCallback': _.get(opts, 'statusCallback'),\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'Email': _.get(opts, 'email')\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new BundleInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * remove a BundleInstance\n *\n * @function remove\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BundleInstance\n */\n\n/* jshint ignore:end */\n\n\nBundleContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(BundleContext.prototype, 'evaluations', {\n  get: function () {\n    if (!this._evaluations) {\n      this._evaluations = new EvaluationList(this._version, this._solution.sid);\n    }\n\n    return this._evaluations;\n  }\n});\nObject.defineProperty(BundleContext.prototype, 'itemAssignments', {\n  get: function () {\n    if (!this._itemAssignments) {\n      this._itemAssignments = new ItemAssignmentList(this._version, this._solution.sid);\n    }\n\n    return this._itemAssignments;\n  }\n});\nObject.defineProperty(BundleContext.prototype, 'bundleCopies', {\n  get: function () {\n    if (!this._bundleCopies) {\n      this._bundleCopies = new BundleCopyList(this._version, this._solution.sid);\n    }\n\n    return this._bundleCopies;\n  }\n});\nObject.defineProperty(BundleContext.prototype, 'replaceItems', {\n  get: function () {\n    if (!this._replaceItems) {\n      this._replaceItems = new ReplaceItemsList(this._version, this._solution.sid);\n    }\n\n    return this._replaceItems;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\nBundleContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nBundleContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  BundleList: BundleList,\n  BundlePage: BundlePage,\n  BundleInstance: BundleInstance,\n  BundleContext: BundleContext\n};","map":{"version":3,"names":["Q","require","_","util","BundleCopyList","EvaluationList","ItemAssignmentList","Page","ReplaceItemsList","deserialize","serialize","values","BundleList","BundlePage","BundleInstance","BundleContext","version","BundleListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isUndefined","Error","deferred","defer","data","of","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","each","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","fetchNextPage","fn","page","instances","instance","nextPage","merge","list","allResources","resource","push","length","bool","iso8601DateTime","pageToken","pageNumber","params","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","accountSid","account_sid","regulationSid","regulation_sid","friendlyName","friendly_name","status","validUntil","valid_until","email","statusCallback","status_callback","dateCreated","date_created","dateUpdated","date_updated","url","links","_context","undefined","Object","defineProperty","fetch","_proxy","update","remove","evaluations","itemAssignments","bundleCopies","replaceItems","_evaluations","_itemAssignments","_bundleCopies","_replaceItems","module","exports"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/twilio/lib/rest/numbers/v2/regulatoryCompliance/bundle.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar BundleCopyList = require('./bundle/bundleCopy').BundleCopyList;\nvar EvaluationList = require('./bundle/evaluation').EvaluationList;\nvar ItemAssignmentList = require('./bundle/itemAssignment').ItemAssignmentList;\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar ReplaceItemsList = require('./bundle/replaceItems').ReplaceItemsList;\nvar deserialize = require(\n    '../../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require('../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar BundleList;\nvar BundlePage;\nvar BundleInstance;\nvar BundleContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the BundleList\n *\n * @constructor Twilio.Numbers.V2.RegulatoryComplianceContext.BundleList\n *\n * @param {Twilio.Numbers.V2} version - Version of the resource\n */\n/* jshint ignore:end */\nBundleList = function BundleList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function bundles\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext}\n   */\n  /* jshint ignore:end */\n  function BundleListInstance(sid) {\n    return BundleListInstance.get(sid);\n  }\n\n  BundleListInstance._version = version;\n  // Path Solution\n  BundleListInstance._solution = {};\n  BundleListInstance._uri = `/RegulatoryCompliance/Bundles`;\n  /* jshint ignore:start */\n  /**\n   * create a BundleInstance\n   *\n   * @function create\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.friendlyName -\n   *          The string that you assigned to describe the resource\n   * @param {string} opts.email - The email address\n   * @param {string} [opts.statusCallback] -\n   *          The URL we call to inform your application of status changes.\n   * @param {string} [opts.regulationSid] - The unique string of a regulation.\n   * @param {string} [opts.isoCountry] - The ISO country code of the country\n   * @param {bundle.end_user_type} [opts.endUserType] -\n   *          The type of End User of the Bundle resource\n   * @param {string} [opts.numberType] - The type of phone number\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed BundleInstance\n   */\n  /* jshint ignore:end */\n  BundleListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts['friendlyName'])) {\n      throw new Error('Required parameter \"opts[\\'friendlyName\\']\" missing.');\n    }\n    if (_.isUndefined(opts['email'])) {\n      throw new Error('Required parameter \"opts[\\'email\\']\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'Email': _.get(opts, 'email'),\n      'StatusCallback': _.get(opts, 'statusCallback'),\n      'RegulationSid': _.get(opts, 'regulationSid'),\n      'IsoCountry': _.get(opts, 'isoCountry'),\n      'EndUserType': _.get(opts, 'endUserType'),\n      'NumberType': _.get(opts, 'numberType')\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new BundleInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams BundleInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {bundle.status} [opts.status] -\n   *          The verification status of the Bundle resource\n   * @param {string} [opts.friendlyName] -\n   *          The string that you assigned to describe the resource\n   * @param {string} [opts.regulationSid] - The unique string of a regulation.\n   * @param {string} [opts.isoCountry] - The ISO country code of the country\n   * @param {string} [opts.numberType] - The type of phone number\n   * @param {boolean} [opts.hasValidUntilDate] -\n   *          Indicates that the Bundle is a valid Bundle until a specified expiration date.\n   * @param {bundle.sort_by} [opts.sortBy] -\n   *          Can be `valid-until` or `date-updated`. Defaults to `date-created`.\n   * @param {bundle.sort_direction} [opts.sortDirection] -\n   *          Default is `DESC`. Can be `ASC` or `DESC`.\n   * @param {Date} [opts.validUntilDateBefore] -\n   *          Date to filter Bundles having their `valid_until_date` before or after the specified date. Can be `ValidUntilDate>=` or `ValidUntilDate<=`. Both can be used in conjunction as well.\n   * @param {Date} [opts.validUntilDate] -\n   *          Date to filter Bundles having their `valid_until_date` before or after the specified date. Can be `ValidUntilDate>=` or `ValidUntilDate<=`. Both can be used in conjunction as well.\n   * @param {Date} [opts.validUntilDateAfter] -\n   *          Date to filter Bundles having their `valid_until_date` before or after the specified date. Can be `ValidUntilDate>=` or `ValidUntilDate<=`. Both can be used in conjunction as well.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  BundleListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists BundleInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {bundle.status} [opts.status] -\n   *          The verification status of the Bundle resource\n   * @param {string} [opts.friendlyName] -\n   *          The string that you assigned to describe the resource\n   * @param {string} [opts.regulationSid] - The unique string of a regulation.\n   * @param {string} [opts.isoCountry] - The ISO country code of the country\n   * @param {string} [opts.numberType] - The type of phone number\n   * @param {boolean} [opts.hasValidUntilDate] -\n   *          Indicates that the Bundle is a valid Bundle until a specified expiration date.\n   * @param {bundle.sort_by} [opts.sortBy] -\n   *          Can be `valid-until` or `date-updated`. Defaults to `date-created`.\n   * @param {bundle.sort_direction} [opts.sortDirection] -\n   *          Default is `DESC`. Can be `ASC` or `DESC`.\n   * @param {Date} [opts.validUntilDateBefore] -\n   *          Date to filter Bundles having their `valid_until_date` before or after the specified date. Can be `ValidUntilDate>=` or `ValidUntilDate<=`. Both can be used in conjunction as well.\n   * @param {Date} [opts.validUntilDate] -\n   *          Date to filter Bundles having their `valid_until_date` before or after the specified date. Can be `ValidUntilDate>=` or `ValidUntilDate<=`. Both can be used in conjunction as well.\n   * @param {Date} [opts.validUntilDateAfter] -\n   *          Date to filter Bundles having their `valid_until_date` before or after the specified date. Can be `ValidUntilDate>=` or `ValidUntilDate<=`. Both can be used in conjunction as well.\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  BundleListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of BundleInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {bundle.status} [opts.status] -\n   *          The verification status of the Bundle resource\n   * @param {string} [opts.friendlyName] -\n   *          The string that you assigned to describe the resource\n   * @param {string} [opts.regulationSid] - The unique string of a regulation.\n   * @param {string} [opts.isoCountry] - The ISO country code of the country\n   * @param {string} [opts.numberType] - The type of phone number\n   * @param {boolean} [opts.hasValidUntilDate] -\n   *          Indicates that the Bundle is a valid Bundle until a specified expiration date.\n   * @param {bundle.sort_by} [opts.sortBy] -\n   *          Can be `valid-until` or `date-updated`. Defaults to `date-created`.\n   * @param {bundle.sort_direction} [opts.sortDirection] -\n   *          Default is `DESC`. Can be `ASC` or `DESC`.\n   * @param {Date} [opts.validUntilDateBefore] -\n   *          Date to filter Bundles having their `valid_until_date` before or after the specified date. Can be `ValidUntilDate>=` or `ValidUntilDate<=`. Both can be used in conjunction as well.\n   * @param {Date} [opts.validUntilDate] -\n   *          Date to filter Bundles having their `valid_until_date` before or after the specified date. Can be `ValidUntilDate>=` or `ValidUntilDate<=`. Both can be used in conjunction as well.\n   * @param {Date} [opts.validUntilDateAfter] -\n   *          Date to filter Bundles having their `valid_until_date` before or after the specified date. Can be `ValidUntilDate>=` or `ValidUntilDate<=`. Both can be used in conjunction as well.\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  BundleListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Status': _.get(opts, 'status'),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'RegulationSid': _.get(opts, 'regulationSid'),\n      'IsoCountry': _.get(opts, 'isoCountry'),\n      'NumberType': _.get(opts, 'numberType'),\n      'HasValidUntilDate': serialize.bool(_.get(opts, 'hasValidUntilDate')),\n      'SortBy': _.get(opts, 'sortBy'),\n      'SortDirection': _.get(opts, 'sortDirection'),\n      'ValidUntilDate<': serialize.iso8601DateTime(_.get(opts, 'validUntilDateBefore')),\n      'ValidUntilDate': serialize.iso8601DateTime(_.get(opts, 'validUntilDate')),\n      'ValidUntilDate>': serialize.iso8601DateTime(_.get(opts, 'validUntilDateAfter')),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new BundlePage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of BundleInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  BundleListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new BundlePage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a bundle\n   *\n   * @function get\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleList#\n   *\n   * @param {string} sid - The unique string that identifies the resource.\n   *\n   * @returns {Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext}\n   */\n  /* jshint ignore:end */\n  BundleListInstance.get = function get(sid) {\n    return new BundleContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  BundleListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  BundleListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return BundleListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the BundlePage\n *\n * @constructor Twilio.Numbers.V2.RegulatoryComplianceContext.BundlePage\n *\n * @param {V2} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {BundleSolution} solution - Path solution\n *\n * @returns BundlePage\n */\n/* jshint ignore:end */\nBundlePage = function BundlePage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(BundlePage.prototype, Page.prototype);\nBundlePage.prototype.constructor = BundlePage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of BundleInstance\n *\n * @function getInstance\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundlePage#\n *\n * @param {BundlePayload} payload - Payload response from the API\n *\n * @returns BundleInstance\n */\n/* jshint ignore:end */\nBundlePage.prototype.getInstance = function getInstance(payload) {\n  return new BundleInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundlePage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nBundlePage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nBundlePage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the BundleContext\n *\n * @constructor Twilio.Numbers.V2.RegulatoryComplianceContext.BundleInstance\n *\n * @property {string} sid - The unique string that identifies the resource.\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} regulationSid - The unique string of a regulation.\n * @property {string} friendlyName -\n *          The string that you assigned to describe the resource\n * @property {bundle.status} status -\n *          The verification status of the Bundle resource\n * @property {Date} validUntil -\n *          The ISO 8601 date and time in GMT when the resource will be valid until.\n * @property {string} email - The email address\n * @property {string} statusCallback -\n *          The URL we call to inform your application of status changes.\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the resource was last updated\n * @property {string} url - The absolute URL of the Bundle resource\n * @property {string} links - The URLs of the Assigned Items of the Bundle resource\n *\n * @param {V2} version - Version of the resource\n * @param {BundlePayload} payload - The instance payload\n * @param {sid} sid - The unique string that identifies the resource.\n */\n/* jshint ignore:end */\nBundleInstance = function BundleInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.regulationSid = payload.regulation_sid; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.status = payload.status; // jshint ignore:line\n  this.validUntil = deserialize.iso8601DateTime(payload.valid_until); // jshint ignore:line\n  this.email = payload.email; // jshint ignore:line\n  this.statusCallback = payload.status_callback; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.links = payload.links; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {sid: sid || this.sid, };\n};\n\nObject.defineProperty(BundleInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new BundleContext(this._version, this._solution.sid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a BundleInstance\n *\n * @function fetch\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BundleInstance\n */\n/* jshint ignore:end */\nBundleInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a BundleInstance\n *\n * @function update\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {bundle.status} [opts.status] -\n *          The verification status of the Bundle resource\n * @param {string} [opts.statusCallback] -\n *          The URL we call to inform your application of status changes.\n * @param {string} [opts.friendlyName] -\n *          The string that you assigned to describe the resource\n * @param {string} [opts.email] - The email address\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BundleInstance\n */\n/* jshint ignore:end */\nBundleInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a BundleInstance\n *\n * @function remove\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BundleInstance\n */\n/* jshint ignore:end */\nBundleInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the evaluations\n *\n * @function evaluations\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleInstance#\n *\n * @returns {Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList}\n */\n/* jshint ignore:end */\nBundleInstance.prototype.evaluations = function evaluations() {\n  return this._proxy.evaluations;\n};\n\n/* jshint ignore:start */\n/**\n * Access the itemAssignments\n *\n * @function itemAssignments\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleInstance#\n *\n * @returns {Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentList}\n */\n/* jshint ignore:end */\nBundleInstance.prototype.itemAssignments = function itemAssignments() {\n  return this._proxy.itemAssignments;\n};\n\n/* jshint ignore:start */\n/**\n * Access the bundleCopies\n *\n * @function bundleCopies\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleInstance#\n *\n * @returns {Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.BundleCopyList}\n */\n/* jshint ignore:end */\nBundleInstance.prototype.bundleCopies = function bundleCopies() {\n  return this._proxy.bundleCopies;\n};\n\n/* jshint ignore:start */\n/**\n * Access the replaceItems\n *\n * @function replaceItems\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleInstance#\n *\n * @returns {Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ReplaceItemsList}\n */\n/* jshint ignore:end */\nBundleInstance.prototype.replaceItems = function replaceItems() {\n  return this._proxy.replaceItems;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nBundleInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nBundleInstance.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the BundleContext\n *\n * @constructor Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext\n *\n * @property {Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.EvaluationList} evaluations -\n *          evaluations resource\n * @property {Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ItemAssignmentList} itemAssignments -\n *          itemAssignments resource\n * @property {Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.BundleCopyList} bundleCopies -\n *          bundleCopies resource\n * @property {Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext.ReplaceItemsList} replaceItems -\n *          replaceItems resource\n *\n * @param {V2} version - Version of the resource\n * @param {sid} sid - The unique string that identifies the resource.\n */\n/* jshint ignore:end */\nBundleContext = function BundleContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {sid: sid, };\n  this._uri = `/RegulatoryCompliance/Bundles/${sid}`;\n\n  // Dependents\n  this._evaluations = undefined;\n  this._itemAssignments = undefined;\n  this._bundleCopies = undefined;\n  this._replaceItems = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a BundleInstance\n *\n * @function fetch\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BundleInstance\n */\n/* jshint ignore:end */\nBundleContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new BundleInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a BundleInstance\n *\n * @function update\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext#\n *\n * @param {object} [opts] - Options for request\n * @param {bundle.status} [opts.status] -\n *          The verification status of the Bundle resource\n * @param {string} [opts.statusCallback] -\n *          The URL we call to inform your application of status changes.\n * @param {string} [opts.friendlyName] -\n *          The string that you assigned to describe the resource\n * @param {string} [opts.email] - The email address\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BundleInstance\n */\n/* jshint ignore:end */\nBundleContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'Status': _.get(opts, 'status'),\n    'StatusCallback': _.get(opts, 'statusCallback'),\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'Email': _.get(opts, 'email')\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new BundleInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a BundleInstance\n *\n * @function remove\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed BundleInstance\n */\n/* jshint ignore:end */\nBundleContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(BundleContext.prototype,\n  'evaluations', {\n    get: function() {\n      if (!this._evaluations) {\n        this._evaluations = new EvaluationList(this._version, this._solution.sid);\n      }\n      return this._evaluations;\n    }\n});\n\nObject.defineProperty(BundleContext.prototype,\n  'itemAssignments', {\n    get: function() {\n      if (!this._itemAssignments) {\n        this._itemAssignments = new ItemAssignmentList(this._version, this._solution.sid);\n      }\n      return this._itemAssignments;\n    }\n});\n\nObject.defineProperty(BundleContext.prototype,\n  'bundleCopies', {\n    get: function() {\n      if (!this._bundleCopies) {\n        this._bundleCopies = new BundleCopyList(this._version, this._solution.sid);\n      }\n      return this._bundleCopies;\n    }\n});\n\nObject.defineProperty(BundleContext.prototype,\n  'replaceItems', {\n    get: function() {\n      if (!this._replaceItems) {\n        this._replaceItems = new ReplaceItemsList(this._version, this._solution.sid);\n      }\n      return this._replaceItems;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Numbers.V2.RegulatoryComplianceContext.BundleContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nBundleContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nBundleContext.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  BundleList: BundleList,\n  BundlePage: BundlePage,\n  BundleInstance: BundleInstance,\n  BundleContext: BundleContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}