{"ast":null,"code":"var _jsxFileName = \"/Users/hooniesun/rmit/fwp/assessment1/lan/src/App.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Footer from \"./UI/Footer\";\nimport NavigationBar from \"./UI/NavigationBar\";\nimport SignUpForm from \"./UI/SignUpForm\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport Hero from \"./UI/Hero\";\nimport { Outlet, Routes, Route } from \"react-router-dom\"; // class User {\n//   constructor(firstName, lastName, email, password) {\n//     this.firstName = firstName;\n//     this.lastName = lastName;\n//     this.email = email;\n//     this.password = password;\n//   }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction addUserToLS(user) {\n  if (localStorage.getItem('users') === null) {\n    // If a user is added for the first time, make sure localStorage.users contains an 'empty array' in JSON\n    localStorage.setItem('users', '[]');\n  }\n\n  let users = localStorage.getItem('users');\n  localStorage.setItem('users', users.slice(0));\n}\n\nfunction App() {\n  _s();\n\n  const [currUser, setCurrUser] = React.useState({}); // Store\n\n  const addCurrUser = user => {\n    setCurrUser({ ...user\n    });\n    localStorage.setItem('users', JSON.stringify(user));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {\n      context: [currUser, addCurrUser]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"8+UKHa+DbWL/DeGvABovIJBRsRU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Footer","NavigationBar","SignUpForm","Container","Hero","Outlet","Routes","Route","addUserToLS","user","localStorage","getItem","setItem","users","slice","App","currUser","setCurrUser","useState","addCurrUser","JSON","stringify"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/src/App.js"],"sourcesContent":["import * as React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Footer from \"./UI/Footer\";\nimport NavigationBar from \"./UI/NavigationBar\";\nimport SignUpForm from \"./UI/SignUpForm\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport Hero from \"./UI/Hero\";\nimport { Outlet, Routes, Route } from \"react-router-dom\";\n\n// class User {\n//   constructor(firstName, lastName, email, password) {\n//     this.firstName = firstName;\n//     this.lastName = lastName;\n//     this.email = email;\n//     this.password = password;\n//   }\n// }\n\nfunction addUserToLS(user) {\n  if (localStorage.getItem('users') === null) {\n    // If a user is added for the first time, make sure localStorage.users contains an 'empty array' in JSON\n    localStorage.setItem('users', '[]');\n  }\n\n  let users = localStorage.getItem('users');\n\n  localStorage.setItem('users', users.slice(0, ))\n\n}\n\nfunction App() {\n  const [currUser, setCurrUser] = React.useState({});\n\n  // Store\n\n  const addCurrUser = (user) => {\n    setCurrUser({ ...user });\n    localStorage.setItem('users', JSON.stringify(user));\n  };\n\n  return (\n    <React.Fragment>\n      <NavigationBar />\n      <Outlet context={[currUser, addCurrUser]} />\n\n      <Footer />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,sCAAP;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,KAAzB,QAAsC,kBAAtC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,WAAT,CAAqBC,IAArB,EAA2B;EACzB,IAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,IAAtC,EAA4C;IAC1C;IACAD,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA8B,IAA9B;EACD;;EAED,IAAIC,KAAK,GAAGH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;EAEAD,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA8BC,KAAK,CAACC,KAAN,CAAY,CAAZ,CAA9B;AAED;;AAED,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BlB,KAAK,CAACmB,QAAN,CAAe,EAAf,CAAhC,CADa,CAGb;;EAEA,MAAMC,WAAW,GAAIV,IAAD,IAAU;IAC5BQ,WAAW,CAAC,EAAE,GAAGR;IAAL,CAAD,CAAX;IACAC,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA8BQ,IAAI,CAACC,SAAL,CAAeZ,IAAf,CAA9B;EACD,CAHD;;EAKA,oBACE,QAAC,KAAD,CAAO,QAAP;IAAA,wBACE,QAAC,aAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MAAQ,OAAO,EAAE,CAACO,QAAD,EAAWG,WAAX;IAAjB;MAAA;MAAA;MAAA;IAAA,QAFF,eAIE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;GAlBQJ,G;;KAAAA,G;AAoBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}