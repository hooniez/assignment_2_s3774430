{"ast":null,"code":"// Generated by CoffeeScript 2.4.1\n(function () {\n  var XMLDOMConfiguration, XMLDOMErrorHandler, XMLDOMStringList;\n  XMLDOMErrorHandler = require('./XMLDOMErrorHandler');\n  XMLDOMStringList = require('./XMLDOMStringList'); // Implements the DOMConfiguration interface\n\n  module.exports = XMLDOMConfiguration = function () {\n    class XMLDOMConfiguration {\n      constructor() {\n        var clonedSelf;\n        this.defaultParams = {\n          \"canonical-form\": false,\n          \"cdata-sections\": false,\n          \"comments\": false,\n          \"datatype-normalization\": false,\n          \"element-content-whitespace\": true,\n          \"entities\": true,\n          \"error-handler\": new XMLDOMErrorHandler(),\n          \"infoset\": true,\n          \"validate-if-schema\": false,\n          \"namespaces\": true,\n          \"namespace-declarations\": true,\n          \"normalize-characters\": false,\n          \"schema-location\": '',\n          \"schema-type\": '',\n          \"split-cdata-sections\": true,\n          \"validate\": false,\n          \"well-formed\": true\n        };\n        this.params = clonedSelf = Object.create(this.defaultParams);\n      } // Gets the value of a parameter.\n      // `name` name of the parameter\n\n\n      getParameter(name) {\n        if (this.params.hasOwnProperty(name)) {\n          return this.params[name];\n        } else {\n          return null;\n        }\n      } // Checks if setting a parameter to a specific value is supported.\n      // `name` name of the parameter\n      // `value` parameter value\n\n\n      canSetParameter(name, value) {\n        return true;\n      } // Sets the value of a parameter.\n      // `name` name of the parameter\n      // `value` new value or null if the user wishes to unset the parameter\n\n\n      setParameter(name, value) {\n        if (value != null) {\n          return this.params[name] = value;\n        } else {\n          return delete this.params[name];\n        }\n      }\n\n    }\n\n    ; // Returns the list of parameter names\n\n    Object.defineProperty(XMLDOMConfiguration.prototype, 'parameterNames', {\n      get: function () {\n        return new XMLDOMStringList(Object.keys(this.defaultParams));\n      }\n    });\n    return XMLDOMConfiguration;\n  }.call(this);\n}).call(this);","map":{"version":3,"names":["XMLDOMConfiguration","XMLDOMErrorHandler","XMLDOMStringList","require","module","exports","constructor","clonedSelf","defaultParams","params","Object","create","getParameter","name","hasOwnProperty","canSetParameter","value","setParameter","defineProperty","prototype","get","keys","call"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/xmlbuilder/lib/XMLDOMConfiguration.js"],"sourcesContent":["// Generated by CoffeeScript 2.4.1\n(function() {\n  var XMLDOMConfiguration, XMLDOMErrorHandler, XMLDOMStringList;\n\n  XMLDOMErrorHandler = require('./XMLDOMErrorHandler');\n\n  XMLDOMStringList = require('./XMLDOMStringList');\n\n  // Implements the DOMConfiguration interface\n  module.exports = XMLDOMConfiguration = (function() {\n    class XMLDOMConfiguration {\n      constructor() {\n        var clonedSelf;\n        this.defaultParams = {\n          \"canonical-form\": false,\n          \"cdata-sections\": false,\n          \"comments\": false,\n          \"datatype-normalization\": false,\n          \"element-content-whitespace\": true,\n          \"entities\": true,\n          \"error-handler\": new XMLDOMErrorHandler(),\n          \"infoset\": true,\n          \"validate-if-schema\": false,\n          \"namespaces\": true,\n          \"namespace-declarations\": true,\n          \"normalize-characters\": false,\n          \"schema-location\": '',\n          \"schema-type\": '',\n          \"split-cdata-sections\": true,\n          \"validate\": false,\n          \"well-formed\": true\n        };\n        this.params = clonedSelf = Object.create(this.defaultParams);\n      }\n\n      // Gets the value of a parameter.\n\n      // `name` name of the parameter\n      getParameter(name) {\n        if (this.params.hasOwnProperty(name)) {\n          return this.params[name];\n        } else {\n          return null;\n        }\n      }\n\n      // Checks if setting a parameter to a specific value is supported.\n\n      // `name` name of the parameter\n      // `value` parameter value\n      canSetParameter(name, value) {\n        return true;\n      }\n\n      // Sets the value of a parameter.\n\n      // `name` name of the parameter\n      // `value` new value or null if the user wishes to unset the parameter\n      setParameter(name, value) {\n        if (value != null) {\n          return this.params[name] = value;\n        } else {\n          return delete this.params[name];\n        }\n      }\n\n    };\n\n    // Returns the list of parameter names\n    Object.defineProperty(XMLDOMConfiguration.prototype, 'parameterNames', {\n      get: function() {\n        return new XMLDOMStringList(Object.keys(this.defaultParams));\n      }\n    });\n\n    return XMLDOMConfiguration;\n\n  }).call(this);\n\n}).call(this);\n"],"mappings":"AAAA;AACA,CAAC,YAAW;EACV,IAAIA,mBAAJ,EAAyBC,kBAAzB,EAA6CC,gBAA7C;EAEAD,kBAAkB,GAAGE,OAAO,CAAC,sBAAD,CAA5B;EAEAD,gBAAgB,GAAGC,OAAO,CAAC,oBAAD,CAA1B,CALU,CAOV;;EACAC,MAAM,CAACC,OAAP,GAAiBL,mBAAmB,GAAI,YAAW;IACjD,MAAMA,mBAAN,CAA0B;MACxBM,WAAW,GAAG;QACZ,IAAIC,UAAJ;QACA,KAAKC,aAAL,GAAqB;UACnB,kBAAkB,KADC;UAEnB,kBAAkB,KAFC;UAGnB,YAAY,KAHO;UAInB,0BAA0B,KAJP;UAKnB,8BAA8B,IALX;UAMnB,YAAY,IANO;UAOnB,iBAAiB,IAAIP,kBAAJ,EAPE;UAQnB,WAAW,IARQ;UASnB,sBAAsB,KATH;UAUnB,cAAc,IAVK;UAWnB,0BAA0B,IAXP;UAYnB,wBAAwB,KAZL;UAanB,mBAAmB,EAbA;UAcnB,eAAe,EAdI;UAenB,wBAAwB,IAfL;UAgBnB,YAAY,KAhBO;UAiBnB,eAAe;QAjBI,CAArB;QAmBA,KAAKQ,MAAL,GAAcF,UAAU,GAAGG,MAAM,CAACC,MAAP,CAAc,KAAKH,aAAnB,CAA3B;MACD,CAvBuB,CAyBxB;MAEA;;;MACAI,YAAY,CAACC,IAAD,EAAO;QACjB,IAAI,KAAKJ,MAAL,CAAYK,cAAZ,CAA2BD,IAA3B,CAAJ,EAAsC;UACpC,OAAO,KAAKJ,MAAL,CAAYI,IAAZ,CAAP;QACD,CAFD,MAEO;UACL,OAAO,IAAP;QACD;MACF,CAlCuB,CAoCxB;MAEA;MACA;;;MACAE,eAAe,CAACF,IAAD,EAAOG,KAAP,EAAc;QAC3B,OAAO,IAAP;MACD,CA1CuB,CA4CxB;MAEA;MACA;;;MACAC,YAAY,CAACJ,IAAD,EAAOG,KAAP,EAAc;QACxB,IAAIA,KAAK,IAAI,IAAb,EAAmB;UACjB,OAAO,KAAKP,MAAL,CAAYI,IAAZ,IAAoBG,KAA3B;QACD,CAFD,MAEO;UACL,OAAO,OAAO,KAAKP,MAAL,CAAYI,IAAZ,CAAd;QACD;MACF;;IAtDuB;;IAwDzB,CAzDgD,CA2DjD;;IACAH,MAAM,CAACQ,cAAP,CAAsBlB,mBAAmB,CAACmB,SAA1C,EAAqD,gBAArD,EAAuE;MACrEC,GAAG,EAAE,YAAW;QACd,OAAO,IAAIlB,gBAAJ,CAAqBQ,MAAM,CAACW,IAAP,CAAY,KAAKb,aAAjB,CAArB,CAAP;MACD;IAHoE,CAAvE;IAMA,OAAOR,mBAAP;EAED,CApEsC,CAoEpCsB,IApEoC,CAoE/B,IApE+B,CAAvC;AAsED,CA9ED,EA8EGA,IA9EH,CA8EQ,IA9ER"},"metadata":{},"sourceType":"script"}