{"ast":null,"code":"var _jsxFileName = \"/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/SignUpForm.js\",\n    _s = $RefreshSig$();\n\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport * as React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUpForm() {\n  _s();\n\n  const [isPasswordInvalid, setIsPasswordInvalid] = React.useState(false);\n  const [isPasswordConfirmed, setIsPasswordConfirmed] = React.useState(false);\n  const [isPasswordVisible, setIsPasswordVisble] = React.useState(false);\n  let validatePasswordTimeoutId;\n  let confirmPasswordTimeoutId;\n\n  const validatePassword = event => {\n    // Only validate a second after the user stops typing\n    clearTimeout(validatePasswordTimeoutId);\n    validatePasswordTimeoutId = setTimeout(() => {\n      /* A regex pattern that matches invalid passwords\n         - Anything with less than eight characters OR\n         - Anything with no numbers OR\n         - Anything with no uppercase letter OR\n         - Anything with no lowercase letter OR\n         - Anything with no special characters\n      */\n      const regex = \"^(.{0,7}|[^0-9]*|[^A-Z]*|[^a-z]*|[a-zA-Z0-9]*)$\";\n      console.log(event.target.value.match(regex)); // If there are any matches, the password is invalid\n\n      setIsPasswordInvalid(event.target.value.match(regex) ? true : false);\n    }, 1000);\n  };\n\n  const confirmPassword = event => {\n    clearTimeout(confirmPasswordTimeoutId);\n    confirmPasswordTimeoutId = setTimeout(() => {\n      setIsPasswordConfirmed(event.target.value === document.querySelector('#formSignupPassword'));\n    });\n  };\n\n  const togglePasswordVisability = event => {\n    setIsPasswordVisble(!isPasswordVisible);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"mt-5 mb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"mb-5\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-4\",\n      controlId: \"formSignupFirstName\",\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        required: true,\n        placeholder: \"First name\",\n        \"aria-label\": \"First name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-4\",\n      controlId: \"formSignupLastName\",\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        required: true,\n        placeholder: \"Last name\",\n        \"aria-label\": \"Last name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-5\",\n      controlId: \"formSignupEmail\",\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"email\",\n        required: true,\n        placeholder: \"Email\",\n        \"aria-label\": \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-4\",\n      controlId: \"formSignupPassword\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        type: isPasswordVisible ? \"text\" : \"password\",\n        required: true,\n        placeholder: \"Password\",\n        \"aria-label\": \"Password\",\n        onChange: validatePassword,\n        isInvalid: !!isPasswordInvalid,\n        value: \"abcDEF1!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n        type: \"invalid\",\n        children: \"Use 8 or more character with a mix of lowercase and uppercase letters, numbers & symbols\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-2\",\n      controlId: \"formSignupPasswordConfirm\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        type: isPasswordVisible ? \"text\" : \"password\",\n        required: true,\n        placeholder: \"Confirm\",\n        \"aria-label\": \"Confirm\",\n        onChange: confirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n        className: \"text-muted\",\n        children: \"Use 8 or more character with a mix of lowercase and uppercase letters, numbers & symbols\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formSignupShowPassword\",\n      children: /*#__PURE__*/_jsxDEV(Form.Check, {\n        type: \"checkbox\",\n        label: \"Show password\",\n        onClick: togglePasswordVisability\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUpForm, \"vllwCkQ+6F5XSTWUkzmioVaH0V4=\");\n\n_c = SignUpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"names":["Button","Form","React","SignUpForm","isPasswordInvalid","setIsPasswordInvalid","useState","isPasswordConfirmed","setIsPasswordConfirmed","isPasswordVisible","setIsPasswordVisble","validatePasswordTimeoutId","confirmPasswordTimeoutId","validatePassword","event","clearTimeout","setTimeout","regex","console","log","target","value","match","confirmPassword","document","querySelector","togglePasswordVisability"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/SignUpForm.js"],"sourcesContent":["import Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport * as React from \"react\";\n\nexport default function SignUpForm() {\n  const [isPasswordInvalid, setIsPasswordInvalid] = React.useState(false);\n  const [isPasswordConfirmed, setIsPasswordConfirmed] = React.useState(false);\n  const [isPasswordVisible, setIsPasswordVisble] = React.useState(false);\n\n  let validatePasswordTimeoutId;\n  let confirmPasswordTimeoutId;\n\n  const validatePassword = (event) => {\n    // Only validate a second after the user stops typing\n    clearTimeout(validatePasswordTimeoutId);\n    validatePasswordTimeoutId = setTimeout(() => {\n      /* A regex pattern that matches invalid passwords\n         - Anything with less than eight characters OR\n         - Anything with no numbers OR\n         - Anything with no uppercase letter OR\n         - Anything with no lowercase letter OR\n         - Anything with no special characters\n      */\n      const regex = \"^(.{0,7}|[^0-9]*|[^A-Z]*|[^a-z]*|[a-zA-Z0-9]*)$\";\n      console.log(event.target.value.match(regex));\n\n      // If there are any matches, the password is invalid\n      setIsPasswordInvalid(event.target.value.match(regex) ? true : false);\n    }, 1000);\n  };\n\n  const confirmPassword = (event) => {\n    clearTimeout(confirmPasswordTimeoutId);\n    confirmPasswordTimeoutId = setTimeout(() => {\n      setIsPasswordConfirmed(event.target.value === document.querySelector('#formSignupPassword'))\n    });\n  };\n\n  const togglePasswordVisability = (event) => {\n    setIsPasswordVisble(!isPasswordVisible);\n  };\n\n  return (\n    <Form className=\"mt-5 mb-5\">\n      <header className=\"mb-5\">\n        <h1 className=\"text-center\">Sign Up</h1>\n      </header>\n      <Form.Group className=\"mb-4\" controlId=\"formSignupFirstName\">\n        <Form.Control\n          type=\"text\"\n          required\n          placeholder=\"First name\"\n          aria-label=\"First name\"\n        ></Form.Control>\n      </Form.Group>\n      <Form.Group className=\"mb-4\" controlId=\"formSignupLastName\">\n        <Form.Control\n          type=\"text\"\n          required\n          placeholder=\"Last name\"\n          aria-label=\"Last name\"\n        ></Form.Control>\n      </Form.Group>\n      <Form.Group className=\"mb-5\" controlId=\"formSignupEmail\">\n        <Form.Control\n          type=\"email\"\n          required\n          placeholder=\"Email\"\n          aria-label=\"Email\"\n        />\n      </Form.Group>\n\n      <Form.Group className=\"mb-4\" controlId=\"formSignupPassword\">\n        <Form.Control\n          type={isPasswordVisible ? \"text\" : \"password\"}\n          required\n          placeholder=\"Password\"\n          aria-label=\"Password\"\n          onChange={validatePassword}\n          isInvalid={!!isPasswordInvalid}\n          value=\"abcDEF1!\"\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Use 8 or more character with a mix of lowercase and uppercase letters,\n          numbers & symbols\n        </Form.Control.Feedback>\n      </Form.Group>\n\n      <Form.Group className=\"mb-2\" controlId=\"formSignupPasswordConfirm\">\n        <Form.Control\n          type={isPasswordVisible ? \"text\" : \"password\"}\n          required\n          placeholder=\"Confirm\"\n          aria-label=\"Confirm\"\n          onChange={confirmPassword}\n        />\n        <Form.Text className=\"text-muted\">\n          Use 8 or more character with a mix of lowercase and uppercase letters,\n          numbers & symbols\n        </Form.Text>\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"formSignupShowPassword\">\n        <Form.Check\n          type=\"checkbox\"\n          label=\"Show password\"\n          onClick={togglePasswordVisability}\n        />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\">\n        Sign Up\n      </Button>\n    </Form>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}