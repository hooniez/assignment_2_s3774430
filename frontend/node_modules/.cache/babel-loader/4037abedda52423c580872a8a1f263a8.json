{"ast":null,"code":"var _jsxFileName = \"/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/MFA.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { Form, Button, Container, Modal } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require(\"axios\");\n\nexport default function MFA(_ref) {\n  _s();\n\n  let {\n    show,\n    setShow,\n    signUpAuthenticatedUser\n  } = _ref;\n  const [qrcodeSrc, setQrcodeSrc] = React.useState(\"\");\n  const [secret, setSecret] = React.useState(\"\");\n  const [isOTPvalid, setIsOTPvalid] = React.useState(true);\n  const url = \"https://google-authenticator.p.rapidapi.com\";\n  const apiKey = \"414bc5d180msh86e5db53aea8bbcp1bcd81jsn6915fb5401f0\";\n\n  async function getQrCode() {\n    // options for the initial request to get a secret key\n    let res;\n    let options = {\n      method: \"GET\",\n      url: url + \"/new_v2/\",\n      headers: {\n        \"X-RapidAPI-Key\": apiKey,\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\"\n      }\n    };\n    res = await axios.request(options);\n    let secret = res.data;\n    setSecret(secret); // Re-define options again to make a request to get a QR code.\n\n    options = {\n      method: \"GET\",\n      url: url + \"/enroll/\",\n      params: {\n        secret: secret,\n        issuer: \"lan\",\n        account: \"JohnDoe\"\n      },\n      headers: {\n        \"X-RapidAPI-Key\": apiKey,\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\"\n      }\n    };\n    res = await axios.request(options);\n    setQrcodeSrc(res.data);\n  }\n\n  React.useEffect(() => {\n    getQrCode();\n  }, []);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const code = e.target[0].value;\n    const options = {\n      method: \"GET\",\n      url: url + \"/validate/\",\n      params: {\n        code: code,\n        secret: secret\n      },\n      headers: {\n        \"X-RapidAPI-Key\": apiKey,\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\"\n      }\n    };\n    axios.request(options).then(response => {\n      console.log(response.data);\n\n      if (response.data === \"True\") {\n        signUpAuthenticatedUser(secret);\n      } else {\n        setShow(true);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        className: \"text-center\",\n        children: \"Scan the QR code from Google Authenticator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      className: \"d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: qrcodeSrc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"authCode\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Authentication Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            required: true,\n            isInvalid: !isOTPvalid\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Authenticate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MFA, \"q4o9fQc2s6Kb9TEP69vuk9Cq+fY=\");\n\n_c = MFA;\n\nvar _c;\n\n$RefreshReg$(_c, \"MFA\");","map":{"version":3,"names":["React","Form","Button","Container","Modal","axios","require","MFA","show","setShow","signUpAuthenticatedUser","qrcodeSrc","setQrcodeSrc","useState","secret","setSecret","isOTPvalid","setIsOTPvalid","url","apiKey","getQrCode","res","options","method","headers","request","data","params","issuer","account","useEffect","submitHandler","e","preventDefault","code","target","value","then","response","console","log"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/MFA.js"],"sourcesContent":["import * as React from \"react\";\nimport { Form, Button, Container, Modal } from \"react-bootstrap\";\nconst axios = require(\"axios\");\n\nexport default function MFA({ show, setShow, signUpAuthenticatedUser }) {\n  const [qrcodeSrc, setQrcodeSrc] = React.useState(\"\");\n  const [secret, setSecret] = React.useState(\"\");\n  const [isOTPvalid, setIsOTPvalid] = React.useState(true);\n  const url = \"https://google-authenticator.p.rapidapi.com\";\n  const apiKey = \"414bc5d180msh86e5db53aea8bbcp1bcd81jsn6915fb5401f0\";\n\n  async function getQrCode() {\n    // options for the initial request to get a secret key\n    let res;\n    let options = {\n      method: \"GET\",\n      url: url + \"/new_v2/\",\n      headers: {\n        \"X-RapidAPI-Key\": apiKey,\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\",\n      },\n    };\n    res = await axios.request(options);\n    let secret = res.data;\n    setSecret(secret);\n\n    // Re-define options again to make a request to get a QR code.\n    options = {\n      method: \"GET\",\n      url: url + \"/enroll/\",\n      params: {\n        secret: secret,\n        issuer: \"lan\",\n        account: \"JohnDoe\",\n      },\n      headers: {\n        \"X-RapidAPI-Key\": apiKey,\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\",\n      },\n    };\n    res = await axios.request(options);\n    setQrcodeSrc(res.data);\n  }\n\n  React.useEffect(() => {\n    getQrCode();\n  }, []);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const code = e.target[0].value;\n    const options = {\n      method: \"GET\",\n      url: url + \"/validate/\",\n      params: { code: code, secret: secret },\n      headers: {\n        \"X-RapidAPI-Key\": apiKey,\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\",\n      },\n    };\n    axios.request(options).then((response) => {\n      console.log(response.data);\n      if (response.data === \"True\") {\n        signUpAuthenticatedUser(secret);\n      } else {\n        setShow(true);\n      }\n    });\n  };\n\n  return (\n    <Modal show={show}>\n      <Modal.Header closeButton>\n        <Modal.Title className=\"text-center\">\n          Scan the QR code from Google Authenticator\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body className=\"d-flex justify-content-center\">\n        <img src={qrcodeSrc} />\n      </Modal.Body>\n      <Modal.Footer>\n        <Form onSubmit={submitHandler}>\n          <Form.Group className=\"mb-3\" controlId=\"authCode\">\n            <Form.Label>Authentication Code</Form.Label>\n            <Form.Control type=\"text\" required isInvalid={!isOTPvalid}></Form.Control>\n            <Form.Control.Feedback type=\"invalid\"> </Form.Control.Feedback>\n          </Form.Group>\n          <Button type=\"submit\">Authenticate</Button>\n        </Form>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}