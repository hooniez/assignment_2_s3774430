{"ast":null,"code":"var _jsxFileName = \"/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/Posts.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport PostForm from \"./PostForm\";\nimport { Container } from \"react-bootstrap\";\nimport { useOutletContext } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Posts() {\n  _s();\n\n  var _JSON$parse;\n\n  const [user, dispatchUser] = useOutletContext(); // First read posts from localStorage if any. Otherwise, initiate posts with an empty array\n\n  const [posts, setPosts] = React.useState((_JSON$parse = JSON.parse(localStorage.getItem(\"posts\"))) !== null && _JSON$parse !== void 0 ? _JSON$parse : []);\n\n  const addPost = item => {\n    setPosts([...posts, item]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"my-5\",\n    children: /*#__PURE__*/_jsxDEV(PostForm, {\n      user: user,\n      dispatchUser: dispatchUser,\n      addPost: addPost,\n      post: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Posts, \"+ZaQXUk8nhUXLW/bIFy6C5/Elow=\", false, function () {\n  return [useOutletContext];\n});\n\n_c = Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","PostForm","Container","useOutletContext","Posts","user","dispatchUser","posts","setPosts","useState","JSON","parse","localStorage","getItem","addPost","item"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/Posts.js"],"sourcesContent":["import * as React from 'react';\nimport PostForm from \"./PostForm\";\nimport { Container } from \"react-bootstrap\";\nimport { useOutletContext } from \"react-router-dom\";\n\nexport default function Posts() {\n  const [user, dispatchUser] = useOutletContext();\n  // First read posts from localStorage if any. Otherwise, initiate posts with an empty array\n  const [posts, setPosts] = React.useState(JSON.parse(localStorage.getItem(\"posts\")) ?? []);\n  \n  const addPost = (item) => {\n    setPosts([...posts, item]);\n  }\n\n  return (\n    <Container className=\"my-5\">\n      <PostForm user={user} dispatchUser={dispatchUser} addPost={addPost} post></PostForm>\n    </Container>\n  );\n}\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,gBAAT,QAAiC,kBAAjC;;AAEA,eAAe,SAASC,KAAT,GAAiB;EAAA;;EAAA;;EAC9B,MAAM,CAACC,IAAD,EAAOC,YAAP,IAAuBH,gBAAgB,EAA7C,CAD8B,CAE9B;;EACA,MAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBR,KAAK,CAACS,QAAN,gBAAeC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAf,qDAA4D,EAA5D,CAA1B;;EAEA,MAAMC,OAAO,GAAIC,IAAD,IAAU;IACxBP,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWQ,IAAX,CAAD,CAAR;EACD,CAFD;;EAIA,oBACE,QAAC,SAAD;IAAW,SAAS,EAAC,MAArB;IAAA,uBACE,QAAC,QAAD;MAAU,IAAI,EAAEV,IAAhB;MAAsB,YAAY,EAAEC,YAApC;MAAkD,OAAO,EAAEQ,OAA3D;MAAoE,IAAI;IAAxE;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GAduBV,K;UACOD,gB;;;KADPC,K"},"metadata":{},"sourceType":"module"}