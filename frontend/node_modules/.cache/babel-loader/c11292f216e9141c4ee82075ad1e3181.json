{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../../base/values');\n/* jshint ignore:line */\n\n\nvar TaskQueueStatisticsList;\nvar TaskQueueStatisticsPage;\nvar TaskQueueStatisticsInstance;\nvar TaskQueueStatisticsContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the TaskQueueStatisticsList\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsList\n *\n * @param {Twilio.Taskrouter.V1} version - Version of the resource\n * @param {string} workspaceSid -\n *          The SID of the Workspace that contains the TaskQueue\n * @param {string} taskQueueSid -\n *          The SID of the TaskQueue from which these statistics were calculated\n */\n\n/* jshint ignore:end */\n\nTaskQueueStatisticsList = function TaskQueueStatisticsList(version, workspaceSid, taskQueueSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function statistics\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsContext}\n   */\n\n  /* jshint ignore:end */\n  function TaskQueueStatisticsListInstance(sid) {\n    return TaskQueueStatisticsListInstance.get(sid);\n  }\n\n  TaskQueueStatisticsListInstance._version = version; // Path Solution\n\n  TaskQueueStatisticsListInstance._solution = {\n    workspaceSid: workspaceSid,\n    taskQueueSid: taskQueueSid\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a task_queue_statistics\n   *\n   * @function get\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsList#\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsContext}\n   */\n\n  /* jshint ignore:end */\n\n  TaskQueueStatisticsListInstance.get = function get() {\n    return new TaskQueueStatisticsContext(this._version, this._solution.workspaceSid, this._solution.taskQueueSid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  TaskQueueStatisticsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  TaskQueueStatisticsListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return TaskQueueStatisticsListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the TaskQueueStatisticsPage\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {TaskQueueStatisticsSolution} solution - Path solution\n *\n * @returns TaskQueueStatisticsPage\n */\n\n/* jshint ignore:end */\n\n\nTaskQueueStatisticsPage = function TaskQueueStatisticsPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(TaskQueueStatisticsPage.prototype, Page.prototype);\n\nTaskQueueStatisticsPage.prototype.constructor = TaskQueueStatisticsPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of TaskQueueStatisticsInstance\n *\n * @function getInstance\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsPage#\n *\n * @param {TaskQueueStatisticsPayload} payload - Payload response from the API\n *\n * @returns TaskQueueStatisticsInstance\n */\n\n/* jshint ignore:end */\n\nTaskQueueStatisticsPage.prototype.getInstance = function getInstance(payload) {\n  return new TaskQueueStatisticsInstance(this._version, payload, this._solution.workspaceSid, this._solution.taskQueueSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nTaskQueueStatisticsPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nTaskQueueStatisticsPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the TaskQueueStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {object} cumulative -\n *          An object that contains the cumulative statistics for the TaskQueue\n * @property {object} realtime -\n *          An object that contains the real-time statistics for the TaskQueue\n * @property {string} taskQueueSid -\n *          The SID of the TaskQueue from which these statistics were calculated\n * @property {string} workspaceSid -\n *          The SID of the Workspace that contains the TaskQueue\n * @property {string} url - The absolute URL of the TaskQueue statistics resource\n *\n * @param {V1} version - Version of the resource\n * @param {TaskQueueStatisticsPayload} payload - The instance payload\n * @param {sid} workspaceSid - The SID of the Workspace that contains the TaskQueue\n * @param {sid} taskQueueSid -\n *          The SID of the TaskQueue from which these statistics were calculated\n */\n\n/* jshint ignore:end */\n\n\nTaskQueueStatisticsInstance = function TaskQueueStatisticsInstance(version, payload, workspaceSid, taskQueueSid) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.cumulative = payload.cumulative; // jshint ignore:line\n\n  this.realtime = payload.realtime; // jshint ignore:line\n\n  this.taskQueueSid = payload.task_queue_sid; // jshint ignore:line\n\n  this.workspaceSid = payload.workspace_sid; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    workspaceSid: workspaceSid,\n    taskQueueSid: taskQueueSid\n  };\n};\n\nObject.defineProperty(TaskQueueStatisticsInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new TaskQueueStatisticsContext(this._version, this._solution.workspaceSid, this._solution.taskQueueSid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a TaskQueueStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {Date} [opts.endDate] -\n *          Only calculate statistics from on or before this date\n * @param {number} [opts.minutes] -\n *          Only calculate statistics since this many minutes in the past\n * @param {Date} [opts.startDate] -\n *          Only calculate statistics from on or after this date\n * @param {string} [opts.taskChannel] -\n *          Only calculate real-time and cumulative statistics for the specified TaskChannel\n * @param {string} [opts.splitByWaitTime] -\n *          A comma separated list of values that describes the thresholds to calculate statistics on\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TaskQueueStatisticsInstance\n */\n\n/* jshint ignore:end */\n\nTaskQueueStatisticsInstance.prototype.fetch = function fetch(opts, callback) {\n  return this._proxy.fetch(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nTaskQueueStatisticsInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nTaskQueueStatisticsInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the TaskQueueStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} workspaceSid - The SID of the Workspace with the TaskQueue to fetch\n * @param {sid} taskQueueSid -\n *          The SID of the TaskQueue for which to fetch statistics\n */\n\n/* jshint ignore:end */\n\n\nTaskQueueStatisticsContext = function TaskQueueStatisticsContext(version, workspaceSid, taskQueueSid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    workspaceSid: workspaceSid,\n    taskQueueSid: taskQueueSid\n  };\n  this._uri = `/Workspaces/${workspaceSid}/TaskQueues/${taskQueueSid}/Statistics`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a TaskQueueStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsContext#\n *\n * @param {object} [opts] - Options for request\n * @param {Date} [opts.endDate] -\n *          Only calculate statistics from on or before this date\n * @param {number} [opts.minutes] -\n *          Only calculate statistics since this many minutes in the past\n * @param {Date} [opts.startDate] -\n *          Only calculate statistics from on or after this date\n * @param {string} [opts.taskChannel] -\n *          Only calculate real-time and cumulative statistics for the specified TaskChannel\n * @param {string} [opts.splitByWaitTime] -\n *          A comma separated list of values that describes the thresholds to calculate statistics on\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TaskQueueStatisticsInstance\n */\n\n/* jshint ignore:end */\n\n\nTaskQueueStatisticsContext.prototype.fetch = function fetch(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'EndDate': serialize.iso8601DateTime(_.get(opts, 'endDate')),\n    'Minutes': _.get(opts, 'minutes'),\n    'StartDate': serialize.iso8601DateTime(_.get(opts, 'startDate')),\n    'TaskChannel': _.get(opts, 'taskChannel'),\n    'SplitByWaitTime': _.get(opts, 'splitByWaitTime')\n  });\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET',\n    params: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new TaskQueueStatisticsInstance(this._version, payload, this._solution.workspaceSid, this._solution.taskQueueSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nTaskQueueStatisticsContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nTaskQueueStatisticsContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  TaskQueueStatisticsList: TaskQueueStatisticsList,\n  TaskQueueStatisticsPage: TaskQueueStatisticsPage,\n  TaskQueueStatisticsInstance: TaskQueueStatisticsInstance,\n  TaskQueueStatisticsContext: TaskQueueStatisticsContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","serialize","values","TaskQueueStatisticsList","TaskQueueStatisticsPage","TaskQueueStatisticsInstance","TaskQueueStatisticsContext","version","workspaceSid","taskQueueSid","TaskQueueStatisticsListInstance","sid","get","_version","_solution","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","accountSid","account_sid","cumulative","realtime","task_queue_sid","workspace_sid","url","_context","undefined","Object","defineProperty","fetch","opts","callback","_proxy","_uri","deferred","defer","data","of","iso8601DateTime","promise","uri","method","params","then","resolve","bind","catch","error","reject","nodeify","module","exports"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/twilio/lib/rest/taskrouter/v1/workspace/taskQueue/taskQueueStatistics.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar serialize = require(\n    '../../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar TaskQueueStatisticsList;\nvar TaskQueueStatisticsPage;\nvar TaskQueueStatisticsInstance;\nvar TaskQueueStatisticsContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskQueueStatisticsList\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsList\n *\n * @param {Twilio.Taskrouter.V1} version - Version of the resource\n * @param {string} workspaceSid -\n *          The SID of the Workspace that contains the TaskQueue\n * @param {string} taskQueueSid -\n *          The SID of the TaskQueue from which these statistics were calculated\n */\n/* jshint ignore:end */\nTaskQueueStatisticsList = function TaskQueueStatisticsList(version,\n                                                            workspaceSid,\n                                                            taskQueueSid) {\n  /* jshint ignore:start */\n  /**\n   * @function statistics\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsContext}\n   */\n  /* jshint ignore:end */\n  function TaskQueueStatisticsListInstance(sid) {\n    return TaskQueueStatisticsListInstance.get(sid);\n  }\n\n  TaskQueueStatisticsListInstance._version = version;\n  // Path Solution\n  TaskQueueStatisticsListInstance._solution = {\n    workspaceSid: workspaceSid,\n    taskQueueSid: taskQueueSid\n  };\n  /* jshint ignore:start */\n  /**\n   * Constructs a task_queue_statistics\n   *\n   * @function get\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsList#\n   *\n   * @returns {Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsContext}\n   */\n  /* jshint ignore:end */\n  TaskQueueStatisticsListInstance.get = function get() {\n    return new TaskQueueStatisticsContext(\n      this._version,\n      this._solution.workspaceSid,\n      this._solution.taskQueueSid\n    );\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  TaskQueueStatisticsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  TaskQueueStatisticsListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return TaskQueueStatisticsListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskQueueStatisticsPage\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {TaskQueueStatisticsSolution} solution - Path solution\n *\n * @returns TaskQueueStatisticsPage\n */\n/* jshint ignore:end */\nTaskQueueStatisticsPage = function TaskQueueStatisticsPage(version, response,\n                                                            solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(TaskQueueStatisticsPage.prototype, Page.prototype);\nTaskQueueStatisticsPage.prototype.constructor = TaskQueueStatisticsPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of TaskQueueStatisticsInstance\n *\n * @function getInstance\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsPage#\n *\n * @param {TaskQueueStatisticsPayload} payload - Payload response from the API\n *\n * @returns TaskQueueStatisticsInstance\n */\n/* jshint ignore:end */\nTaskQueueStatisticsPage.prototype.getInstance = function getInstance(payload) {\n  return new TaskQueueStatisticsInstance(\n    this._version,\n    payload,\n    this._solution.workspaceSid,\n    this._solution.taskQueueSid\n  );\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTaskQueueStatisticsPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nTaskQueueStatisticsPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskQueueStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {object} cumulative -\n *          An object that contains the cumulative statistics for the TaskQueue\n * @property {object} realtime -\n *          An object that contains the real-time statistics for the TaskQueue\n * @property {string} taskQueueSid -\n *          The SID of the TaskQueue from which these statistics were calculated\n * @property {string} workspaceSid -\n *          The SID of the Workspace that contains the TaskQueue\n * @property {string} url - The absolute URL of the TaskQueue statistics resource\n *\n * @param {V1} version - Version of the resource\n * @param {TaskQueueStatisticsPayload} payload - The instance payload\n * @param {sid} workspaceSid - The SID of the Workspace that contains the TaskQueue\n * @param {sid} taskQueueSid -\n *          The SID of the TaskQueue from which these statistics were calculated\n */\n/* jshint ignore:end */\nTaskQueueStatisticsInstance = function TaskQueueStatisticsInstance(version,\n    payload, workspaceSid, taskQueueSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.cumulative = payload.cumulative; // jshint ignore:line\n  this.realtime = payload.realtime; // jshint ignore:line\n  this.taskQueueSid = payload.task_queue_sid; // jshint ignore:line\n  this.workspaceSid = payload.workspace_sid; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {workspaceSid: workspaceSid, taskQueueSid: taskQueueSid, };\n};\n\nObject.defineProperty(TaskQueueStatisticsInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new TaskQueueStatisticsContext(\n          this._version,\n          this._solution.workspaceSid,\n          this._solution.taskQueueSid\n        );\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a TaskQueueStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {Date} [opts.endDate] -\n *          Only calculate statistics from on or before this date\n * @param {number} [opts.minutes] -\n *          Only calculate statistics since this many minutes in the past\n * @param {Date} [opts.startDate] -\n *          Only calculate statistics from on or after this date\n * @param {string} [opts.taskChannel] -\n *          Only calculate real-time and cumulative statistics for the specified TaskChannel\n * @param {string} [opts.splitByWaitTime] -\n *          A comma separated list of values that describes the thresholds to calculate statistics on\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TaskQueueStatisticsInstance\n */\n/* jshint ignore:end */\nTaskQueueStatisticsInstance.prototype.fetch = function fetch(opts, callback) {\n  return this._proxy.fetch(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTaskQueueStatisticsInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nTaskQueueStatisticsInstance.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskQueueStatisticsContext\n *\n * @constructor Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} workspaceSid - The SID of the Workspace with the TaskQueue to fetch\n * @param {sid} taskQueueSid -\n *          The SID of the TaskQueue for which to fetch statistics\n */\n/* jshint ignore:end */\nTaskQueueStatisticsContext = function TaskQueueStatisticsContext(version,\n    workspaceSid, taskQueueSid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {workspaceSid: workspaceSid, taskQueueSid: taskQueueSid, };\n  this._uri = `/Workspaces/${workspaceSid}/TaskQueues/${taskQueueSid}/Statistics`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a TaskQueueStatisticsInstance\n *\n * @function fetch\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsContext#\n *\n * @param {object} [opts] - Options for request\n * @param {Date} [opts.endDate] -\n *          Only calculate statistics from on or before this date\n * @param {number} [opts.minutes] -\n *          Only calculate statistics since this many minutes in the past\n * @param {Date} [opts.startDate] -\n *          Only calculate statistics from on or after this date\n * @param {string} [opts.taskChannel] -\n *          Only calculate real-time and cumulative statistics for the specified TaskChannel\n * @param {string} [opts.splitByWaitTime] -\n *          A comma separated list of values that describes the thresholds to calculate statistics on\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TaskQueueStatisticsInstance\n */\n/* jshint ignore:end */\nTaskQueueStatisticsContext.prototype.fetch = function fetch(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'EndDate': serialize.iso8601DateTime(_.get(opts, 'endDate')),\n    'Minutes': _.get(opts, 'minutes'),\n    'StartDate': serialize.iso8601DateTime(_.get(opts, 'startDate')),\n    'TaskChannel': _.get(opts, 'taskChannel'),\n    'SplitByWaitTime': _.get(opts, 'splitByWaitTime')\n  });\n\n  var promise = this._version.fetch({uri: this._uri, method: 'GET', params: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new TaskQueueStatisticsInstance(\n      this._version,\n      payload,\n      this._solution.workspaceSid,\n      this._solution.taskQueueSid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Taskrouter.V1.WorkspaceContext.TaskQueueContext.TaskQueueStatisticsContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTaskQueueStatisticsContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nTaskQueueStatisticsContext.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  TaskQueueStatisticsList: TaskQueueStatisticsList,\n  TaskQueueStatisticsPage: TaskQueueStatisticsPage,\n  TaskQueueStatisticsInstance: TaskQueueStatisticsInstance,\n  TaskQueueStatisticsContext: TaskQueueStatisticsContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}