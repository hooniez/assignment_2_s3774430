{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport * as React from \"react\";\nexport default function PasswordInput(_ref) {\n  _s();\n\n  let {\n    timeDelayed,\n    canSubmit\n  } = _ref;\n  const [isPasswordValid, setIsPasswordValid] = React.useState(true);\n  const [isPasswordIdentical, setIsPasswordIdentical] = React.useState(true);\n  const [isPasswordVisible, setIsPasswordVisble] = React.useState(false);\n  let validatePasswordTimeoutId;\n  let confirmPasswordTimeoutId;\n\n  function validatePassword(password) {\n    /* A regex pattern that matches invalid passwords\n        - Anything with less than eight characters OR\n        - Anything with no numbers OR\n        - Anything with no uppercase letter OR\n        - Anything with no lowercase letter OR\n        - Anything with no special characters\n    */\n    const regex = \"^(.{0,7}|[^0-9]*|[^A-Z]*|[^a-z]*|[a-zA-Z0-9]*)$\"; // If there are any matches, the password is invalid\n\n    return password.match(regex) ? false : true;\n  }\n\n  function confirmPassword(password) {\n    return password === document.querySelector(\"#formSignupPassword\").value;\n  }\n\n  const validatePasswordHandler = event => {\n    clearTimeout(validatePasswordTimeoutId);\n    validatePasswordTimeoutId = setTimeout(() => {\n      setIsPasswordValid(validatePassword(event.target.value));\n    }, timeDelayed);\n  };\n\n  const confirmPasswordHandler = event => {\n    clearTimeout(confirmPasswordTimeoutId);\n    confirmPasswordTimeoutId = setTimeout(() => {\n      setIsPasswordIdentical(confirmPassword(event.target.value));\n    }, timeDelayed);\n  };\n\n  const togglePasswordVisability = event => {\n    setIsPasswordVisble(!isPasswordVisible);\n  };\n\n  return;\n}\n\n_s(PasswordInput, \"FDksLvlALXxOADCrbVYeat9fCH0=\");\n\n_c = PasswordInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordInput\");","map":{"version":3,"names":["React","PasswordInput","timeDelayed","canSubmit","isPasswordValid","setIsPasswordValid","useState","isPasswordIdentical","setIsPasswordIdentical","isPasswordVisible","setIsPasswordVisble","validatePasswordTimeoutId","confirmPasswordTimeoutId","validatePassword","password","regex","match","confirmPassword","document","querySelector","value","validatePasswordHandler","event","clearTimeout","setTimeout","target","confirmPasswordHandler","togglePasswordVisability"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/PasswordInput.js"],"sourcesContent":["import * as React from \"react\";\n\nexport default function PasswordInput({timeDelayed, canSubmit}) {\n  const [isPasswordValid, setIsPasswordValid] = React.useState(true);\n  const [isPasswordIdentical, setIsPasswordIdentical] = React.useState(true);\n  const [isPasswordVisible, setIsPasswordVisble] = React.useState(false);\n\n  let validatePasswordTimeoutId;\n  let confirmPasswordTimeoutId;\n\n  function validatePassword(password) {\n    /* A regex pattern that matches invalid passwords\n        - Anything with less than eight characters OR\n        - Anything with no numbers OR\n        - Anything with no uppercase letter OR\n        - Anything with no lowercase letter OR\n        - Anything with no special characters\n    */\n    const regex = \"^(.{0,7}|[^0-9]*|[^A-Z]*|[^a-z]*|[a-zA-Z0-9]*)$\";\n    // If there are any matches, the password is invalid\n    return password.match(regex) ? false : true;\n  }\n\n  function confirmPassword(password) {\n    return password === document.querySelector(\"#formSignupPassword\").value;\n  }\n\n  const validatePasswordHandler = (event) => {\n    clearTimeout(validatePasswordTimeoutId);\n    validatePasswordTimeoutId = setTimeout(() => {\n      setIsPasswordValid(validatePassword(event.target.value));\n    }, timeDelayed);\n  };\n\n  const confirmPasswordHandler = (event) => {\n    clearTimeout(confirmPasswordTimeoutId);\n    confirmPasswordTimeoutId = setTimeout(() => {\n      setIsPasswordIdentical(confirmPassword(event.target.value));\n    }, timeDelayed);\n  };\n\n  const togglePasswordVisability = (event) => {\n    setIsPasswordVisble(!isPasswordVisible);\n  };\n\n  return \n}"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,eAAe,SAASC,aAAT,OAAiD;EAAA;;EAAA,IAA1B;IAACC,WAAD;IAAcC;EAAd,CAA0B;EAC9D,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCL,KAAK,CAACM,QAAN,CAAe,IAAf,CAA9C;EACA,MAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDR,KAAK,CAACM,QAAN,CAAe,IAAf,CAAtD;EACA,MAAM,CAACG,iBAAD,EAAoBC,mBAApB,IAA2CV,KAAK,CAACM,QAAN,CAAe,KAAf,CAAjD;EAEA,IAAIK,yBAAJ;EACA,IAAIC,wBAAJ;;EAEA,SAASC,gBAAT,CAA0BC,QAA1B,EAAoC;IAClC;AACJ;AACA;AACA;AACA;AACA;AACA;IACI,MAAMC,KAAK,GAAG,iDAAd,CARkC,CASlC;;IACA,OAAOD,QAAQ,CAACE,KAAT,CAAeD,KAAf,IAAwB,KAAxB,GAAgC,IAAvC;EACD;;EAED,SAASE,eAAT,CAAyBH,QAAzB,EAAmC;IACjC,OAAOA,QAAQ,KAAKI,QAAQ,CAACC,aAAT,CAAuB,qBAAvB,EAA8CC,KAAlE;EACD;;EAED,MAAMC,uBAAuB,GAAIC,KAAD,IAAW;IACzCC,YAAY,CAACZ,yBAAD,CAAZ;IACAA,yBAAyB,GAAGa,UAAU,CAAC,MAAM;MAC3CnB,kBAAkB,CAACQ,gBAAgB,CAACS,KAAK,CAACG,MAAN,CAAaL,KAAd,CAAjB,CAAlB;IACD,CAFqC,EAEnClB,WAFmC,CAAtC;EAGD,CALD;;EAOA,MAAMwB,sBAAsB,GAAIJ,KAAD,IAAW;IACxCC,YAAY,CAACX,wBAAD,CAAZ;IACAA,wBAAwB,GAAGY,UAAU,CAAC,MAAM;MAC1ChB,sBAAsB,CAACS,eAAe,CAACK,KAAK,CAACG,MAAN,CAAaL,KAAd,CAAhB,CAAtB;IACD,CAFoC,EAElClB,WAFkC,CAArC;EAGD,CALD;;EAOA,MAAMyB,wBAAwB,GAAIL,KAAD,IAAW;IAC1CZ,mBAAmB,CAAC,CAACD,iBAAF,CAAnB;EACD,CAFD;;EAIA;AACD;;GA5CuBR,a;;KAAAA,a"},"metadata":{},"sourceType":"module"}