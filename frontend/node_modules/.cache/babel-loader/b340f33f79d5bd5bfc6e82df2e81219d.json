{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../base/Page');\n/* jshint ignore:line */\n\n\nvar values = require('../../../base/values');\n/* jshint ignore:line */\n\n\nvar FormList;\nvar FormPage;\nvar FormInstance;\nvar FormContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the FormList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Verify.V2.FormList\n *\n * @param {Twilio.Verify.V2} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nFormList = function FormList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function forms\n   * @memberof Twilio.Verify.V2#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Verify.V2.FormContext}\n   */\n\n  /* jshint ignore:end */\n  function FormListInstance(sid) {\n    return FormListInstance.get(sid);\n  }\n\n  FormListInstance._version = version; // Path Solution\n\n  FormListInstance._solution = {};\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a form\n   *\n   * @function get\n   * @memberof Twilio.Verify.V2.FormList#\n   *\n   * @param {string} formType - The Type of this Form\n   *\n   * @returns {Twilio.Verify.V2.FormContext}\n   */\n\n  /* jshint ignore:end */\n\n  FormListInstance.get = function get(formType) {\n    return new FormContext(this._version, formType);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Verify.V2.FormList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  FormListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  FormListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return FormListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the FormPage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Verify.V2.FormPage\n *\n * @param {V2} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {FormSolution} solution - Path solution\n *\n * @returns FormPage\n */\n\n/* jshint ignore:end */\n\n\nFormPage = function FormPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(FormPage.prototype, Page.prototype);\n\nFormPage.prototype.constructor = FormPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of FormInstance\n *\n * @function getInstance\n * @memberof Twilio.Verify.V2.FormPage#\n *\n * @param {FormPayload} payload - Payload response from the API\n *\n * @returns FormInstance\n */\n\n/* jshint ignore:end */\n\nFormPage.prototype.getInstance = function getInstance(payload) {\n  return new FormInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Verify.V2.FormPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nFormPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nFormPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the FormContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Verify.V2.FormInstance\n *\n * @property {form.form_types} formType - The Type of this Form\n * @property {object} forms -\n *          Object that contains the available forms for this type.\n * @property {object} formMeta -\n *          Additional information for the available forms for this type.\n * @property {string} url - The URL to access the forms for this type.\n *\n * @param {V2} version - Version of the resource\n * @param {FormPayload} payload - The instance payload\n * @param {form:enum:form_types} formType - The Type of this Form\n */\n\n/* jshint ignore:end */\n\n\nFormInstance = function FormInstance(version, payload, formType) {\n  this._version = version; // Marshaled Properties\n\n  this.formType = payload.form_type; // jshint ignore:line\n\n  this.forms = payload.forms; // jshint ignore:line\n\n  this.formMeta = payload.form_meta; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    formType: formType || this.formType\n  };\n};\n\nObject.defineProperty(FormInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new FormContext(this._version, this._solution.formType);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a FormInstance\n *\n * @function fetch\n * @memberof Twilio.Verify.V2.FormInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FormInstance\n */\n\n/* jshint ignore:end */\n\nFormInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Verify.V2.FormInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nFormInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nFormInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the FormContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Verify.V2.FormContext\n *\n * @param {V2} version - Version of the resource\n * @param {form:enum:form_types} formType - The Type of this Form\n */\n\n/* jshint ignore:end */\n\n\nFormContext = function FormContext(version, formType) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    formType: formType\n  };\n  this._uri = `/Forms/${formType}`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a FormInstance\n *\n * @function fetch\n * @memberof Twilio.Verify.V2.FormContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FormInstance\n */\n\n/* jshint ignore:end */\n\n\nFormContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new FormInstance(this._version, payload, this._solution.formType));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Verify.V2.FormContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nFormContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nFormContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  FormList: FormList,\n  FormPage: FormPage,\n  FormInstance: FormInstance,\n  FormContext: FormContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","values","FormList","FormPage","FormInstance","FormContext","version","FormListInstance","sid","get","_version","_solution","formType","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","form_type","forms","formMeta","form_meta","url","_context","undefined","Object","defineProperty","fetch","callback","_proxy","_uri","deferred","defer","promise","uri","method","then","resolve","bind","catch","error","reject","nodeify","module","exports"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/twilio/lib/rest/verify/v2/form.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar FormList;\nvar FormPage;\nvar FormInstance;\nvar FormContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the FormList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Verify.V2.FormList\n *\n * @param {Twilio.Verify.V2} version - Version of the resource\n */\n/* jshint ignore:end */\nFormList = function FormList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function forms\n   * @memberof Twilio.Verify.V2#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Verify.V2.FormContext}\n   */\n  /* jshint ignore:end */\n  function FormListInstance(sid) {\n    return FormListInstance.get(sid);\n  }\n\n  FormListInstance._version = version;\n  // Path Solution\n  FormListInstance._solution = {};\n  /* jshint ignore:start */\n  /**\n   * Constructs a form\n   *\n   * @function get\n   * @memberof Twilio.Verify.V2.FormList#\n   *\n   * @param {string} formType - The Type of this Form\n   *\n   * @returns {Twilio.Verify.V2.FormContext}\n   */\n  /* jshint ignore:end */\n  FormListInstance.get = function get(formType) {\n    return new FormContext(this._version, formType);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Verify.V2.FormList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  FormListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  FormListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return FormListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the FormPage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Verify.V2.FormPage\n *\n * @param {V2} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {FormSolution} solution - Path solution\n *\n * @returns FormPage\n */\n/* jshint ignore:end */\nFormPage = function FormPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(FormPage.prototype, Page.prototype);\nFormPage.prototype.constructor = FormPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of FormInstance\n *\n * @function getInstance\n * @memberof Twilio.Verify.V2.FormPage#\n *\n * @param {FormPayload} payload - Payload response from the API\n *\n * @returns FormInstance\n */\n/* jshint ignore:end */\nFormPage.prototype.getInstance = function getInstance(payload) {\n  return new FormInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Verify.V2.FormPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFormPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nFormPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the FormContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Verify.V2.FormInstance\n *\n * @property {form.form_types} formType - The Type of this Form\n * @property {object} forms -\n *          Object that contains the available forms for this type.\n * @property {object} formMeta -\n *          Additional information for the available forms for this type.\n * @property {string} url - The URL to access the forms for this type.\n *\n * @param {V2} version - Version of the resource\n * @param {FormPayload} payload - The instance payload\n * @param {form:enum:form_types} formType - The Type of this Form\n */\n/* jshint ignore:end */\nFormInstance = function FormInstance(version, payload, formType) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.formType = payload.form_type; // jshint ignore:line\n  this.forms = payload.forms; // jshint ignore:line\n  this.formMeta = payload.form_meta; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {formType: formType || this.formType, };\n};\n\nObject.defineProperty(FormInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new FormContext(this._version, this._solution.formType);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a FormInstance\n *\n * @function fetch\n * @memberof Twilio.Verify.V2.FormInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FormInstance\n */\n/* jshint ignore:end */\nFormInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Verify.V2.FormInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFormInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nFormInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the FormContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Verify.V2.FormContext\n *\n * @param {V2} version - Version of the resource\n * @param {form:enum:form_types} formType - The Type of this Form\n */\n/* jshint ignore:end */\nFormContext = function FormContext(version, formType) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {formType: formType, };\n  this._uri = `/Forms/${formType}`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a FormInstance\n *\n * @function fetch\n * @memberof Twilio.Verify.V2.FormContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FormInstance\n */\n/* jshint ignore:end */\nFormContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new FormInstance(this._version, payload, this._solution.formType));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Verify.V2.FormContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFormContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nFormContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  FormList: FormList,\n  FormPage: FormPage,\n  FormInstance: FormInstance,\n  FormContext: FormContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}