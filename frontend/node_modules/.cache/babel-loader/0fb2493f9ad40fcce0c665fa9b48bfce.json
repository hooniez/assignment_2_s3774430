{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar DataSessionList = require('./sim/dataSession').DataSessionList;\n\nvar Page = require('../../../base/Page');\n/* jshint ignore:line */\n\n\nvar UsageRecordList = require('./sim/usageRecord').UsageRecordList;\n\nvar deserialize = require('../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../base/values');\n/* jshint ignore:line */\n\n\nvar SimList;\nvar SimPage;\nvar SimInstance;\nvar SimContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the SimList\n *\n * @constructor Twilio.Wireless.V1.SimList\n *\n * @param {Twilio.Wireless.V1} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nSimList = function SimList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function sims\n   * @memberof Twilio.Wireless.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Wireless.V1.SimContext}\n   */\n\n  /* jshint ignore:end */\n  function SimListInstance(sid) {\n    return SimListInstance.get(sid);\n  }\n\n  SimListInstance._version = version; // Path Solution\n\n  SimListInstance._solution = {};\n  SimListInstance._uri = `/Sims`;\n  /* jshint ignore:start */\n\n  /**\n   * Streams SimInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Wireless.V1.SimList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sim.status} [opts.status] - Only return Sim resources with this status\n   * @param {string} [opts.iccid] - Only return Sim resources with this ICCID\n   * @param {string} [opts.ratePlan] -\n   *          Only return Sim resources assigned to this RatePlan resource\n   * @param {string} [opts.eId] - Deprecated\n   * @param {string} [opts.simRegistrationCode] -\n   *          Only return Sim resources with this registration code\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n  SimListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists SimInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Wireless.V1.SimList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sim.status} [opts.status] - Only return Sim resources with this status\n   * @param {string} [opts.iccid] - Only return Sim resources with this ICCID\n   * @param {string} [opts.ratePlan] -\n   *          Only return Sim resources assigned to this RatePlan resource\n   * @param {string} [opts.eId] - Deprecated\n   * @param {string} [opts.simRegistrationCode] -\n   *          Only return Sim resources with this registration code\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  SimListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of SimInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Wireless.V1.SimList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sim.status} [opts.status] - Only return Sim resources with this status\n   * @param {string} [opts.iccid] - Only return Sim resources with this ICCID\n   * @param {string} [opts.ratePlan] -\n   *          Only return Sim resources assigned to this RatePlan resource\n   * @param {string} [opts.eId] - Deprecated\n   * @param {string} [opts.simRegistrationCode] -\n   *          Only return Sim resources with this registration code\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  SimListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'Status': _.get(opts, 'status'),\n      'Iccid': _.get(opts, 'iccid'),\n      'RatePlan': _.get(opts, 'ratePlan'),\n      'EId': _.get(opts, 'eId'),\n      'SimRegistrationCode': _.get(opts, 'simRegistrationCode'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new SimPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of SimInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Wireless.V1.SimList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  SimListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new SimPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a sim\n   *\n   * @function get\n   * @memberof Twilio.Wireless.V1.SimList#\n   *\n   * @param {string} sid - The SID of the Sim resource to fetch\n   *\n   * @returns {Twilio.Wireless.V1.SimContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  SimListInstance.get = function get(sid) {\n    return new SimContext(this._version, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Wireless.V1.SimList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  SimListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  SimListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return SimListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the SimPage\n *\n * @constructor Twilio.Wireless.V1.SimPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {SimSolution} solution - Path solution\n *\n * @returns SimPage\n */\n\n/* jshint ignore:end */\n\n\nSimPage = function SimPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(SimPage.prototype, Page.prototype);\n\nSimPage.prototype.constructor = SimPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of SimInstance\n *\n * @function getInstance\n * @memberof Twilio.Wireless.V1.SimPage#\n *\n * @param {SimPayload} payload - Payload response from the API\n *\n * @returns SimInstance\n */\n\n/* jshint ignore:end */\n\nSimPage.prototype.getInstance = function getInstance(payload) {\n  return new SimInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Wireless.V1.SimPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nSimPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nSimPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the SimContext\n *\n * @constructor Twilio.Wireless.V1.SimInstance\n *\n * @property {string} sid - The unique string that identifies the Sim resource\n * @property {string} uniqueName -\n *          An application-defined string that uniquely identifies the resource\n * @property {string} accountSid -\n *          The SID of the Account to which the Sim resource belongs\n * @property {string} ratePlanSid -\n *          The SID of the RatePlan resource to which the Sim resource is assigned.\n * @property {string} friendlyName -\n *          The string that you assigned to describe the Sim resource\n * @property {string} iccid - The ICCID associated with the SIM\n * @property {string} eId - Deprecated\n * @property {sim.status} status - The status of the Sim resource\n * @property {sim.reset_status} resetStatus -\n *          The connectivity reset status of the SIM\n * @property {string} commandsCallbackUrl -\n *          The URL we call when the SIM originates a machine-to-machine Command\n * @property {string} commandsCallbackMethod -\n *          The HTTP method we use to call commands_callback_url\n * @property {string} smsFallbackMethod - Deprecated\n * @property {string} smsFallbackUrl - Deprecated\n * @property {string} smsMethod - Deprecated\n * @property {string} smsUrl - Deprecated\n * @property {string} voiceFallbackMethod -\n *          Deprecated. The HTTP method we use to call voice_fallback_url\n * @property {string} voiceFallbackUrl -\n *          Deprecated. The URL we call when an error occurs while retrieving or executing the TwiML requested from voice_url\n * @property {string} voiceMethod -\n *          Deprecated. The HTTP method we use to call voice_url\n * @property {string} voiceUrl -\n *          Deprecated. The URL we call when the SIM-connected device makes a voice call\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the Sim resource was last updated\n * @property {string} url - The absolute URL of the resource\n * @property {string} links - The URLs of related subresources\n * @property {string} ipAddress - Deprecated\n *\n * @param {V1} version - Version of the resource\n * @param {SimPayload} payload - The instance payload\n * @param {sid_like} sid - The SID of the Sim resource to fetch\n */\n\n/* jshint ignore:end */\n\n\nSimInstance = function SimInstance(version, payload, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.uniqueName = payload.unique_name; // jshint ignore:line\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.ratePlanSid = payload.rate_plan_sid; // jshint ignore:line\n\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n\n  this.iccid = payload.iccid; // jshint ignore:line\n\n  this.eId = payload.e_id; // jshint ignore:line\n\n  this.status = payload.status; // jshint ignore:line\n\n  this.resetStatus = payload.reset_status; // jshint ignore:line\n\n  this.commandsCallbackUrl = payload.commands_callback_url; // jshint ignore:line\n\n  this.commandsCallbackMethod = payload.commands_callback_method; // jshint ignore:line\n\n  this.smsFallbackMethod = payload.sms_fallback_method; // jshint ignore:line\n\n  this.smsFallbackUrl = payload.sms_fallback_url; // jshint ignore:line\n\n  this.smsMethod = payload.sms_method; // jshint ignore:line\n\n  this.smsUrl = payload.sms_url; // jshint ignore:line\n\n  this.voiceFallbackMethod = payload.voice_fallback_method; // jshint ignore:line\n\n  this.voiceFallbackUrl = payload.voice_fallback_url; // jshint ignore:line\n\n  this.voiceMethod = payload.voice_method; // jshint ignore:line\n\n  this.voiceUrl = payload.voice_url; // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n\n  this.links = payload.links; // jshint ignore:line\n\n  this.ipAddress = payload.ip_address; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(SimInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new SimContext(this._version, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a SimInstance\n *\n * @function fetch\n * @memberof Twilio.Wireless.V1.SimInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SimInstance\n */\n\n/* jshint ignore:end */\n\nSimInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * update a SimInstance\n *\n * @function update\n * @memberof Twilio.Wireless.V1.SimInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.uniqueName] -\n *          An application-defined string that uniquely identifies the resource\n * @param {string} [opts.callbackMethod] -\n *          The HTTP method we should use to call callback_url\n * @param {string} [opts.callbackUrl] -\n *          The URL we should call when the Sim resource has finished updating\n * @param {string} [opts.friendlyName] - A string to describe the Sim resource\n * @param {string} [opts.ratePlan] -\n *          The SID or unique name of the RatePlan resource to which the Sim resource should be assigned\n * @param {sim.status} [opts.status] - The new status of the Sim resource\n * @param {string} [opts.commandsCallbackMethod] -\n *          The HTTP method we should use to call commands_callback_url\n * @param {string} [opts.commandsCallbackUrl] -\n *          The URL we should call when the SIM sends a Command\n * @param {string} [opts.smsFallbackMethod] -\n *          The HTTP method we should use to call sms_fallback_url\n * @param {string} [opts.smsFallbackUrl] -\n *          The URL we should call when an error occurs while retrieving or executing the TwiML requested from sms_url\n * @param {string} [opts.smsMethod] - The HTTP method we should use to call sms_url\n * @param {string} [opts.smsUrl] -\n *          The URL we should call when the SIM-connected device sends an SMS message that is not a Command\n * @param {string} [opts.voiceFallbackMethod] - Deprecated\n * @param {string} [opts.voiceFallbackUrl] - Deprecated\n * @param {string} [opts.voiceMethod] - Deprecated\n * @param {string} [opts.voiceUrl] - Deprecated\n * @param {sim.reset_status} [opts.resetStatus] -\n *          Initiate a connectivity reset on a SIM\n * @param {string} [opts.accountSid] -\n *          The SID of the Account to which the Sim resource should belong\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SimInstance\n */\n\n/* jshint ignore:end */\n\n\nSimInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * remove a SimInstance\n *\n * @function remove\n * @memberof Twilio.Wireless.V1.SimInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SimInstance\n */\n\n/* jshint ignore:end */\n\n\nSimInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n/* jshint ignore:start */\n\n/**\n * Access the usageRecords\n *\n * @function usageRecords\n * @memberof Twilio.Wireless.V1.SimInstance#\n *\n * @returns {Twilio.Wireless.V1.SimContext.UsageRecordList}\n */\n\n/* jshint ignore:end */\n\n\nSimInstance.prototype.usageRecords = function usageRecords() {\n  return this._proxy.usageRecords;\n};\n/* jshint ignore:start */\n\n/**\n * Access the dataSessions\n *\n * @function dataSessions\n * @memberof Twilio.Wireless.V1.SimInstance#\n *\n * @returns {Twilio.Wireless.V1.SimContext.DataSessionList}\n */\n\n/* jshint ignore:end */\n\n\nSimInstance.prototype.dataSessions = function dataSessions() {\n  return this._proxy.dataSessions;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Wireless.V1.SimInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nSimInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nSimInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the SimContext\n *\n * @constructor Twilio.Wireless.V1.SimContext\n *\n * @property {Twilio.Wireless.V1.SimContext.UsageRecordList} usageRecords -\n *          usageRecords resource\n * @property {Twilio.Wireless.V1.SimContext.DataSessionList} dataSessions -\n *          dataSessions resource\n *\n * @param {V1} version - Version of the resource\n * @param {sid_like} sid - The SID of the Sim resource to fetch\n */\n\n/* jshint ignore:end */\n\n\nSimContext = function SimContext(version, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    sid: sid\n  };\n  this._uri = `/Sims/${sid}`; // Dependents\n\n  this._usageRecords = undefined;\n  this._dataSessions = undefined;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a SimInstance\n *\n * @function fetch\n * @memberof Twilio.Wireless.V1.SimContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SimInstance\n */\n\n/* jshint ignore:end */\n\n\nSimContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new SimInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * update a SimInstance\n *\n * @function update\n * @memberof Twilio.Wireless.V1.SimContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.uniqueName] -\n *          An application-defined string that uniquely identifies the resource\n * @param {string} [opts.callbackMethod] -\n *          The HTTP method we should use to call callback_url\n * @param {string} [opts.callbackUrl] -\n *          The URL we should call when the Sim resource has finished updating\n * @param {string} [opts.friendlyName] - A string to describe the Sim resource\n * @param {string} [opts.ratePlan] -\n *          The SID or unique name of the RatePlan resource to which the Sim resource should be assigned\n * @param {sim.status} [opts.status] - The new status of the Sim resource\n * @param {string} [opts.commandsCallbackMethod] -\n *          The HTTP method we should use to call commands_callback_url\n * @param {string} [opts.commandsCallbackUrl] -\n *          The URL we should call when the SIM sends a Command\n * @param {string} [opts.smsFallbackMethod] -\n *          The HTTP method we should use to call sms_fallback_url\n * @param {string} [opts.smsFallbackUrl] -\n *          The URL we should call when an error occurs while retrieving or executing the TwiML requested from sms_url\n * @param {string} [opts.smsMethod] - The HTTP method we should use to call sms_url\n * @param {string} [opts.smsUrl] -\n *          The URL we should call when the SIM-connected device sends an SMS message that is not a Command\n * @param {string} [opts.voiceFallbackMethod] - Deprecated\n * @param {string} [opts.voiceFallbackUrl] - Deprecated\n * @param {string} [opts.voiceMethod] - Deprecated\n * @param {string} [opts.voiceUrl] - Deprecated\n * @param {sim.reset_status} [opts.resetStatus] -\n *          Initiate a connectivity reset on a SIM\n * @param {string} [opts.accountSid] -\n *          The SID of the Account to which the Sim resource should belong\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SimInstance\n */\n\n/* jshint ignore:end */\n\n\nSimContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'UniqueName': _.get(opts, 'uniqueName'),\n    'CallbackMethod': _.get(opts, 'callbackMethod'),\n    'CallbackUrl': _.get(opts, 'callbackUrl'),\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'RatePlan': _.get(opts, 'ratePlan'),\n    'Status': _.get(opts, 'status'),\n    'CommandsCallbackMethod': _.get(opts, 'commandsCallbackMethod'),\n    'CommandsCallbackUrl': _.get(opts, 'commandsCallbackUrl'),\n    'SmsFallbackMethod': _.get(opts, 'smsFallbackMethod'),\n    'SmsFallbackUrl': _.get(opts, 'smsFallbackUrl'),\n    'SmsMethod': _.get(opts, 'smsMethod'),\n    'SmsUrl': _.get(opts, 'smsUrl'),\n    'VoiceFallbackMethod': _.get(opts, 'voiceFallbackMethod'),\n    'VoiceFallbackUrl': _.get(opts, 'voiceFallbackUrl'),\n    'VoiceMethod': _.get(opts, 'voiceMethod'),\n    'VoiceUrl': _.get(opts, 'voiceUrl'),\n    'ResetStatus': _.get(opts, 'resetStatus'),\n    'AccountSid': _.get(opts, 'accountSid')\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new SimInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * remove a SimInstance\n *\n * @function remove\n * @memberof Twilio.Wireless.V1.SimContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SimInstance\n */\n\n/* jshint ignore:end */\n\n\nSimContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(SimContext.prototype, 'usageRecords', {\n  get: function () {\n    if (!this._usageRecords) {\n      this._usageRecords = new UsageRecordList(this._version, this._solution.sid);\n    }\n\n    return this._usageRecords;\n  }\n});\nObject.defineProperty(SimContext.prototype, 'dataSessions', {\n  get: function () {\n    if (!this._dataSessions) {\n      this._dataSessions = new DataSessionList(this._version, this._solution.sid);\n    }\n\n    return this._dataSessions;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Wireless.V1.SimContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\nSimContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nSimContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  SimList: SimList,\n  SimPage: SimPage,\n  SimInstance: SimInstance,\n  SimContext: SimContext\n};","map":{"version":3,"names":["Q","require","_","util","DataSessionList","Page","UsageRecordList","deserialize","values","SimList","SimPage","SimInstance","SimContext","version","SimListInstance","sid","get","_version","_solution","_uri","each","opts","callback","isFunction","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","error","fetchNextPage","fn","promise","then","page","instances","instance","bind","nextPage","catch","merge","list","deferred","defer","allResources","resource","push","length","resolve","reject","nodeify","data","of","pageToken","pageNumber","uri","method","params","payload","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","uniqueName","unique_name","accountSid","account_sid","ratePlanSid","rate_plan_sid","friendlyName","friendly_name","iccid","eId","e_id","status","resetStatus","reset_status","commandsCallbackUrl","commands_callback_url","commandsCallbackMethod","commands_callback_method","smsFallbackMethod","sms_fallback_method","smsFallbackUrl","sms_fallback_url","smsMethod","sms_method","smsUrl","sms_url","voiceFallbackMethod","voice_fallback_method","voiceFallbackUrl","voice_fallback_url","voiceMethod","voice_method","voiceUrl","voice_url","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","url","links","ipAddress","ip_address","_context","undefined","Object","defineProperty","fetch","_proxy","update","remove","usageRecords","dataSessions","_usageRecords","_dataSessions","module","exports"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/twilio/lib/rest/wireless/v1/sim.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar DataSessionList = require('./sim/dataSession').DataSessionList;\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar UsageRecordList = require('./sim/usageRecord').UsageRecordList;\nvar deserialize = require(\n    '../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar SimList;\nvar SimPage;\nvar SimInstance;\nvar SimContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the SimList\n *\n * @constructor Twilio.Wireless.V1.SimList\n *\n * @param {Twilio.Wireless.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nSimList = function SimList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function sims\n   * @memberof Twilio.Wireless.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Wireless.V1.SimContext}\n   */\n  /* jshint ignore:end */\n  function SimListInstance(sid) {\n    return SimListInstance.get(sid);\n  }\n\n  SimListInstance._version = version;\n  // Path Solution\n  SimListInstance._solution = {};\n  SimListInstance._uri = `/Sims`;\n  /* jshint ignore:start */\n  /**\n   * Streams SimInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Wireless.V1.SimList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sim.status} [opts.status] - Only return Sim resources with this status\n   * @param {string} [opts.iccid] - Only return Sim resources with this ICCID\n   * @param {string} [opts.ratePlan] -\n   *          Only return Sim resources assigned to this RatePlan resource\n   * @param {string} [opts.eId] - Deprecated\n   * @param {string} [opts.simRegistrationCode] -\n   *          Only return Sim resources with this registration code\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  SimListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists SimInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Wireless.V1.SimList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sim.status} [opts.status] - Only return Sim resources with this status\n   * @param {string} [opts.iccid] - Only return Sim resources with this ICCID\n   * @param {string} [opts.ratePlan] -\n   *          Only return Sim resources assigned to this RatePlan resource\n   * @param {string} [opts.eId] - Deprecated\n   * @param {string} [opts.simRegistrationCode] -\n   *          Only return Sim resources with this registration code\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SimListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of SimInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Wireless.V1.SimList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sim.status} [opts.status] - Only return Sim resources with this status\n   * @param {string} [opts.iccid] - Only return Sim resources with this ICCID\n   * @param {string} [opts.ratePlan] -\n   *          Only return Sim resources assigned to this RatePlan resource\n   * @param {string} [opts.eId] - Deprecated\n   * @param {string} [opts.simRegistrationCode] -\n   *          Only return Sim resources with this registration code\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SimListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Status': _.get(opts, 'status'),\n      'Iccid': _.get(opts, 'iccid'),\n      'RatePlan': _.get(opts, 'ratePlan'),\n      'EId': _.get(opts, 'eId'),\n      'SimRegistrationCode': _.get(opts, 'simRegistrationCode'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new SimPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of SimInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Wireless.V1.SimList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SimListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new SimPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a sim\n   *\n   * @function get\n   * @memberof Twilio.Wireless.V1.SimList#\n   *\n   * @param {string} sid - The SID of the Sim resource to fetch\n   *\n   * @returns {Twilio.Wireless.V1.SimContext}\n   */\n  /* jshint ignore:end */\n  SimListInstance.get = function get(sid) {\n    return new SimContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Wireless.V1.SimList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  SimListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  SimListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return SimListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SimPage\n *\n * @constructor Twilio.Wireless.V1.SimPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {SimSolution} solution - Path solution\n *\n * @returns SimPage\n */\n/* jshint ignore:end */\nSimPage = function SimPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(SimPage.prototype, Page.prototype);\nSimPage.prototype.constructor = SimPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of SimInstance\n *\n * @function getInstance\n * @memberof Twilio.Wireless.V1.SimPage#\n *\n * @param {SimPayload} payload - Payload response from the API\n *\n * @returns SimInstance\n */\n/* jshint ignore:end */\nSimPage.prototype.getInstance = function getInstance(payload) {\n  return new SimInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Wireless.V1.SimPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSimPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nSimPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SimContext\n *\n * @constructor Twilio.Wireless.V1.SimInstance\n *\n * @property {string} sid - The unique string that identifies the Sim resource\n * @property {string} uniqueName -\n *          An application-defined string that uniquely identifies the resource\n * @property {string} accountSid -\n *          The SID of the Account to which the Sim resource belongs\n * @property {string} ratePlanSid -\n *          The SID of the RatePlan resource to which the Sim resource is assigned.\n * @property {string} friendlyName -\n *          The string that you assigned to describe the Sim resource\n * @property {string} iccid - The ICCID associated with the SIM\n * @property {string} eId - Deprecated\n * @property {sim.status} status - The status of the Sim resource\n * @property {sim.reset_status} resetStatus -\n *          The connectivity reset status of the SIM\n * @property {string} commandsCallbackUrl -\n *          The URL we call when the SIM originates a machine-to-machine Command\n * @property {string} commandsCallbackMethod -\n *          The HTTP method we use to call commands_callback_url\n * @property {string} smsFallbackMethod - Deprecated\n * @property {string} smsFallbackUrl - Deprecated\n * @property {string} smsMethod - Deprecated\n * @property {string} smsUrl - Deprecated\n * @property {string} voiceFallbackMethod -\n *          Deprecated. The HTTP method we use to call voice_fallback_url\n * @property {string} voiceFallbackUrl -\n *          Deprecated. The URL we call when an error occurs while retrieving or executing the TwiML requested from voice_url\n * @property {string} voiceMethod -\n *          Deprecated. The HTTP method we use to call voice_url\n * @property {string} voiceUrl -\n *          Deprecated. The URL we call when the SIM-connected device makes a voice call\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the Sim resource was last updated\n * @property {string} url - The absolute URL of the resource\n * @property {string} links - The URLs of related subresources\n * @property {string} ipAddress - Deprecated\n *\n * @param {V1} version - Version of the resource\n * @param {SimPayload} payload - The instance payload\n * @param {sid_like} sid - The SID of the Sim resource to fetch\n */\n/* jshint ignore:end */\nSimInstance = function SimInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.uniqueName = payload.unique_name; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.ratePlanSid = payload.rate_plan_sid; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.iccid = payload.iccid; // jshint ignore:line\n  this.eId = payload.e_id; // jshint ignore:line\n  this.status = payload.status; // jshint ignore:line\n  this.resetStatus = payload.reset_status; // jshint ignore:line\n  this.commandsCallbackUrl = payload.commands_callback_url; // jshint ignore:line\n  this.commandsCallbackMethod = payload.commands_callback_method; // jshint ignore:line\n  this.smsFallbackMethod = payload.sms_fallback_method; // jshint ignore:line\n  this.smsFallbackUrl = payload.sms_fallback_url; // jshint ignore:line\n  this.smsMethod = payload.sms_method; // jshint ignore:line\n  this.smsUrl = payload.sms_url; // jshint ignore:line\n  this.voiceFallbackMethod = payload.voice_fallback_method; // jshint ignore:line\n  this.voiceFallbackUrl = payload.voice_fallback_url; // jshint ignore:line\n  this.voiceMethod = payload.voice_method; // jshint ignore:line\n  this.voiceUrl = payload.voice_url; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.links = payload.links; // jshint ignore:line\n  this.ipAddress = payload.ip_address; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {sid: sid || this.sid, };\n};\n\nObject.defineProperty(SimInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new SimContext(this._version, this._solution.sid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a SimInstance\n *\n * @function fetch\n * @memberof Twilio.Wireless.V1.SimInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SimInstance\n */\n/* jshint ignore:end */\nSimInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a SimInstance\n *\n * @function update\n * @memberof Twilio.Wireless.V1.SimInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.uniqueName] -\n *          An application-defined string that uniquely identifies the resource\n * @param {string} [opts.callbackMethod] -\n *          The HTTP method we should use to call callback_url\n * @param {string} [opts.callbackUrl] -\n *          The URL we should call when the Sim resource has finished updating\n * @param {string} [opts.friendlyName] - A string to describe the Sim resource\n * @param {string} [opts.ratePlan] -\n *          The SID or unique name of the RatePlan resource to which the Sim resource should be assigned\n * @param {sim.status} [opts.status] - The new status of the Sim resource\n * @param {string} [opts.commandsCallbackMethod] -\n *          The HTTP method we should use to call commands_callback_url\n * @param {string} [opts.commandsCallbackUrl] -\n *          The URL we should call when the SIM sends a Command\n * @param {string} [opts.smsFallbackMethod] -\n *          The HTTP method we should use to call sms_fallback_url\n * @param {string} [opts.smsFallbackUrl] -\n *          The URL we should call when an error occurs while retrieving or executing the TwiML requested from sms_url\n * @param {string} [opts.smsMethod] - The HTTP method we should use to call sms_url\n * @param {string} [opts.smsUrl] -\n *          The URL we should call when the SIM-connected device sends an SMS message that is not a Command\n * @param {string} [opts.voiceFallbackMethod] - Deprecated\n * @param {string} [opts.voiceFallbackUrl] - Deprecated\n * @param {string} [opts.voiceMethod] - Deprecated\n * @param {string} [opts.voiceUrl] - Deprecated\n * @param {sim.reset_status} [opts.resetStatus] -\n *          Initiate a connectivity reset on a SIM\n * @param {string} [opts.accountSid] -\n *          The SID of the Account to which the Sim resource should belong\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SimInstance\n */\n/* jshint ignore:end */\nSimInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a SimInstance\n *\n * @function remove\n * @memberof Twilio.Wireless.V1.SimInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SimInstance\n */\n/* jshint ignore:end */\nSimInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the usageRecords\n *\n * @function usageRecords\n * @memberof Twilio.Wireless.V1.SimInstance#\n *\n * @returns {Twilio.Wireless.V1.SimContext.UsageRecordList}\n */\n/* jshint ignore:end */\nSimInstance.prototype.usageRecords = function usageRecords() {\n  return this._proxy.usageRecords;\n};\n\n/* jshint ignore:start */\n/**\n * Access the dataSessions\n *\n * @function dataSessions\n * @memberof Twilio.Wireless.V1.SimInstance#\n *\n * @returns {Twilio.Wireless.V1.SimContext.DataSessionList}\n */\n/* jshint ignore:end */\nSimInstance.prototype.dataSessions = function dataSessions() {\n  return this._proxy.dataSessions;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Wireless.V1.SimInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSimInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nSimInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SimContext\n *\n * @constructor Twilio.Wireless.V1.SimContext\n *\n * @property {Twilio.Wireless.V1.SimContext.UsageRecordList} usageRecords -\n *          usageRecords resource\n * @property {Twilio.Wireless.V1.SimContext.DataSessionList} dataSessions -\n *          dataSessions resource\n *\n * @param {V1} version - Version of the resource\n * @param {sid_like} sid - The SID of the Sim resource to fetch\n */\n/* jshint ignore:end */\nSimContext = function SimContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {sid: sid, };\n  this._uri = `/Sims/${sid}`;\n\n  // Dependents\n  this._usageRecords = undefined;\n  this._dataSessions = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a SimInstance\n *\n * @function fetch\n * @memberof Twilio.Wireless.V1.SimContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SimInstance\n */\n/* jshint ignore:end */\nSimContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new SimInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a SimInstance\n *\n * @function update\n * @memberof Twilio.Wireless.V1.SimContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.uniqueName] -\n *          An application-defined string that uniquely identifies the resource\n * @param {string} [opts.callbackMethod] -\n *          The HTTP method we should use to call callback_url\n * @param {string} [opts.callbackUrl] -\n *          The URL we should call when the Sim resource has finished updating\n * @param {string} [opts.friendlyName] - A string to describe the Sim resource\n * @param {string} [opts.ratePlan] -\n *          The SID or unique name of the RatePlan resource to which the Sim resource should be assigned\n * @param {sim.status} [opts.status] - The new status of the Sim resource\n * @param {string} [opts.commandsCallbackMethod] -\n *          The HTTP method we should use to call commands_callback_url\n * @param {string} [opts.commandsCallbackUrl] -\n *          The URL we should call when the SIM sends a Command\n * @param {string} [opts.smsFallbackMethod] -\n *          The HTTP method we should use to call sms_fallback_url\n * @param {string} [opts.smsFallbackUrl] -\n *          The URL we should call when an error occurs while retrieving or executing the TwiML requested from sms_url\n * @param {string} [opts.smsMethod] - The HTTP method we should use to call sms_url\n * @param {string} [opts.smsUrl] -\n *          The URL we should call when the SIM-connected device sends an SMS message that is not a Command\n * @param {string} [opts.voiceFallbackMethod] - Deprecated\n * @param {string} [opts.voiceFallbackUrl] - Deprecated\n * @param {string} [opts.voiceMethod] - Deprecated\n * @param {string} [opts.voiceUrl] - Deprecated\n * @param {sim.reset_status} [opts.resetStatus] -\n *          Initiate a connectivity reset on a SIM\n * @param {string} [opts.accountSid] -\n *          The SID of the Account to which the Sim resource should belong\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SimInstance\n */\n/* jshint ignore:end */\nSimContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'UniqueName': _.get(opts, 'uniqueName'),\n    'CallbackMethod': _.get(opts, 'callbackMethod'),\n    'CallbackUrl': _.get(opts, 'callbackUrl'),\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'RatePlan': _.get(opts, 'ratePlan'),\n    'Status': _.get(opts, 'status'),\n    'CommandsCallbackMethod': _.get(opts, 'commandsCallbackMethod'),\n    'CommandsCallbackUrl': _.get(opts, 'commandsCallbackUrl'),\n    'SmsFallbackMethod': _.get(opts, 'smsFallbackMethod'),\n    'SmsFallbackUrl': _.get(opts, 'smsFallbackUrl'),\n    'SmsMethod': _.get(opts, 'smsMethod'),\n    'SmsUrl': _.get(opts, 'smsUrl'),\n    'VoiceFallbackMethod': _.get(opts, 'voiceFallbackMethod'),\n    'VoiceFallbackUrl': _.get(opts, 'voiceFallbackUrl'),\n    'VoiceMethod': _.get(opts, 'voiceMethod'),\n    'VoiceUrl': _.get(opts, 'voiceUrl'),\n    'ResetStatus': _.get(opts, 'resetStatus'),\n    'AccountSid': _.get(opts, 'accountSid')\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new SimInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a SimInstance\n *\n * @function remove\n * @memberof Twilio.Wireless.V1.SimContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SimInstance\n */\n/* jshint ignore:end */\nSimContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(SimContext.prototype,\n  'usageRecords', {\n    get: function() {\n      if (!this._usageRecords) {\n        this._usageRecords = new UsageRecordList(this._version, this._solution.sid);\n      }\n      return this._usageRecords;\n    }\n});\n\nObject.defineProperty(SimContext.prototype,\n  'dataSessions', {\n    get: function() {\n      if (!this._dataSessions) {\n        this._dataSessions = new DataSessionList(this._version, this._solution.sid);\n      }\n      return this._dataSessions;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Wireless.V1.SimContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSimContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nSimContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  SimList: SimList,\n  SimPage: SimPage,\n  SimInstance: SimInstance,\n  SimContext: SimContext\n};\n"],"mappings":"AAAA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AAEA,IAAIA,CAAC,GAAGC,OAAO,CAAC,GAAD,CAAf;AAAuB;;;AACvB,IAAIC,CAAC,GAAGD,OAAO,CAAC,QAAD,CAAf;AAA4B;;;AAC5B,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAAlB;AAA6B;;;AAC7B,IAAIG,eAAe,GAAGH,OAAO,CAAC,mBAAD,CAAP,CAA6BG,eAAnD;;AACA,IAAIC,IAAI,GAAGJ,OAAO,CAAC,oBAAD,CAAlB;AAA2C;;;AAC3C,IAAIK,eAAe,GAAGL,OAAO,CAAC,mBAAD,CAAP,CAA6BK,eAAnD;;AACA,IAAIC,WAAW,GAAGN,OAAO,CACrB,2BADqB,CAAzB;AACmC;;;AACnC,IAAIO,MAAM,GAAGP,OAAO,CAAC,sBAAD,CAApB;AAA+C;;;AAE/C,IAAIQ,OAAJ;AACA,IAAIC,OAAJ;AACA,IAAIC,WAAJ;AACA,IAAIC,UAAJ;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACAH,OAAO,GAAG,SAASA,OAAT,CAAiBI,OAAjB,EAA0B;EAClC;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EACE;EACA,SAASC,eAAT,CAAyBC,GAAzB,EAA8B;IAC5B,OAAOD,eAAe,CAACE,GAAhB,CAAoBD,GAApB,CAAP;EACD;;EAEDD,eAAe,CAACG,QAAhB,GAA2BJ,OAA3B,CAfkC,CAgBlC;;EACAC,eAAe,CAACI,SAAhB,GAA4B,EAA5B;EACAJ,eAAe,CAACK,IAAhB,GAAwB,OAAxB;EACA;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE;;EACAL,eAAe,CAACM,IAAhB,GAAuB,SAASA,IAAT,CAAcC,IAAd,EAAoBC,QAApB,EAA8B;IACnD,IAAIpB,CAAC,CAACqB,UAAF,CAAaF,IAAb,CAAJ,EAAwB;MACtBC,QAAQ,GAAGD,IAAX;MACAA,IAAI,GAAG,EAAP;IACD;;IACDA,IAAI,GAAGA,IAAI,IAAI,EAAf;;IACA,IAAIA,IAAI,CAACC,QAAT,EAAmB;MACjBA,QAAQ,GAAGD,IAAI,CAACC,QAAhB;IACD;;IACD,IAAIpB,CAAC,CAACsB,WAAF,CAAcF,QAAd,CAAJ,EAA6B;MAC3B,MAAM,IAAIG,KAAJ,CAAU,oCAAV,CAAN;IACD;;IAED,IAAIC,IAAI,GAAG,KAAX;IACA,IAAIC,WAAW,GAAG,CAAlB;IACA,IAAIC,eAAe,GAAG,CAAtB;;IACA,IAAIC,MAAM,GAAG,KAAKZ,QAAL,CAAca,UAAd,CAAyB;MACpCC,KAAK,EAAEV,IAAI,CAACU,KADwB;MAEpCC,QAAQ,EAAEX,IAAI,CAACW;IAFqB,CAAzB,CAAb;;IAKA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;MACzBR,IAAI,GAAG,IAAP;;MACA,IAAIxB,CAAC,CAACqB,UAAF,CAAaF,IAAI,CAACK,IAAlB,CAAJ,EAA6B;QAC3BL,IAAI,CAACK,IAAL,CAAUQ,KAAV;MACD;IACF;;IAED,SAASC,aAAT,CAAuBC,EAAvB,EAA2B;MACzB,IAAIC,OAAO,GAAGD,EAAE,EAAhB;;MACA,IAAIlC,CAAC,CAACsB,WAAF,CAAca,OAAd,CAAJ,EAA4B;QAC1BJ,UAAU;QACV;MACD;;MAEDI,OAAO,CAACC,IAAR,CAAa,UAASC,IAAT,EAAe;QAC1BrC,CAAC,CAACkB,IAAF,CAAOmB,IAAI,CAACC,SAAZ,EAAuB,UAASC,QAAT,EAAmB;UACxC,IAAIf,IAAI,IAAK,CAACxB,CAAC,CAACsB,WAAF,CAAcH,IAAI,CAACU,KAAnB,CAAD,IAA8BH,eAAe,IAAIP,IAAI,CAACU,KAAnE,EAA2E;YACzEL,IAAI,GAAG,IAAP;YACA,OAAO,KAAP;UACD;;UAEDE,eAAe;UACfN,QAAQ,CAACmB,QAAD,EAAWR,UAAX,CAAR;QACD,CARD;;QAUA,IAAI,CAACP,IAAL,EAAW;UACTC,WAAW;UACXQ,aAAa,CAACjC,CAAC,CAACwC,IAAF,CAAOH,IAAI,CAACI,QAAZ,EAAsBJ,IAAtB,CAAD,CAAb;QACD,CAHD,MAGO;UACLN,UAAU;QACX;MACF,CAjBD;MAmBAI,OAAO,CAACO,KAAR,CAAcX,UAAd;IACD;;IAEDE,aAAa,CAACjC,CAAC,CAACwC,IAAF,CAAO,KAAKH,IAAZ,EAAkB,IAAlB,EAAwBrC,CAAC,CAAC2C,KAAF,CAAQxB,IAAR,EAAcQ,MAAd,CAAxB,CAAD,CAAb;EACD,CA1DD;EA4DA;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE;;;EACAf,eAAe,CAACgC,IAAhB,GAAuB,SAASA,IAAT,CAAczB,IAAd,EAAoBC,QAApB,EAA8B;IACnD,IAAIpB,CAAC,CAACqB,UAAF,CAAaF,IAAb,CAAJ,EAAwB;MACtBC,QAAQ,GAAGD,IAAX;MACAA,IAAI,GAAG,EAAP;IACD;;IACDA,IAAI,GAAGA,IAAI,IAAI,EAAf;IACA,IAAI0B,QAAQ,GAAG/C,CAAC,CAACgD,KAAF,EAAf;IACA,IAAIC,YAAY,GAAG,EAAnB;;IACA5B,IAAI,CAACC,QAAL,GAAgB,UAAS4B,QAAT,EAAmBxB,IAAnB,EAAyB;MACvCuB,YAAY,CAACE,IAAb,CAAkBD,QAAlB;;MAEA,IAAI,CAAChD,CAAC,CAACsB,WAAF,CAAcH,IAAI,CAACU,KAAnB,CAAD,IAA8BkB,YAAY,CAACG,MAAb,KAAwB/B,IAAI,CAACU,KAA/D,EAAsE;QACpEL,IAAI;MACL;IACF,CAND;;IAQAL,IAAI,CAACK,IAAL,GAAY,UAASQ,KAAT,EAAgB;MAC1B,IAAIhC,CAAC,CAACsB,WAAF,CAAcU,KAAd,CAAJ,EAA0B;QACxBa,QAAQ,CAACM,OAAT,CAAiBJ,YAAjB;MACD,CAFD,MAEO;QACLF,QAAQ,CAACO,MAAT,CAAgBpB,KAAhB;MACD;IACF,CAND;;IAQA,IAAIhC,CAAC,CAACqB,UAAF,CAAaD,QAAb,CAAJ,EAA4B;MAC1ByB,QAAQ,CAACV,OAAT,CAAiBkB,OAAjB,CAAyBjC,QAAzB;IACD;;IAED,KAAKF,IAAL,CAAUC,IAAV;IACA,OAAO0B,QAAQ,CAACV,OAAhB;EACD,CA9BD;EAgCA;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE;;;EACAvB,eAAe,CAACyB,IAAhB,GAAuB,SAASA,IAAT,CAAclB,IAAd,EAAoBC,QAApB,EAA8B;IACnD,IAAIpB,CAAC,CAACqB,UAAF,CAAaF,IAAb,CAAJ,EAAwB;MACtBC,QAAQ,GAAGD,IAAX;MACAA,IAAI,GAAG,EAAP;IACD;;IACDA,IAAI,GAAGA,IAAI,IAAI,EAAf;IAEA,IAAI0B,QAAQ,GAAG/C,CAAC,CAACgD,KAAF,EAAf;IACA,IAAIQ,IAAI,GAAGhD,MAAM,CAACiD,EAAP,CAAU;MACnB,UAAUvD,CAAC,CAACc,GAAF,CAAMK,IAAN,EAAY,QAAZ,CADS;MAEnB,SAASnB,CAAC,CAACc,GAAF,CAAMK,IAAN,EAAY,OAAZ,CAFU;MAGnB,YAAYnB,CAAC,CAACc,GAAF,CAAMK,IAAN,EAAY,UAAZ,CAHO;MAInB,OAAOnB,CAAC,CAACc,GAAF,CAAMK,IAAN,EAAY,KAAZ,CAJY;MAKnB,uBAAuBnB,CAAC,CAACc,GAAF,CAAMK,IAAN,EAAY,qBAAZ,CALJ;MAMnB,aAAaA,IAAI,CAACqC,SANC;MAOnB,QAAQrC,IAAI,CAACsC,UAPM;MAQnB,YAAYtC,IAAI,CAACW;IARE,CAAV,CAAX;;IAWA,IAAIK,OAAO,GAAG,KAAKpB,QAAL,CAAcsB,IAAd,CAAmB;MAACqB,GAAG,EAAE,KAAKzC,IAAX;MAAiB0C,MAAM,EAAE,KAAzB;MAAgCC,MAAM,EAAEN;IAAxC,CAAnB,CAAd;;IAEAnB,OAAO,GAAGA,OAAO,CAACC,IAAR,CAAa,UAASyB,OAAT,EAAkB;MACvChB,QAAQ,CAACM,OAAT,CAAiB,IAAI3C,OAAJ,CAAY,KAAKO,QAAjB,EAA2B8C,OAA3B,EAAoC,KAAK7C,SAAzC,CAAjB;IACD,CAFsB,CAErBwB,IAFqB,CAEhB,IAFgB,CAAb,CAAV;IAIAL,OAAO,CAACO,KAAR,CAAc,UAASV,KAAT,EAAgB;MAC5Ba,QAAQ,CAACO,MAAT,CAAgBpB,KAAhB;IACD,CAFD;;IAIA,IAAIhC,CAAC,CAACqB,UAAF,CAAaD,QAAb,CAAJ,EAA4B;MAC1ByB,QAAQ,CAACV,OAAT,CAAiBkB,OAAjB,CAAyBjC,QAAzB;IACD;;IAED,OAAOyB,QAAQ,CAACV,OAAhB;EACD,CAlCD;EAoCA;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE;;;EACAvB,eAAe,CAACkD,OAAhB,GAA0B,SAASA,OAAT,CAAiBC,SAAjB,EAA4B3C,QAA5B,EAAsC;IAC9D,IAAIyB,QAAQ,GAAG/C,CAAC,CAACgD,KAAF,EAAf;;IAEA,IAAIX,OAAO,GAAG,KAAKpB,QAAL,CAAciD,OAAd,CAAsBC,MAAtB,CAA6BC,OAA7B,CAAqC;MAACP,MAAM,EAAE,KAAT;MAAgBD,GAAG,EAAEK;IAArB,CAArC,CAAd;;IAEA5B,OAAO,GAAGA,OAAO,CAACC,IAAR,CAAa,UAASyB,OAAT,EAAkB;MACvChB,QAAQ,CAACM,OAAT,CAAiB,IAAI3C,OAAJ,CAAY,KAAKO,QAAjB,EAA2B8C,OAA3B,EAAoC,KAAK7C,SAAzC,CAAjB;IACD,CAFsB,CAErBwB,IAFqB,CAEhB,IAFgB,CAAb,CAAV;IAIAL,OAAO,CAACO,KAAR,CAAc,UAASV,KAAT,EAAgB;MAC5Ba,QAAQ,CAACO,MAAT,CAAgBpB,KAAhB;IACD,CAFD;;IAIA,IAAIhC,CAAC,CAACqB,UAAF,CAAaD,QAAb,CAAJ,EAA4B;MAC1ByB,QAAQ,CAACV,OAAT,CAAiBkB,OAAjB,CAAyBjC,QAAzB;IACD;;IAED,OAAOyB,QAAQ,CAACV,OAAhB;EACD,CAlBD;EAoBA;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE;;;EACAvB,eAAe,CAACE,GAAhB,GAAsB,SAASA,GAAT,CAAaD,GAAb,EAAkB;IACtC,OAAO,IAAIH,UAAJ,CAAe,KAAKK,QAApB,EAA8BF,GAA9B,CAAP;EACD,CAFD;EAIA;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EACE;;;EACAD,eAAe,CAACuD,MAAhB,GAAyB,SAASA,MAAT,GAAkB;IACzC,OAAO,KAAKnD,SAAZ;EACD,CAFD;;EAIAJ,eAAe,CAACX,IAAI,CAACmE,OAAL,CAAaC,MAAd,CAAf,GAAuC,SAASD,OAAT,CAAiBE,KAAjB,EAAwBC,OAAxB,EAAiC;IACtE,OAAOtE,IAAI,CAACmE,OAAL,CAAa,KAAKD,MAAL,EAAb,EAA4BI,OAA5B,CAAP;EACD,CAFD;;EAIA,OAAO3D,eAAP;AACD,CApUD;AAuUA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAJ,OAAO,GAAG,SAASA,OAAT,CAAiBG,OAAjB,EAA0B6D,QAA1B,EAAoCC,QAApC,EAA8C;EACtD;EACA,KAAKzD,SAAL,GAAiByD,QAAjB;EAEAtE,IAAI,CAACuE,SAAL,CAAeC,WAAf,CAA2BC,IAA3B,CAAgC,IAAhC,EAAsCjE,OAAtC,EAA+C6D,QAA/C,EAAyD,KAAKxD,SAA9D;AACD,CALD;;AAOAhB,CAAC,CAAC6E,MAAF,CAASrE,OAAO,CAACkE,SAAjB,EAA4BvE,IAAI,CAACuE,SAAjC;;AACAlE,OAAO,CAACkE,SAAR,CAAkBC,WAAlB,GAAgCnE,OAAhC;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACAA,OAAO,CAACkE,SAAR,CAAkBI,WAAlB,GAAgC,SAASA,WAAT,CAAqBjB,OAArB,EAA8B;EAC5D,OAAO,IAAIpD,WAAJ,CAAgB,KAAKM,QAArB,EAA+B8C,OAA/B,CAAP;AACD,CAFD;AAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACArD,OAAO,CAACkE,SAAR,CAAkBP,MAAlB,GAA2B,SAASA,MAAT,GAAkB;EAC3C,IAAIY,KAAK,GAAG,EAAZ;;EACA/E,CAAC,CAACgF,MAAF,CAAS,IAAT,EAAe,UAASC,KAAT,EAAgBC,GAAhB,EAAqB;IAClC,IAAI,CAAClF,CAAC,CAACmF,UAAF,CAAaD,GAAb,EAAkB,GAAlB,CAAD,IAA2B,CAAElF,CAAC,CAACqB,UAAF,CAAa4D,KAAb,CAAjC,EAAsD;MACpDF,KAAK,CAACG,GAAD,CAAL,GAAaD,KAAb;IACD;EACF,CAJD;;EAKA,OAAOF,KAAP;AACD,CARD;;AAUAvE,OAAO,CAACkE,SAAR,CAAkBzE,IAAI,CAACmE,OAAL,CAAaC,MAA/B,IAAyC,SAASD,OAAT,CAAiBE,KAAjB,EAAwBC,OAAxB,EAAiC;EACxE,OAAOtE,IAAI,CAACmE,OAAL,CAAa,KAAKD,MAAL,EAAb,EAA4BI,OAA5B,CAAP;AACD,CAFD;AAKA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA9D,WAAW,GAAG,SAASA,WAAT,CAAqBE,OAArB,EAA8BkD,OAA9B,EAAuChD,GAAvC,EAA4C;EACxD,KAAKE,QAAL,GAAgBJ,OAAhB,CADwD,CAGxD;;EACA,KAAKE,GAAL,GAAWgD,OAAO,CAAChD,GAAnB,CAJwD,CAIhC;;EACxB,KAAKuE,UAAL,GAAkBvB,OAAO,CAACwB,WAA1B,CALwD,CAKjB;;EACvC,KAAKC,UAAL,GAAkBzB,OAAO,CAAC0B,WAA1B,CANwD,CAMjB;;EACvC,KAAKC,WAAL,GAAmB3B,OAAO,CAAC4B,aAA3B,CAPwD,CAOd;;EAC1C,KAAKC,YAAL,GAAoB7B,OAAO,CAAC8B,aAA5B,CARwD,CAQb;;EAC3C,KAAKC,KAAL,GAAa/B,OAAO,CAAC+B,KAArB,CATwD,CAS5B;;EAC5B,KAAKC,GAAL,GAAWhC,OAAO,CAACiC,IAAnB,CAVwD,CAU/B;;EACzB,KAAKC,MAAL,GAAclC,OAAO,CAACkC,MAAtB,CAXwD,CAW1B;;EAC9B,KAAKC,WAAL,GAAmBnC,OAAO,CAACoC,YAA3B,CAZwD,CAYf;;EACzC,KAAKC,mBAAL,GAA2BrC,OAAO,CAACsC,qBAAnC,CAbwD,CAaE;;EAC1D,KAAKC,sBAAL,GAA8BvC,OAAO,CAACwC,wBAAtC,CAdwD,CAcQ;;EAChE,KAAKC,iBAAL,GAAyBzC,OAAO,CAAC0C,mBAAjC,CAfwD,CAeF;;EACtD,KAAKC,cAAL,GAAsB3C,OAAO,CAAC4C,gBAA9B,CAhBwD,CAgBR;;EAChD,KAAKC,SAAL,GAAiB7C,OAAO,CAAC8C,UAAzB,CAjBwD,CAiBnB;;EACrC,KAAKC,MAAL,GAAc/C,OAAO,CAACgD,OAAtB,CAlBwD,CAkBzB;;EAC/B,KAAKC,mBAAL,GAA2BjD,OAAO,CAACkD,qBAAnC,CAnBwD,CAmBE;;EAC1D,KAAKC,gBAAL,GAAwBnD,OAAO,CAACoD,kBAAhC,CApBwD,CAoBJ;;EACpD,KAAKC,WAAL,GAAmBrD,OAAO,CAACsD,YAA3B,CArBwD,CAqBf;;EACzC,KAAKC,QAAL,GAAgBvD,OAAO,CAACwD,SAAxB,CAtBwD,CAsBrB;;EACnC,KAAKC,WAAL,GAAmBjH,WAAW,CAACkH,eAAZ,CAA4B1D,OAAO,CAAC2D,YAApC,CAAnB,CAvBwD,CAuBc;;EACtE,KAAKC,WAAL,GAAmBpH,WAAW,CAACkH,eAAZ,CAA4B1D,OAAO,CAAC6D,YAApC,CAAnB,CAxBwD,CAwBc;;EACtE,KAAKC,GAAL,GAAW9D,OAAO,CAAC8D,GAAnB,CAzBwD,CAyBhC;;EACxB,KAAKC,KAAL,GAAa/D,OAAO,CAAC+D,KAArB,CA1BwD,CA0B5B;;EAC5B,KAAKC,SAAL,GAAiBhE,OAAO,CAACiE,UAAzB,CA3BwD,CA2BnB;EAErC;;EACA,KAAKC,QAAL,GAAgBC,SAAhB;EACA,KAAKhH,SAAL,GAAiB;IAACH,GAAG,EAAEA,GAAG,IAAI,KAAKA;EAAlB,CAAjB;AACD,CAhCD;;AAkCAoH,MAAM,CAACC,cAAP,CAAsBzH,WAAW,CAACiE,SAAlC,EACE,QADF,EACY;EACR5D,GAAG,EAAE,YAAW;IACd,IAAI,CAAC,KAAKiH,QAAV,EAAoB;MAClB,KAAKA,QAAL,GAAgB,IAAIrH,UAAJ,CAAe,KAAKK,QAApB,EAA8B,KAAKC,SAAL,CAAeH,GAA7C,CAAhB;IACD;;IAED,OAAO,KAAKkH,QAAZ;EACD;AAPO,CADZ;AAWA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACAtH,WAAW,CAACiE,SAAZ,CAAsByD,KAAtB,GAA8B,SAASA,KAAT,CAAe/G,QAAf,EAAyB;EACrD,OAAO,KAAKgH,MAAL,CAAYD,KAAZ,CAAkB/G,QAAlB,CAAP;AACD,CAFD;AAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAX,WAAW,CAACiE,SAAZ,CAAsB2D,MAAtB,GAA+B,SAASA,MAAT,CAAgBlH,IAAhB,EAAsBC,QAAtB,EAAgC;EAC7D,OAAO,KAAKgH,MAAL,CAAYC,MAAZ,CAAmBlH,IAAnB,EAAyBC,QAAzB,CAAP;AACD,CAFD;AAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAX,WAAW,CAACiE,SAAZ,CAAsB4D,MAAtB,GAA+B,SAASA,MAAT,CAAgBlH,QAAhB,EAA0B;EACvD,OAAO,KAAKgH,MAAL,CAAYE,MAAZ,CAAmBlH,QAAnB,CAAP;AACD,CAFD;AAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAX,WAAW,CAACiE,SAAZ,CAAsB6D,YAAtB,GAAqC,SAASA,YAAT,GAAwB;EAC3D,OAAO,KAAKH,MAAL,CAAYG,YAAnB;AACD,CAFD;AAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA9H,WAAW,CAACiE,SAAZ,CAAsB8D,YAAtB,GAAqC,SAASA,YAAT,GAAwB;EAC3D,OAAO,KAAKJ,MAAL,CAAYI,YAAnB;AACD,CAFD;AAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA/H,WAAW,CAACiE,SAAZ,CAAsBP,MAAtB,GAA+B,SAASA,MAAT,GAAkB;EAC/C,IAAIY,KAAK,GAAG,EAAZ;;EACA/E,CAAC,CAACgF,MAAF,CAAS,IAAT,EAAe,UAASC,KAAT,EAAgBC,GAAhB,EAAqB;IAClC,IAAI,CAAClF,CAAC,CAACmF,UAAF,CAAaD,GAAb,EAAkB,GAAlB,CAAD,IAA2B,CAAElF,CAAC,CAACqB,UAAF,CAAa4D,KAAb,CAAjC,EAAsD;MACpDF,KAAK,CAACG,GAAD,CAAL,GAAaD,KAAb;IACD;EACF,CAJD;;EAKA,OAAOF,KAAP;AACD,CARD;;AAUAtE,WAAW,CAACiE,SAAZ,CAAsBzE,IAAI,CAACmE,OAAL,CAAaC,MAAnC,IAA6C,SAASD,OAAT,CAAiBE,KAAjB,EAAwBC,OAAxB,EAAiC;EAC5E,OAAOtE,IAAI,CAACmE,OAAL,CAAa,KAAKD,MAAL,EAAb,EAA4BI,OAA5B,CAAP;AACD,CAFD;AAKA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA7D,UAAU,GAAG,SAASA,UAAT,CAAoBC,OAApB,EAA6BE,GAA7B,EAAkC;EAC7C,KAAKE,QAAL,GAAgBJ,OAAhB,CAD6C,CAG7C;;EACA,KAAKK,SAAL,GAAiB;IAACH,GAAG,EAAEA;EAAN,CAAjB;EACA,KAAKI,IAAL,GAAa,SAAQJ,GAAI,EAAzB,CAL6C,CAO7C;;EACA,KAAK4H,aAAL,GAAqBT,SAArB;EACA,KAAKU,aAAL,GAAqBV,SAArB;AACD,CAVD;AAYA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAtH,UAAU,CAACgE,SAAX,CAAqByD,KAArB,GAA6B,SAASA,KAAT,CAAe/G,QAAf,EAAyB;EACpD,IAAIyB,QAAQ,GAAG/C,CAAC,CAACgD,KAAF,EAAf;;EACA,IAAIX,OAAO,GAAG,KAAKpB,QAAL,CAAcoH,KAAd,CAAoB;IAACzE,GAAG,EAAE,KAAKzC,IAAX;IAAiB0C,MAAM,EAAE;EAAzB,CAApB,CAAd;;EAEAxB,OAAO,GAAGA,OAAO,CAACC,IAAR,CAAa,UAASyB,OAAT,EAAkB;IACvChB,QAAQ,CAACM,OAAT,CAAiB,IAAI1C,WAAJ,CAAgB,KAAKM,QAArB,EAA+B8C,OAA/B,EAAwC,KAAK7C,SAAL,CAAeH,GAAvD,CAAjB;EACD,CAFsB,CAErB2B,IAFqB,CAEhB,IAFgB,CAAb,CAAV;EAIAL,OAAO,CAACO,KAAR,CAAc,UAASV,KAAT,EAAgB;IAC5Ba,QAAQ,CAACO,MAAT,CAAgBpB,KAAhB;EACD,CAFD;;EAIA,IAAIhC,CAAC,CAACqB,UAAF,CAAaD,QAAb,CAAJ,EAA4B;IAC1ByB,QAAQ,CAACV,OAAT,CAAiBkB,OAAjB,CAAyBjC,QAAzB;EACD;;EAED,OAAOyB,QAAQ,CAACV,OAAhB;AACD,CAjBD;AAmBA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAzB,UAAU,CAACgE,SAAX,CAAqB2D,MAArB,GAA8B,SAASA,MAAT,CAAgBlH,IAAhB,EAAsBC,QAAtB,EAAgC;EAC5D,IAAIpB,CAAC,CAACqB,UAAF,CAAaF,IAAb,CAAJ,EAAwB;IACtBC,QAAQ,GAAGD,IAAX;IACAA,IAAI,GAAG,EAAP;EACD;;EACDA,IAAI,GAAGA,IAAI,IAAI,EAAf;EAEA,IAAI0B,QAAQ,GAAG/C,CAAC,CAACgD,KAAF,EAAf;EACA,IAAIQ,IAAI,GAAGhD,MAAM,CAACiD,EAAP,CAAU;IACnB,cAAcvD,CAAC,CAACc,GAAF,CAAMK,IAAN,EAAY,YAAZ,CADK;IAEnB,kBAAkBnB,CAAC,CAACc,GAAF,CAAMK,IAAN,EAAY,gBAAZ,CAFC;IAGnB,eAAenB,CAAC,CAACc,GAAF,CAAMK,IAAN,EAAY,aAAZ,CAHI;IAInB,gBAAgBnB,CAAC,CAACc,GAAF,CAAMK,IAAN,EAAY,cAAZ,CAJG;IAKnB,YAAYnB,CAAC,CAACc,GAAF,CAAMK,IAAN,EAAY,UAAZ,CALO;IAMnB,UAAUnB,CAAC,CAACc,GAAF,CAAMK,IAAN,EAAY,QAAZ,CANS;IAOnB,0BAA0BnB,CAAC,CAACc,GAAF,CAAMK,IAAN,EAAY,wBAAZ,CAPP;IAQnB,uBAAuBnB,CAAC,CAACc,GAAF,CAAMK,IAAN,EAAY,qBAAZ,CARJ;IASnB,qBAAqBnB,CAAC,CAACc,GAAF,CAAMK,IAAN,EAAY,mBAAZ,CATF;IAUnB,kBAAkBnB,CAAC,CAACc,GAAF,CAAMK,IAAN,EAAY,gBAAZ,CAVC;IAWnB,aAAanB,CAAC,CAACc,GAAF,CAAMK,IAAN,EAAY,WAAZ,CAXM;IAYnB,UAAUnB,CAAC,CAACc,GAAF,CAAMK,IAAN,EAAY,QAAZ,CAZS;IAanB,uBAAuBnB,CAAC,CAACc,GAAF,CAAMK,IAAN,EAAY,qBAAZ,CAbJ;IAcnB,oBAAoBnB,CAAC,CAACc,GAAF,CAAMK,IAAN,EAAY,kBAAZ,CAdD;IAenB,eAAenB,CAAC,CAACc,GAAF,CAAMK,IAAN,EAAY,aAAZ,CAfI;IAgBnB,YAAYnB,CAAC,CAACc,GAAF,CAAMK,IAAN,EAAY,UAAZ,CAhBO;IAiBnB,eAAenB,CAAC,CAACc,GAAF,CAAMK,IAAN,EAAY,aAAZ,CAjBI;IAkBnB,cAAcnB,CAAC,CAACc,GAAF,CAAMK,IAAN,EAAY,YAAZ;EAlBK,CAAV,CAAX;;EAqBA,IAAIgB,OAAO,GAAG,KAAKpB,QAAL,CAAcsH,MAAd,CAAqB;IAAC3E,GAAG,EAAE,KAAKzC,IAAX;IAAiB0C,MAAM,EAAE,MAAzB;IAAiCL,IAAI,EAAEA;EAAvC,CAArB,CAAd;;EAEAnB,OAAO,GAAGA,OAAO,CAACC,IAAR,CAAa,UAASyB,OAAT,EAAkB;IACvChB,QAAQ,CAACM,OAAT,CAAiB,IAAI1C,WAAJ,CAAgB,KAAKM,QAArB,EAA+B8C,OAA/B,EAAwC,KAAK7C,SAAL,CAAeH,GAAvD,CAAjB;EACD,CAFsB,CAErB2B,IAFqB,CAEhB,IAFgB,CAAb,CAAV;EAIAL,OAAO,CAACO,KAAR,CAAc,UAASV,KAAT,EAAgB;IAC5Ba,QAAQ,CAACO,MAAT,CAAgBpB,KAAhB;EACD,CAFD;;EAIA,IAAIhC,CAAC,CAACqB,UAAF,CAAaD,QAAb,CAAJ,EAA4B;IAC1ByB,QAAQ,CAACV,OAAT,CAAiBkB,OAAjB,CAAyBjC,QAAzB;EACD;;EAED,OAAOyB,QAAQ,CAACV,OAAhB;AACD,CA5CD;AA8CA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAzB,UAAU,CAACgE,SAAX,CAAqB4D,MAArB,GAA8B,SAASA,MAAT,CAAgBlH,QAAhB,EAA0B;EACtD,IAAIyB,QAAQ,GAAG/C,CAAC,CAACgD,KAAF,EAAf;;EACA,IAAIX,OAAO,GAAG,KAAKpB,QAAL,CAAcuH,MAAd,CAAqB;IAAC5E,GAAG,EAAE,KAAKzC,IAAX;IAAiB0C,MAAM,EAAE;EAAzB,CAArB,CAAd;;EAEAxB,OAAO,GAAGA,OAAO,CAACC,IAAR,CAAa,UAASyB,OAAT,EAAkB;IACvChB,QAAQ,CAACM,OAAT,CAAiBU,OAAjB;EACD,CAFsB,CAErBrB,IAFqB,CAEhB,IAFgB,CAAb,CAAV;EAIAL,OAAO,CAACO,KAAR,CAAc,UAASV,KAAT,EAAgB;IAC5Ba,QAAQ,CAACO,MAAT,CAAgBpB,KAAhB;EACD,CAFD;;EAIA,IAAIhC,CAAC,CAACqB,UAAF,CAAaD,QAAb,CAAJ,EAA4B;IAC1ByB,QAAQ,CAACV,OAAT,CAAiBkB,OAAjB,CAAyBjC,QAAzB;EACD;;EAED,OAAOyB,QAAQ,CAACV,OAAhB;AACD,CAjBD;;AAmBA8F,MAAM,CAACC,cAAP,CAAsBxH,UAAU,CAACgE,SAAjC,EACE,cADF,EACkB;EACd5D,GAAG,EAAE,YAAW;IACd,IAAI,CAAC,KAAK2H,aAAV,EAAyB;MACvB,KAAKA,aAAL,GAAqB,IAAIrI,eAAJ,CAAoB,KAAKW,QAAzB,EAAmC,KAAKC,SAAL,CAAeH,GAAlD,CAArB;IACD;;IACD,OAAO,KAAK4H,aAAZ;EACD;AANa,CADlB;AAUAR,MAAM,CAACC,cAAP,CAAsBxH,UAAU,CAACgE,SAAjC,EACE,cADF,EACkB;EACd5D,GAAG,EAAE,YAAW;IACd,IAAI,CAAC,KAAK4H,aAAV,EAAyB;MACvB,KAAKA,aAAL,GAAqB,IAAIxI,eAAJ,CAAoB,KAAKa,QAAzB,EAAmC,KAAKC,SAAL,CAAeH,GAAlD,CAArB;IACD;;IACD,OAAO,KAAK6H,aAAZ;EACD;AANa,CADlB;AAUA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACAhI,UAAU,CAACgE,SAAX,CAAqBP,MAArB,GAA8B,SAASA,MAAT,GAAkB;EAC9C,OAAO,KAAKnD,SAAZ;AACD,CAFD;;AAIAN,UAAU,CAACgE,SAAX,CAAqBzE,IAAI,CAACmE,OAAL,CAAaC,MAAlC,IAA4C,SAASD,OAAT,CAAiBE,KAAjB,EAAwBC,OAAxB,EAAiC;EAC3E,OAAOtE,IAAI,CAACmE,OAAL,CAAa,KAAKD,MAAL,EAAb,EAA4BI,OAA5B,CAAP;AACD,CAFD;;AAIAoE,MAAM,CAACC,OAAP,GAAiB;EACfrI,OAAO,EAAEA,OADM;EAEfC,OAAO,EAAEA,OAFM;EAGfC,WAAW,EAAEA,WAHE;EAIfC,UAAU,EAAEA;AAJG,CAAjB"},"metadata":{},"sourceType":"script"}