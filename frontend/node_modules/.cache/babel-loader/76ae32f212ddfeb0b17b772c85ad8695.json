{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar CertificateList = require('./fleet/certificate').CertificateList;\n\nvar DeploymentList = require('./fleet/deployment').DeploymentList;\n\nvar DeviceList = require('./fleet/device').DeviceList;\n\nvar KeyList = require('./fleet/key').KeyList;\n\nvar Page = require('../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../base/values');\n/* jshint ignore:line */\n\n\nvar FleetList;\nvar FleetPage;\nvar FleetInstance;\nvar FleetContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the FleetList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.DeployedDevices.FleetList\n *\n * @param {Twilio.Preview.DeployedDevices} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nFleetList = function FleetList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function fleets\n   * @memberof Twilio.Preview.DeployedDevices#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.DeployedDevices.FleetContext}\n   */\n\n  /* jshint ignore:end */\n  function FleetListInstance(sid) {\n    return FleetListInstance.get(sid);\n  }\n\n  FleetListInstance._version = version; // Path Solution\n\n  FleetListInstance._solution = {};\n  FleetListInstance._uri = `/Fleets`;\n  /* jshint ignore:start */\n\n  /**\n   * create a FleetInstance\n   *\n   * @function create\n   * @memberof Twilio.Preview.DeployedDevices.FleetList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] -\n   *          A human readable description for this Fleet.\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed FleetInstance\n   */\n\n  /* jshint ignore:end */\n\n  FleetListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new FleetInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Streams FleetInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Preview.DeployedDevices.FleetList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n\n  FleetListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists FleetInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Preview.DeployedDevices.FleetList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  FleetListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of FleetInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Preview.DeployedDevices.FleetList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  FleetListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new FleetPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of FleetInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Preview.DeployedDevices.FleetList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  FleetListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new FleetPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a fleet\n   *\n   * @function get\n   * @memberof Twilio.Preview.DeployedDevices.FleetList#\n   *\n   * @param {string} sid - A string that uniquely identifies the Fleet.\n   *\n   * @returns {Twilio.Preview.DeployedDevices.FleetContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  FleetListInstance.get = function get(sid) {\n    return new FleetContext(this._version, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.DeployedDevices.FleetList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  FleetListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  FleetListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return FleetListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the FleetPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.DeployedDevices.FleetPage\n *\n * @param {DeployedDevices} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {FleetSolution} solution - Path solution\n *\n * @returns FleetPage\n */\n\n/* jshint ignore:end */\n\n\nFleetPage = function FleetPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(FleetPage.prototype, Page.prototype);\n\nFleetPage.prototype.constructor = FleetPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of FleetInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.DeployedDevices.FleetPage#\n *\n * @param {FleetPayload} payload - Payload response from the API\n *\n * @returns FleetInstance\n */\n\n/* jshint ignore:end */\n\nFleetPage.prototype.getInstance = function getInstance(payload) {\n  return new FleetInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.DeployedDevices.FleetPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nFleetPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nFleetPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the FleetContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.DeployedDevices.FleetInstance\n *\n * @property {string} sid - A string that uniquely identifies this Fleet.\n * @property {string} url - URL of this Fleet.\n * @property {string} uniqueName - A unique, addressable name of this Fleet.\n * @property {string} friendlyName - A human readable description for this Fleet.\n * @property {string} accountSid - The unique SID that identifies this Account.\n * @property {string} defaultDeploymentSid -\n *          The unique SID that identifies this Fleet's default Deployment.\n * @property {Date} dateCreated - The date this Fleet was created.\n * @property {Date} dateUpdated - The date this Fleet was updated.\n * @property {string} links - Nested resource URLs.\n *\n * @param {DeployedDevices} version - Version of the resource\n * @param {FleetPayload} payload - The instance payload\n * @param {sid_like} sid - A string that uniquely identifies the Fleet.\n */\n\n/* jshint ignore:end */\n\n\nFleetInstance = function FleetInstance(version, payload, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n\n  this.uniqueName = payload.unique_name; // jshint ignore:line\n\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.defaultDeploymentSid = payload.default_deployment_sid; // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n\n  this.links = payload.links; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(FleetInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new FleetContext(this._version, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a FleetInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.DeployedDevices.FleetInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FleetInstance\n */\n\n/* jshint ignore:end */\n\nFleetInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * remove a FleetInstance\n *\n * @function remove\n * @memberof Twilio.Preview.DeployedDevices.FleetInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FleetInstance\n */\n\n/* jshint ignore:end */\n\n\nFleetInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n/* jshint ignore:start */\n\n/**\n * update a FleetInstance\n *\n * @function update\n * @memberof Twilio.Preview.DeployedDevices.FleetInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] -\n *          A human readable description for this Fleet.\n * @param {string} [opts.defaultDeploymentSid] - A default Deployment SID.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FleetInstance\n */\n\n/* jshint ignore:end */\n\n\nFleetInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Access the devices\n *\n * @function devices\n * @memberof Twilio.Preview.DeployedDevices.FleetInstance#\n *\n * @returns {Twilio.Preview.DeployedDevices.FleetContext.DeviceList}\n */\n\n/* jshint ignore:end */\n\n\nFleetInstance.prototype.devices = function devices() {\n  return this._proxy.devices;\n};\n/* jshint ignore:start */\n\n/**\n * Access the deployments\n *\n * @function deployments\n * @memberof Twilio.Preview.DeployedDevices.FleetInstance#\n *\n * @returns {Twilio.Preview.DeployedDevices.FleetContext.DeploymentList}\n */\n\n/* jshint ignore:end */\n\n\nFleetInstance.prototype.deployments = function deployments() {\n  return this._proxy.deployments;\n};\n/* jshint ignore:start */\n\n/**\n * Access the certificates\n *\n * @function certificates\n * @memberof Twilio.Preview.DeployedDevices.FleetInstance#\n *\n * @returns {Twilio.Preview.DeployedDevices.FleetContext.CertificateList}\n */\n\n/* jshint ignore:end */\n\n\nFleetInstance.prototype.certificates = function certificates() {\n  return this._proxy.certificates;\n};\n/* jshint ignore:start */\n\n/**\n * Access the keys\n *\n * @function keys\n * @memberof Twilio.Preview.DeployedDevices.FleetInstance#\n *\n * @returns {Twilio.Preview.DeployedDevices.FleetContext.KeyList}\n */\n\n/* jshint ignore:end */\n\n\nFleetInstance.prototype.keys = function keys() {\n  return this._proxy.keys;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.DeployedDevices.FleetInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nFleetInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nFleetInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the FleetContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.DeployedDevices.FleetContext\n *\n * @property {Twilio.Preview.DeployedDevices.FleetContext.DeviceList} devices -\n *          devices resource\n * @property {Twilio.Preview.DeployedDevices.FleetContext.DeploymentList} deployments -\n *          deployments resource\n * @property {Twilio.Preview.DeployedDevices.FleetContext.CertificateList} certificates -\n *          certificates resource\n * @property {Twilio.Preview.DeployedDevices.FleetContext.KeyList} keys -\n *          keys resource\n *\n * @param {DeployedDevices} version - Version of the resource\n * @param {sid_like} sid - A string that uniquely identifies the Fleet.\n */\n\n/* jshint ignore:end */\n\n\nFleetContext = function FleetContext(version, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    sid: sid\n  };\n  this._uri = `/Fleets/${sid}`; // Dependents\n\n  this._devices = undefined;\n  this._deployments = undefined;\n  this._certificates = undefined;\n  this._keys = undefined;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a FleetInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.DeployedDevices.FleetContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FleetInstance\n */\n\n/* jshint ignore:end */\n\n\nFleetContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new FleetInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * remove a FleetInstance\n *\n * @function remove\n * @memberof Twilio.Preview.DeployedDevices.FleetContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FleetInstance\n */\n\n/* jshint ignore:end */\n\n\nFleetContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * update a FleetInstance\n *\n * @function update\n * @memberof Twilio.Preview.DeployedDevices.FleetContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] -\n *          A human readable description for this Fleet.\n * @param {string} [opts.defaultDeploymentSid] - A default Deployment SID.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FleetInstance\n */\n\n/* jshint ignore:end */\n\n\nFleetContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'DefaultDeploymentSid': _.get(opts, 'defaultDeploymentSid')\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new FleetInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(FleetContext.prototype, 'devices', {\n  get: function () {\n    if (!this._devices) {\n      this._devices = new DeviceList(this._version, this._solution.sid);\n    }\n\n    return this._devices;\n  }\n});\nObject.defineProperty(FleetContext.prototype, 'deployments', {\n  get: function () {\n    if (!this._deployments) {\n      this._deployments = new DeploymentList(this._version, this._solution.sid);\n    }\n\n    return this._deployments;\n  }\n});\nObject.defineProperty(FleetContext.prototype, 'certificates', {\n  get: function () {\n    if (!this._certificates) {\n      this._certificates = new CertificateList(this._version, this._solution.sid);\n    }\n\n    return this._certificates;\n  }\n});\nObject.defineProperty(FleetContext.prototype, 'keys', {\n  get: function () {\n    if (!this._keys) {\n      this._keys = new KeyList(this._version, this._solution.sid);\n    }\n\n    return this._keys;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.DeployedDevices.FleetContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\nFleetContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nFleetContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  FleetList: FleetList,\n  FleetPage: FleetPage,\n  FleetInstance: FleetInstance,\n  FleetContext: FleetContext\n};","map":{"version":3,"names":["Q","require","_","util","CertificateList","DeploymentList","DeviceList","KeyList","Page","deserialize","values","FleetList","FleetPage","FleetInstance","FleetContext","version","FleetListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isFunction","deferred","defer","data","of","promise","uri","method","then","payload","resolve","bind","catch","error","reject","nodeify","each","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","fetchNextPage","fn","page","instances","instance","nextPage","merge","list","allResources","resource","push","length","pageToken","pageNumber","params","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","url","uniqueName","unique_name","friendlyName","friendly_name","accountSid","account_sid","defaultDeploymentSid","default_deployment_sid","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","links","_context","undefined","Object","defineProperty","fetch","_proxy","remove","update","devices","deployments","certificates","keys","_devices","_deployments","_certificates","_keys","module","exports"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/twilio/lib/rest/preview/deployed_devices/fleet.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar CertificateList = require('./fleet/certificate').CertificateList;\nvar DeploymentList = require('./fleet/deployment').DeploymentList;\nvar DeviceList = require('./fleet/device').DeviceList;\nvar KeyList = require('./fleet/key').KeyList;\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar FleetList;\nvar FleetPage;\nvar FleetInstance;\nvar FleetContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the FleetList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.DeployedDevices.FleetList\n *\n * @param {Twilio.Preview.DeployedDevices} version - Version of the resource\n */\n/* jshint ignore:end */\nFleetList = function FleetList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function fleets\n   * @memberof Twilio.Preview.DeployedDevices#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.DeployedDevices.FleetContext}\n   */\n  /* jshint ignore:end */\n  function FleetListInstance(sid) {\n    return FleetListInstance.get(sid);\n  }\n\n  FleetListInstance._version = version;\n  // Path Solution\n  FleetListInstance._solution = {};\n  FleetListInstance._uri = `/Fleets`;\n  /* jshint ignore:start */\n  /**\n   * create a FleetInstance\n   *\n   * @function create\n   * @memberof Twilio.Preview.DeployedDevices.FleetList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] -\n   *          A human readable description for this Fleet.\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed FleetInstance\n   */\n  /* jshint ignore:end */\n  FleetListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({'FriendlyName': _.get(opts, 'friendlyName')});\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new FleetInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams FleetInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Preview.DeployedDevices.FleetList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  FleetListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists FleetInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Preview.DeployedDevices.FleetList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  FleetListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of FleetInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Preview.DeployedDevices.FleetList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  FleetListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new FleetPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of FleetInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Preview.DeployedDevices.FleetList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  FleetListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new FleetPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a fleet\n   *\n   * @function get\n   * @memberof Twilio.Preview.DeployedDevices.FleetList#\n   *\n   * @param {string} sid - A string that uniquely identifies the Fleet.\n   *\n   * @returns {Twilio.Preview.DeployedDevices.FleetContext}\n   */\n  /* jshint ignore:end */\n  FleetListInstance.get = function get(sid) {\n    return new FleetContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.DeployedDevices.FleetList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  FleetListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  FleetListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return FleetListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the FleetPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.DeployedDevices.FleetPage\n *\n * @param {DeployedDevices} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {FleetSolution} solution - Path solution\n *\n * @returns FleetPage\n */\n/* jshint ignore:end */\nFleetPage = function FleetPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(FleetPage.prototype, Page.prototype);\nFleetPage.prototype.constructor = FleetPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of FleetInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.DeployedDevices.FleetPage#\n *\n * @param {FleetPayload} payload - Payload response from the API\n *\n * @returns FleetInstance\n */\n/* jshint ignore:end */\nFleetPage.prototype.getInstance = function getInstance(payload) {\n  return new FleetInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.DeployedDevices.FleetPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFleetPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nFleetPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the FleetContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.DeployedDevices.FleetInstance\n *\n * @property {string} sid - A string that uniquely identifies this Fleet.\n * @property {string} url - URL of this Fleet.\n * @property {string} uniqueName - A unique, addressable name of this Fleet.\n * @property {string} friendlyName - A human readable description for this Fleet.\n * @property {string} accountSid - The unique SID that identifies this Account.\n * @property {string} defaultDeploymentSid -\n *          The unique SID that identifies this Fleet's default Deployment.\n * @property {Date} dateCreated - The date this Fleet was created.\n * @property {Date} dateUpdated - The date this Fleet was updated.\n * @property {string} links - Nested resource URLs.\n *\n * @param {DeployedDevices} version - Version of the resource\n * @param {FleetPayload} payload - The instance payload\n * @param {sid_like} sid - A string that uniquely identifies the Fleet.\n */\n/* jshint ignore:end */\nFleetInstance = function FleetInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.uniqueName = payload.unique_name; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.defaultDeploymentSid = payload.default_deployment_sid; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.links = payload.links; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {sid: sid || this.sid, };\n};\n\nObject.defineProperty(FleetInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new FleetContext(this._version, this._solution.sid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a FleetInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.DeployedDevices.FleetInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FleetInstance\n */\n/* jshint ignore:end */\nFleetInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a FleetInstance\n *\n * @function remove\n * @memberof Twilio.Preview.DeployedDevices.FleetInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FleetInstance\n */\n/* jshint ignore:end */\nFleetInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a FleetInstance\n *\n * @function update\n * @memberof Twilio.Preview.DeployedDevices.FleetInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] -\n *          A human readable description for this Fleet.\n * @param {string} [opts.defaultDeploymentSid] - A default Deployment SID.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FleetInstance\n */\n/* jshint ignore:end */\nFleetInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Access the devices\n *\n * @function devices\n * @memberof Twilio.Preview.DeployedDevices.FleetInstance#\n *\n * @returns {Twilio.Preview.DeployedDevices.FleetContext.DeviceList}\n */\n/* jshint ignore:end */\nFleetInstance.prototype.devices = function devices() {\n  return this._proxy.devices;\n};\n\n/* jshint ignore:start */\n/**\n * Access the deployments\n *\n * @function deployments\n * @memberof Twilio.Preview.DeployedDevices.FleetInstance#\n *\n * @returns {Twilio.Preview.DeployedDevices.FleetContext.DeploymentList}\n */\n/* jshint ignore:end */\nFleetInstance.prototype.deployments = function deployments() {\n  return this._proxy.deployments;\n};\n\n/* jshint ignore:start */\n/**\n * Access the certificates\n *\n * @function certificates\n * @memberof Twilio.Preview.DeployedDevices.FleetInstance#\n *\n * @returns {Twilio.Preview.DeployedDevices.FleetContext.CertificateList}\n */\n/* jshint ignore:end */\nFleetInstance.prototype.certificates = function certificates() {\n  return this._proxy.certificates;\n};\n\n/* jshint ignore:start */\n/**\n * Access the keys\n *\n * @function keys\n * @memberof Twilio.Preview.DeployedDevices.FleetInstance#\n *\n * @returns {Twilio.Preview.DeployedDevices.FleetContext.KeyList}\n */\n/* jshint ignore:end */\nFleetInstance.prototype.keys = function keys() {\n  return this._proxy.keys;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.DeployedDevices.FleetInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFleetInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nFleetInstance.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the FleetContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.DeployedDevices.FleetContext\n *\n * @property {Twilio.Preview.DeployedDevices.FleetContext.DeviceList} devices -\n *          devices resource\n * @property {Twilio.Preview.DeployedDevices.FleetContext.DeploymentList} deployments -\n *          deployments resource\n * @property {Twilio.Preview.DeployedDevices.FleetContext.CertificateList} certificates -\n *          certificates resource\n * @property {Twilio.Preview.DeployedDevices.FleetContext.KeyList} keys -\n *          keys resource\n *\n * @param {DeployedDevices} version - Version of the resource\n * @param {sid_like} sid - A string that uniquely identifies the Fleet.\n */\n/* jshint ignore:end */\nFleetContext = function FleetContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {sid: sid, };\n  this._uri = `/Fleets/${sid}`;\n\n  // Dependents\n  this._devices = undefined;\n  this._deployments = undefined;\n  this._certificates = undefined;\n  this._keys = undefined;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a FleetInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.DeployedDevices.FleetContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FleetInstance\n */\n/* jshint ignore:end */\nFleetContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new FleetInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a FleetInstance\n *\n * @function remove\n * @memberof Twilio.Preview.DeployedDevices.FleetContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FleetInstance\n */\n/* jshint ignore:end */\nFleetContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a FleetInstance\n *\n * @function update\n * @memberof Twilio.Preview.DeployedDevices.FleetContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] -\n *          A human readable description for this Fleet.\n * @param {string} [opts.defaultDeploymentSid] - A default Deployment SID.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed FleetInstance\n */\n/* jshint ignore:end */\nFleetContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'DefaultDeploymentSid': _.get(opts, 'defaultDeploymentSid')\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new FleetInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\nObject.defineProperty(FleetContext.prototype,\n  'devices', {\n    get: function() {\n      if (!this._devices) {\n        this._devices = new DeviceList(this._version, this._solution.sid);\n      }\n      return this._devices;\n    }\n});\n\nObject.defineProperty(FleetContext.prototype,\n  'deployments', {\n    get: function() {\n      if (!this._deployments) {\n        this._deployments = new DeploymentList(this._version, this._solution.sid);\n      }\n      return this._deployments;\n    }\n});\n\nObject.defineProperty(FleetContext.prototype,\n  'certificates', {\n    get: function() {\n      if (!this._certificates) {\n        this._certificates = new CertificateList(this._version, this._solution.sid);\n      }\n      return this._certificates;\n    }\n});\n\nObject.defineProperty(FleetContext.prototype,\n  'keys', {\n    get: function() {\n      if (!this._keys) {\n        this._keys = new KeyList(this._version, this._solution.sid);\n      }\n      return this._keys;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.DeployedDevices.FleetContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nFleetContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nFleetContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  FleetList: FleetList,\n  FleetPage: FleetPage,\n  FleetInstance: FleetInstance,\n  FleetContext: FleetContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}