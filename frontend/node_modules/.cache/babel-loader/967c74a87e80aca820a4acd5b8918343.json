{"ast":null,"code":"// Generated by CoffeeScript 2.4.1\n(function () {\n  var NodeType, XMLCharacterData, XMLText;\n  NodeType = require('./NodeType');\n  XMLCharacterData = require('./XMLCharacterData'); // Represents a text node\n\n  module.exports = XMLText = function () {\n    class XMLText extends XMLCharacterData {\n      // Initializes a new instance of `XMLText`\n      // `text` element text\n      constructor(parent, text) {\n        super(parent);\n\n        if (text == null) {\n          throw new Error(\"Missing element text. \" + this.debugInfo());\n        }\n\n        this.name = \"#text\";\n        this.type = NodeType.Text;\n        this.value = this.stringify.text(text);\n      } // Creates and returns a deep clone of `this`\n\n\n      clone() {\n        return Object.create(this);\n      } // Converts the XML fragment to string\n      // `options.pretty` pretty prints the result\n      // `options.indent` indentation for pretty print\n      // `options.offset` how many indentations to add to every line for pretty print\n      // `options.newline` newline sequence for pretty print\n\n\n      toString(options) {\n        return this.options.writer.text(this, this.options.writer.filterOptions(options));\n      } // DOM level 1 functions to be implemented later\n\n\n      splitText(offset) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      } // DOM level 3 functions to be implemented later\n\n\n      replaceWholeText(content) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n    }\n\n    ; // DOM level 3\n\n    Object.defineProperty(XMLText.prototype, 'isElementContentWhitespace', {\n      get: function () {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n    Object.defineProperty(XMLText.prototype, 'wholeText', {\n      get: function () {\n        var next, prev, str;\n        str = '';\n        prev = this.previousSibling;\n\n        while (prev) {\n          str = prev.data + str;\n          prev = prev.previousSibling;\n        }\n\n        str += this.data;\n        next = this.nextSibling;\n\n        while (next) {\n          str = str + next.data;\n          next = next.nextSibling;\n        }\n\n        return str;\n      }\n    });\n    return XMLText;\n  }.call(this);\n}).call(this);","map":{"version":3,"names":["NodeType","XMLCharacterData","XMLText","require","module","exports","constructor","parent","text","Error","debugInfo","name","type","Text","value","stringify","clone","Object","create","toString","options","writer","filterOptions","splitText","offset","replaceWholeText","content","defineProperty","prototype","get","next","prev","str","previousSibling","data","nextSibling","call"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/xmlbuilder/lib/XMLText.js"],"sourcesContent":["// Generated by CoffeeScript 2.4.1\n(function() {\n  var NodeType, XMLCharacterData, XMLText;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  // Represents a text node\n  module.exports = XMLText = (function() {\n    class XMLText extends XMLCharacterData {\n      // Initializes a new instance of `XMLText`\n\n      // `text` element text\n      constructor(parent, text) {\n        super(parent);\n        if (text == null) {\n          throw new Error(\"Missing element text. \" + this.debugInfo());\n        }\n        this.name = \"#text\";\n        this.type = NodeType.Text;\n        this.value = this.stringify.text(text);\n      }\n\n      // Creates and returns a deep clone of `this`\n      clone() {\n        return Object.create(this);\n      }\n\n      // Converts the XML fragment to string\n\n      // `options.pretty` pretty prints the result\n      // `options.indent` indentation for pretty print\n      // `options.offset` how many indentations to add to every line for pretty print\n      // `options.newline` newline sequence for pretty print\n      toString(options) {\n        return this.options.writer.text(this, this.options.writer.filterOptions(options));\n      }\n\n      // DOM level 1 functions to be implemented later\n      splitText(offset) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n      // DOM level 3 functions to be implemented later\n      replaceWholeText(content) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n\n    };\n\n    // DOM level 3\n    Object.defineProperty(XMLText.prototype, 'isElementContentWhitespace', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLText.prototype, 'wholeText', {\n      get: function() {\n        var next, prev, str;\n        str = '';\n        prev = this.previousSibling;\n        while (prev) {\n          str = prev.data + str;\n          prev = prev.previousSibling;\n        }\n        str += this.data;\n        next = this.nextSibling;\n        while (next) {\n          str = str + next.data;\n          next = next.nextSibling;\n        }\n        return str;\n      }\n    });\n\n    return XMLText;\n\n  }).call(this);\n\n}).call(this);\n"],"mappings":"AAAA;AACA,CAAC,YAAW;EACV,IAAIA,QAAJ,EAAcC,gBAAd,EAAgCC,OAAhC;EAEAF,QAAQ,GAAGG,OAAO,CAAC,YAAD,CAAlB;EAEAF,gBAAgB,GAAGE,OAAO,CAAC,oBAAD,CAA1B,CALU,CAOV;;EACAC,MAAM,CAACC,OAAP,GAAiBH,OAAO,GAAI,YAAW;IACrC,MAAMA,OAAN,SAAsBD,gBAAtB,CAAuC;MACrC;MAEA;MACAK,WAAW,CAACC,MAAD,EAASC,IAAT,EAAe;QACxB,MAAMD,MAAN;;QACA,IAAIC,IAAI,IAAI,IAAZ,EAAkB;UAChB,MAAM,IAAIC,KAAJ,CAAU,2BAA2B,KAAKC,SAAL,EAArC,CAAN;QACD;;QACD,KAAKC,IAAL,GAAY,OAAZ;QACA,KAAKC,IAAL,GAAYZ,QAAQ,CAACa,IAArB;QACA,KAAKC,KAAL,GAAa,KAAKC,SAAL,CAAeP,IAAf,CAAoBA,IAApB,CAAb;MACD,CAZoC,CAcrC;;;MACAQ,KAAK,GAAG;QACN,OAAOC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAP;MACD,CAjBoC,CAmBrC;MAEA;MACA;MACA;MACA;;;MACAC,QAAQ,CAACC,OAAD,EAAU;QAChB,OAAO,KAAKA,OAAL,CAAaC,MAAb,CAAoBb,IAApB,CAAyB,IAAzB,EAA+B,KAAKY,OAAL,CAAaC,MAAb,CAAoBC,aAApB,CAAkCF,OAAlC,CAA/B,CAAP;MACD,CA3BoC,CA6BrC;;;MACAG,SAAS,CAACC,MAAD,EAAS;QAChB,MAAM,IAAIf,KAAJ,CAAU,wCAAwC,KAAKC,SAAL,EAAlD,CAAN;MACD,CAhCoC,CAkCrC;;;MACAe,gBAAgB,CAACC,OAAD,EAAU;QACxB,MAAM,IAAIjB,KAAJ,CAAU,wCAAwC,KAAKC,SAAL,EAAlD,CAAN;MACD;;IArCoC;;IAuCtC,CAxCoC,CA0CrC;;IACAO,MAAM,CAACU,cAAP,CAAsBzB,OAAO,CAAC0B,SAA9B,EAAyC,4BAAzC,EAAuE;MACrEC,GAAG,EAAE,YAAW;QACd,MAAM,IAAIpB,KAAJ,CAAU,wCAAwC,KAAKC,SAAL,EAAlD,CAAN;MACD;IAHoE,CAAvE;IAMAO,MAAM,CAACU,cAAP,CAAsBzB,OAAO,CAAC0B,SAA9B,EAAyC,WAAzC,EAAsD;MACpDC,GAAG,EAAE,YAAW;QACd,IAAIC,IAAJ,EAAUC,IAAV,EAAgBC,GAAhB;QACAA,GAAG,GAAG,EAAN;QACAD,IAAI,GAAG,KAAKE,eAAZ;;QACA,OAAOF,IAAP,EAAa;UACXC,GAAG,GAAGD,IAAI,CAACG,IAAL,GAAYF,GAAlB;UACAD,IAAI,GAAGA,IAAI,CAACE,eAAZ;QACD;;QACDD,GAAG,IAAI,KAAKE,IAAZ;QACAJ,IAAI,GAAG,KAAKK,WAAZ;;QACA,OAAOL,IAAP,EAAa;UACXE,GAAG,GAAGA,GAAG,GAAGF,IAAI,CAACI,IAAjB;UACAJ,IAAI,GAAGA,IAAI,CAACK,WAAZ;QACD;;QACD,OAAOH,GAAP;MACD;IAhBmD,CAAtD;IAmBA,OAAO9B,OAAP;EAED,CAtE0B,CAsExBkC,IAtEwB,CAsEnB,IAtEmB,CAA3B;AAwED,CAhFD,EAgFGA,IAhFH,CAgFQ,IAhFR"},"metadata":{},"sourceType":"script"}