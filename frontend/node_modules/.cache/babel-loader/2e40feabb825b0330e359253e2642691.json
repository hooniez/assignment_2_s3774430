{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar SinkValidateList;\nvar SinkValidatePage;\nvar SinkValidateInstance;\n/* jshint ignore:start */\n\n/**\n * Initialize the SinkValidateList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Events.V1.SinkContext.SinkValidateList\n *\n * @param {Twilio.Events.V1} version - Version of the resource\n * @param {string} sid - A string that uniquely identifies this Sink.\n */\n\n/* jshint ignore:end */\n\nSinkValidateList = function SinkValidateList(version, sid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function sinkValidate\n   * @memberof Twilio.Events.V1.SinkContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Events.V1.SinkContext.SinkValidateContext}\n   */\n\n  /* jshint ignore:end */\n  function SinkValidateListInstance(sid) {\n    return SinkValidateListInstance.get(sid);\n  }\n\n  SinkValidateListInstance._version = version; // Path Solution\n\n  SinkValidateListInstance._solution = {\n    sid: sid\n  };\n  SinkValidateListInstance._uri = `/Sinks/${sid}/Validate`;\n  /* jshint ignore:start */\n\n  /**\n   * create a SinkValidateInstance\n   *\n   * @function create\n   * @memberof Twilio.Events.V1.SinkContext.SinkValidateList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.testId -\n   *          A string that uniquely identifies the test event for a Sink being validated.\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed SinkValidateInstance\n   */\n\n  /* jshint ignore:end */\n\n  SinkValidateListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n\n    if (_.isUndefined(opts['testId'])) {\n      throw new Error('Required parameter \"opts[\\'testId\\']\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'TestId': _.get(opts, 'testId')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new SinkValidateInstance(this._version, payload));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Events.V1.SinkContext.SinkValidateList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  SinkValidateListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  SinkValidateListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return SinkValidateListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the SinkValidatePage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Events.V1.SinkContext.SinkValidatePage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {SinkValidateSolution} solution - Path solution\n *\n * @returns SinkValidatePage\n */\n\n/* jshint ignore:end */\n\n\nSinkValidatePage = function SinkValidatePage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(SinkValidatePage.prototype, Page.prototype);\n\nSinkValidatePage.prototype.constructor = SinkValidatePage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of SinkValidateInstance\n *\n * @function getInstance\n * @memberof Twilio.Events.V1.SinkContext.SinkValidatePage#\n *\n * @param {SinkValidatePayload} payload - Payload response from the API\n *\n * @returns SinkValidateInstance\n */\n\n/* jshint ignore:end */\n\nSinkValidatePage.prototype.getInstance = function getInstance(payload) {\n  return new SinkValidateInstance(this._version, payload, this._solution.sid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Events.V1.SinkContext.SinkValidatePage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nSinkValidatePage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nSinkValidatePage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the SinkValidateContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Events.V1.SinkContext.SinkValidateInstance\n *\n * @property {string} result -\n *          Feedback indicating whether the given Sink was validated.\n *\n * @param {V1} version - Version of the resource\n * @param {SinkValidatePayload} payload - The instance payload\n * @param {sid} sid - A string that uniquely identifies this Sink.\n */\n\n/* jshint ignore:end */\n\n\nSinkValidateInstance = function SinkValidateInstance(version, payload, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.result = payload.result; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    sid: sid\n  };\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Events.V1.SinkContext.SinkValidateInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nSinkValidateInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nSinkValidateInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  SinkValidateList: SinkValidateList,\n  SinkValidatePage: SinkValidatePage,\n  SinkValidateInstance: SinkValidateInstance\n};","map":{"version":3,"names":["Q","require","_","util","Page","values","SinkValidateList","SinkValidatePage","SinkValidateInstance","version","sid","SinkValidateListInstance","get","_version","_solution","_uri","create","opts","callback","isUndefined","Error","deferred","defer","data","of","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","result","_context","undefined","module","exports"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/twilio/lib/rest/events/v1/sink/sinkValidate.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar SinkValidateList;\nvar SinkValidatePage;\nvar SinkValidateInstance;\n\n/* jshint ignore:start */\n/**\n * Initialize the SinkValidateList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Events.V1.SinkContext.SinkValidateList\n *\n * @param {Twilio.Events.V1} version - Version of the resource\n * @param {string} sid - A string that uniquely identifies this Sink.\n */\n/* jshint ignore:end */\nSinkValidateList = function SinkValidateList(version, sid) {\n  /* jshint ignore:start */\n  /**\n   * @function sinkValidate\n   * @memberof Twilio.Events.V1.SinkContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Events.V1.SinkContext.SinkValidateContext}\n   */\n  /* jshint ignore:end */\n  function SinkValidateListInstance(sid) {\n    return SinkValidateListInstance.get(sid);\n  }\n\n  SinkValidateListInstance._version = version;\n  // Path Solution\n  SinkValidateListInstance._solution = {sid: sid};\n  SinkValidateListInstance._uri = `/Sinks/${sid}/Validate`;\n  /* jshint ignore:start */\n  /**\n   * create a SinkValidateInstance\n   *\n   * @function create\n   * @memberof Twilio.Events.V1.SinkContext.SinkValidateList#\n   *\n   * @param {object} opts - Options for request\n   * @param {string} opts.testId -\n   *          A string that uniquely identifies the test event for a Sink being validated.\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed SinkValidateInstance\n   */\n  /* jshint ignore:end */\n  SinkValidateListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts['testId'])) {\n      throw new Error('Required parameter \"opts[\\'testId\\']\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({'TestId': _.get(opts, 'testId')});\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new SinkValidateInstance(this._version, payload));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Events.V1.SinkContext.SinkValidateList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  SinkValidateListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  SinkValidateListInstance[util.inspect.custom] = function inspect(depth, options)\n      {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return SinkValidateListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SinkValidatePage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Events.V1.SinkContext.SinkValidatePage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {SinkValidateSolution} solution - Path solution\n *\n * @returns SinkValidatePage\n */\n/* jshint ignore:end */\nSinkValidatePage = function SinkValidatePage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(SinkValidatePage.prototype, Page.prototype);\nSinkValidatePage.prototype.constructor = SinkValidatePage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of SinkValidateInstance\n *\n * @function getInstance\n * @memberof Twilio.Events.V1.SinkContext.SinkValidatePage#\n *\n * @param {SinkValidatePayload} payload - Payload response from the API\n *\n * @returns SinkValidateInstance\n */\n/* jshint ignore:end */\nSinkValidatePage.prototype.getInstance = function getInstance(payload) {\n  return new SinkValidateInstance(this._version, payload, this._solution.sid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Events.V1.SinkContext.SinkValidatePage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSinkValidatePage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nSinkValidatePage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SinkValidateContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Events.V1.SinkContext.SinkValidateInstance\n *\n * @property {string} result -\n *          Feedback indicating whether the given Sink was validated.\n *\n * @param {V1} version - Version of the resource\n * @param {SinkValidatePayload} payload - The instance payload\n * @param {sid} sid - A string that uniquely identifies this Sink.\n */\n/* jshint ignore:end */\nSinkValidateInstance = function SinkValidateInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.result = payload.result; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {sid: sid, };\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Events.V1.SinkContext.SinkValidateInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSinkValidateInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nSinkValidateInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  SinkValidateList: SinkValidateList,\n  SinkValidatePage: SinkValidatePage,\n  SinkValidateInstance: SinkValidateInstance\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}