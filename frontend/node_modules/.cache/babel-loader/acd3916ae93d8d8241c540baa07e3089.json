{"ast":null,"code":"var _jsxFileName = \"/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/SignUpMFA.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst axios = require(\"axios\");\n\nexport default function SignUpMFA() {\n  _s();\n\n  const [qrcodeSrc, setQrcodeSrc] = React.useState(\"\");\n  const url = \"https://google-authenticator.p.rapidapi.com\";\n  const apiKey = \"414bc5d180msh86e5db53aea8bbcp1bcd81jsn6915fb5401f0\";\n\n  async function getQrCode() {\n    let options = {\n      method: \"GET\",\n      url: url + \"/new_v2/\",\n      headers: {\n        \"X-RapidAPI-Key\": apiKey,\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\"\n      }\n    };\n    const res = await axios.request(options);\n    res.data;\n  }\n\n  test(); // React.useEffect(() => {\n  //   // options for the initial request to get a secret key\n  //   let options = {\n  //     method: \"GET\",\n  //     url: url + \"/new_v2/\",\n  //     headers: {\n  //       \"X-RapidAPI-Key\": apiKey,\n  //       \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\",\n  //     },\n  //   };\n  //   axios.request(options)\n  //   // axios\n  //   // .request(options)\n  //   // .then(function (response) {\n  //   //   // Re-define options again to make a request to get a QR code.\n  //   //   options = {\n  //   //     method: \"GET\",\n  //   //     url: url + \"/enroll/\",\n  //   //     params: {\n  //   //       secret: response.data,\n  //   //       issuer: \"lan\",\n  //   //       account: \"JohnDoe\",\n  //   //     },\n  //   //     headers: {\n  //   //       \"X-RapidAPI-Key\":\n  //   //         apiKey,\n  //   //       \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\",\n  //   //     },\n  //   //   };\n  //   // })\n  //   // .then(function (data) {\n  //   //   axios\n  //   //     .request(options)\n  //   //     .then(function (response) {\n  //   //       setQrcodeSrc(response.data);\n  //   //     })\n  //   //     .catch(function (error) {\n  //   //       console.error(error);\n  //   //     });\n  //   // })\n  //   // .catch(function (error) {\n  //   //   console.error(error);\n  //   // });\n  // }, []);\n  // Make a GET request\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Scan the barcode from Google Authenticator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), \";\", /*#__PURE__*/_jsxDEV(\"img\", {\n      src: qrcodeSrc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SignUpMFA, \"GWntSopSV4wRHhDtPigF/BRUlpk=\");\n\n_c = SignUpMFA;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpMFA\");","map":{"version":3,"names":["React","axios","require","SignUpMFA","qrcodeSrc","setQrcodeSrc","useState","url","apiKey","getQrCode","options","method","headers","res","request","data","test"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/SignUpMFA.js"],"sourcesContent":["import * as React from \"react\";\nconst axios = require(\"axios\");\n\nexport default function SignUpMFA() {\n  const [qrcodeSrc, setQrcodeSrc] = React.useState(\"\");\n  const url = \"https://google-authenticator.p.rapidapi.com\";\n  const apiKey = \"414bc5d180msh86e5db53aea8bbcp1bcd81jsn6915fb5401f0\";\n\n  async function getQrCode() {\n    let options = {\n      method: \"GET\",\n      url: url + \"/new_v2/\",\n      headers: {\n        \"X-RapidAPI-Key\": apiKey,\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\",\n      },\n    };\n    const res = await axios.request(options);\n    \n    res.data\n  }\n\n  test();\n\n  // React.useEffect(() => {\n  //   // options for the initial request to get a secret key\n  //   let options = {\n  //     method: \"GET\",\n  //     url: url + \"/new_v2/\",\n  //     headers: {\n  //       \"X-RapidAPI-Key\": apiKey,\n  //       \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\",\n  //     },\n  //   };\n\n  //   axios.request(options)\n\n  //   // axios\n  //   // .request(options)\n  //   // .then(function (response) {\n  //   //   // Re-define options again to make a request to get a QR code.\n  //   //   options = {\n  //   //     method: \"GET\",\n  //   //     url: url + \"/enroll/\",\n  //   //     params: {\n  //   //       secret: response.data,\n  //   //       issuer: \"lan\",\n  //   //       account: \"JohnDoe\",\n  //   //     },\n  //   //     headers: {\n  //   //       \"X-RapidAPI-Key\":\n  //   //         apiKey,\n  //   //       \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\",\n  //   //     },\n  //   //   };\n\n  //   // })\n  //   // .then(function (data) {\n\n  //   //   axios\n  //   //     .request(options)\n  //   //     .then(function (response) {\n  //   //       setQrcodeSrc(response.data);\n  //   //     })\n  //   //     .catch(function (error) {\n  //   //       console.error(error);\n  //   //     });\n  //   // })\n  //   // .catch(function (error) {\n  //   //   console.error(error);\n  //   // });\n\n  // }, []);\n  // Make a GET request\n\n  return (\n    <>\n      <h1>Scan the barcode from Google Authenticator</h1>;\n      <img src={qrcodeSrc} />\n    </>\n  );\n}\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,eAAe,SAASC,SAAT,GAAqB;EAAA;;EAClC,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,KAAK,CAACM,QAAN,CAAe,EAAf,CAAlC;EACA,MAAMC,GAAG,GAAG,6CAAZ;EACA,MAAMC,MAAM,GAAG,oDAAf;;EAEA,eAAeC,SAAf,GAA2B;IACzB,IAAIC,OAAO,GAAG;MACZC,MAAM,EAAE,KADI;MAEZJ,GAAG,EAAEA,GAAG,GAAG,UAFC;MAGZK,OAAO,EAAE;QACP,kBAAkBJ,MADX;QAEP,mBAAmB;MAFZ;IAHG,CAAd;IAQA,MAAMK,GAAG,GAAG,MAAMZ,KAAK,CAACa,OAAN,CAAcJ,OAAd,CAAlB;IAEAG,GAAG,CAACE,IAAJ;EACD;;EAEDC,IAAI,GAnB8B,CAqBlC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;;EAEA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,oBAEE;MAAK,GAAG,EAAEZ;IAAV;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAMD;;GA9EuBD,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}