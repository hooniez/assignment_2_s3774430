{"ast":null,"code":"var _jsxFileName = \"/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/SignUpMFA.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst axios = require(\"axios\");\n\nexport default function SignUpMFA() {\n  _s();\n\n  const [qrcodeSrc, setQrcodeSrc] = React.useState(\"\");\n  const url = \"https://google-authenticator.p.rapidapi.com\";\n  const apiKey = React.useEffect(() => {\n    // options for the initial request to get a secret key\n    let options = {\n      method: \"GET\",\n      url: url + \"/new_v2/\",\n      headers: {\n        \"X-RapidAPI-Key\": \"414bc5d180msh86e5db53aea8bbcp1bcd81jsn6915fb5401f0\",\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\"\n      }\n    };\n    axios.request(options).then(function (response) {\n      console.log(response.data);\n    }).then(function (data) {\n      options = {\n        method: \"GET\",\n        url: \"https://google-authenticator.p.rapidapi.com/enroll/\",\n        params: {\n          secret: \"GXPTBCTI4DX4UFJB\",\n          issuer: \"AcmeCorp\",\n          account: \"JohnDoe\"\n        },\n        headers: {\n          \"X-RapidAPI-Key\": \"414bc5d180msh86e5db53aea8bbcp1bcd81jsn6915fb5401f0\",\n          \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\"\n        }\n      };\n      axios.request(options).then(function (response) {\n        setQrcodeSrc(response.data);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }, []); // Make a GET request\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Scan the barcode from Google Authenticator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), \";\", /*#__PURE__*/_jsxDEV(\"img\", {\n      src: qrcodeSrc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SignUpMFA, \"xfjj/7QfGVjqCHBC/cMNCak/Igg=\");\n\n_c = SignUpMFA;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpMFA\");","map":{"version":3,"names":["React","axios","require","SignUpMFA","qrcodeSrc","setQrcodeSrc","useState","url","apiKey","useEffect","options","method","headers","request","then","response","console","log","data","params","secret","issuer","account","catch","error"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/SignUpMFA.js"],"sourcesContent":["import * as React from \"react\";\nconst axios = require(\"axios\");\n\nexport default function SignUpMFA() {\n  const [qrcodeSrc, setQrcodeSrc] = React.useState(\"\");\n  const url = \"https://google-authenticator.p.rapidapi.com\";\n  const apiKey = \n\n  React.useEffect(() => {\n    // options for the initial request to get a secret key\n    let options = {\n      method: \"GET\",\n      url: url + \"/new_v2/\",\n      headers: {\n        \"X-RapidAPI-Key\": \"414bc5d180msh86e5db53aea8bbcp1bcd81jsn6915fb5401f0\",\n        \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\",\n      },\n    };\n\n    axios\n    .request(options)\n    .then(function (response) {\n      console.log(response.data);\n    })\n    .then(function (data) {\n      options = {\n        method: \"GET\",\n        url: \"https://google-authenticator.p.rapidapi.com/enroll/\",\n        params: {\n          secret: \"GXPTBCTI4DX4UFJB\",\n          issuer: \"AcmeCorp\",\n          account: \"JohnDoe\",\n        },\n        headers: {\n          \"X-RapidAPI-Key\":\n            \"414bc5d180msh86e5db53aea8bbcp1bcd81jsn6915fb5401f0\",\n          \"X-RapidAPI-Host\": \"google-authenticator.p.rapidapi.com\",\n        },\n      };\n\n      axios\n        .request(options)\n        .then(function (response) {\n          setQrcodeSrc(response.data);\n        })\n        .catch(function (error) {\n          console.error(error);\n        });\n    })\n    .catch(function (error) {\n      console.error(error);\n    });\n\n  }, []);\n  // Make a GET request\n\n\n  \n\n  \n\n  \n\n  return (\n    <>\n      <h1>Scan the barcode from Google Authenticator</h1>;\n      <img src={qrcodeSrc} />\n    </>\n  );\n}\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,eAAe,SAASC,SAAT,GAAqB;EAAA;;EAClC,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,KAAK,CAACM,QAAN,CAAe,EAAf,CAAlC;EACA,MAAMC,GAAG,GAAG,6CAAZ;EACA,MAAMC,MAAM,GAEZR,KAAK,CAACS,SAAN,CAAgB,MAAM;IACpB;IACA,IAAIC,OAAO,GAAG;MACZC,MAAM,EAAE,KADI;MAEZJ,GAAG,EAAEA,GAAG,GAAG,UAFC;MAGZK,OAAO,EAAE;QACP,kBAAkB,oDADX;QAEP,mBAAmB;MAFZ;IAHG,CAAd;IASAX,KAAK,CACJY,OADD,CACSH,OADT,EAECI,IAFD,CAEM,UAAUC,QAAV,EAAoB;MACxBC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;IACD,CAJD,EAKCJ,IALD,CAKM,UAAUI,IAAV,EAAgB;MACpBR,OAAO,GAAG;QACRC,MAAM,EAAE,KADA;QAERJ,GAAG,EAAE,qDAFG;QAGRY,MAAM,EAAE;UACNC,MAAM,EAAE,kBADF;UAENC,MAAM,EAAE,UAFF;UAGNC,OAAO,EAAE;QAHH,CAHA;QAQRV,OAAO,EAAE;UACP,kBACE,oDAFK;UAGP,mBAAmB;QAHZ;MARD,CAAV;MAeAX,KAAK,CACFY,OADH,CACWH,OADX,EAEGI,IAFH,CAEQ,UAAUC,QAAV,EAAoB;QACxBV,YAAY,CAACU,QAAQ,CAACG,IAAV,CAAZ;MACD,CAJH,EAKGK,KALH,CAKS,UAAUC,KAAV,EAAiB;QACtBR,OAAO,CAACQ,KAAR,CAAcA,KAAd;MACD,CAPH;IAQD,CA7BD,EA8BCD,KA9BD,CA8BO,UAAUC,KAAV,EAAiB;MACtBR,OAAO,CAACQ,KAAR,CAAcA,KAAd;IACD,CAhCD;EAkCD,CA7CD,EA6CG,EA7CH,CAFA,CAHkC,CAmDlC;;EASA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,oBAEE;MAAK,GAAG,EAAEpB;IAAV;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAMD;;GAlEuBD,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}