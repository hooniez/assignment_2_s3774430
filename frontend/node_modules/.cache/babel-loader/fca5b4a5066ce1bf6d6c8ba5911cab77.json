{"ast":null,"code":"var _jsxFileName = \"/Users/hooniesun/rmit/fwp/assessment1/lan/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useReducer } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Footer from \"./UI/Footer\";\nimport NavigationBar from \"./UI/NavigationBar\";\nimport { Outlet } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst userReducer = (state, action) => {\n  switch (action.type) {\n    case \"SIGNUP_USER\":\n      return { ...state,\n        data: action.payload,\n        isLoggedIn: true\n      };\n\n    case \"SIGNIN_USER\":\n      return { ...state,\n        data: action.payload,\n        isLoggedIn: true\n      };\n\n    case \"SIGNOUT_USER\":\n      return { ...state,\n        data: null,\n        isLoggedIn: false\n      };\n\n    case \"EDIT_USER\":\n      return { ...state,\n        data: action.payload\n      };\n\n    case \"DELETE_USER\":\n      return { ...state,\n        isLoggedIn: false\n      };\n    // case \"SET_IS_DELETED\":\n    //   return {\n    //     ...state,\n    //     isDeleted: false,\n    //   };\n\n    case \"ADD_POST\":\n      return { ...state,\n        data: { ...state.data,\n          posts: [...state.data.posts, action.payload]\n        }\n      };\n\n    case \"DELETE_POST\":\n      return { ...state,\n        data: { ...state.data,\n          posts: state.data.posts.filter(post => post != action.payload)\n        }\n      };\n\n    default:\n      throw new Error();\n  }\n};\n\nfunction App() {\n  _s();\n\n  var _JSON$parse;\n\n  const [user, dispatchUser] = useReducer(userReducer, {\n    data: JSON.parse(sessionStorage.getItem(\"user\")),\n    isLoggedIn: sessionStorage.getItem(\"user\") !== null\n  }); // a mock database holding informaiton on users\n\n  const [users, setUsers] = useState((_JSON$parse = JSON.parse(localStorage.getItem(\"users\"))) !== null && _JSON$parse !== void 0 ? _JSON$parse : {});\n\n  const deleteUser = email => {\n    delete users[email];\n    setUsers({ ...users\n    });\n  }; // If user logs in, push user to sessionStorage.\n  // If user logs out, pop user from sessionStorage.\n\n\n  useEffect(() => {\n    if (user.isLoggedIn) {\n      sessionStorage.setItem(\"user\", JSON.stringify(user.data));\n    } else {\n      sessionStorage.removeItem(\"user\");\n    }\n  }, [user.isLoggedIn]); // Whenever there is a change in user.data\n\n  useEffect(() => {\n    if (user.data) {\n      sessionStorage.setItem(\"user\", JSON.stringify(user.data));\n      users[user.data.email] = user.data;\n      setUsers({ ...users\n      });\n    } else {\n      // user.data changes to null when the user logs out\n      sessionStorage.removeItem(\"user\");\n    }\n  }, [user.data]); // Whenever there is a change in users\n\n  useEffect(() => {\n    localStorage.setItem(\"users\", JSON.stringify(users));\n  }, [users]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavigationBar, {\n      isLoggedIn: user.isLoggedIn,\n      dispatchUser: dispatchUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {\n      context: [user, dispatchUser, users, deleteUser]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"b/t6wC18ii5wE8SyDGIeQ4vGQG0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useReducer","Footer","NavigationBar","Outlet","userReducer","state","action","type","data","payload","isLoggedIn","posts","filter","post","Error","App","user","dispatchUser","JSON","parse","sessionStorage","getItem","users","setUsers","localStorage","deleteUser","email","setItem","stringify","removeItem"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/src/App.js"],"sourcesContent":["import { useState, useEffect, useReducer } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Footer from \"./UI/Footer\";\nimport NavigationBar from \"./UI/NavigationBar\";\nimport { Outlet } from \"react-router-dom\";\n\nconst userReducer = (state, action) => {\n  switch (action.type) {\n    case \"SIGNUP_USER\":\n      return {\n        ...state,\n        data: action.payload,\n        isLoggedIn: true,\n      };\n    case \"SIGNIN_USER\":\n      return {\n        ...state,\n        data: action.payload,\n        isLoggedIn: true,\n      };\n    case \"SIGNOUT_USER\":\n      return {\n        ...state,\n        data: null,\n        isLoggedIn: false,\n      };\n    case \"EDIT_USER\":\n      return {\n        ...state,\n        data: action.payload,\n      };\n    case \"DELETE_USER\":\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    // case \"SET_IS_DELETED\":\n    //   return {\n    //     ...state,\n    //     isDeleted: false,\n    //   };\n    case \"ADD_POST\":\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          posts: [...state.data.posts, action.payload],\n        },\n      };\n    case \"DELETE_POST\":\n      return {\n        ...state,\n        data: {\n          ...state.data,\n          posts: state.data.posts.filter((post) => post != action.payload),\n        },\n      };\n\n    default:\n      throw new Error();\n  }\n};\n\nfunction App() {\n  const [user, dispatchUser] = useReducer(userReducer, {\n    data: JSON.parse(sessionStorage.getItem(\"user\")),\n    isLoggedIn: sessionStorage.getItem(\"user\") !== null,\n  });\n\n  // a mock database holding informaiton on users\n  const [users, setUsers] = useState(\n    JSON.parse(localStorage.getItem(\"users\")) ?? {}\n  );\n\n  const deleteUser = (email) => {\n    delete users[email];\n    setUsers({ ...users });\n  };\n\n  // If user logs in, push user to sessionStorage.\n  // If user logs out, pop user from sessionStorage.\n  useEffect(() => {\n    if (user.isLoggedIn) {\n      sessionStorage.setItem(\"user\", JSON.stringify(user.data));\n    } else {\n      sessionStorage.removeItem(\"user\");\n    }\n  }, [user.isLoggedIn]);\n\n  // Whenever there is a change in user.data\n  useEffect(() => {\n    if (user.data) {\n      sessionStorage.setItem(\"user\", JSON.stringify(user.data));\n      users[user.data.email] = user.data;\n      setUsers({ ...users });\n    } else {\n      // user.data changes to null when the user logs out\n      sessionStorage.removeItem(\"user\");\n    }\n  }, [user.data]);\n\n  // Whenever there is a change in users\n  useEffect(() => {\n    localStorage.setItem(\"users\", JSON.stringify(users));\n  }, [users]);\n\n  return (\n    <>\n      <NavigationBar isLoggedIn={user.isLoggedIn} dispatchUser={dispatchUser} />\n      <Outlet context={[user, dispatchUser, users, deleteUser]} />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}