{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../base/values');\n/* jshint ignore:line */\n\n\nvar ChannelList;\nvar ChannelPage;\nvar ChannelInstance;\nvar ChannelContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the ChannelList\n *\n * @constructor Twilio.Chat.V3.ChannelList\n *\n * @param {Twilio.Chat.V3} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nChannelList = function ChannelList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function channels\n   * @memberof Twilio.Chat.V3#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Chat.V3.ChannelContext}\n   */\n\n  /* jshint ignore:end */\n  function ChannelListInstance(sid) {\n    return ChannelListInstance.get(sid);\n  }\n\n  ChannelListInstance._version = version; // Path Solution\n\n  ChannelListInstance._solution = {};\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a channel\n   *\n   * @function get\n   * @memberof Twilio.Chat.V3.ChannelList#\n   *\n   * @param {string} serviceSid - Service Sid.\n   * @param {string} sid - A string that uniquely identifies this Channel.\n   *\n   * @returns {Twilio.Chat.V3.ChannelContext}\n   */\n\n  /* jshint ignore:end */\n\n  ChannelListInstance.get = function get(serviceSid, sid) {\n    return new ChannelContext(this._version, serviceSid, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Chat.V3.ChannelList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  ChannelListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  ChannelListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return ChannelListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the ChannelPage\n *\n * @constructor Twilio.Chat.V3.ChannelPage\n *\n * @param {V3} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {ChannelSolution} solution - Path solution\n *\n * @returns ChannelPage\n */\n\n/* jshint ignore:end */\n\n\nChannelPage = function ChannelPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(ChannelPage.prototype, Page.prototype);\n\nChannelPage.prototype.constructor = ChannelPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of ChannelInstance\n *\n * @function getInstance\n * @memberof Twilio.Chat.V3.ChannelPage#\n *\n * @param {ChannelPayload} payload - Payload response from the API\n *\n * @returns ChannelInstance\n */\n\n/* jshint ignore:end */\n\nChannelPage.prototype.getInstance = function getInstance(payload) {\n  return new ChannelInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Chat.V3.ChannelPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nChannelPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nChannelPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the ChannelContext\n *\n * @constructor Twilio.Chat.V3.ChannelInstance\n *\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} serviceSid -\n *          The SID of the Service that the resource is associated with\n * @property {string} friendlyName -\n *          The string that you assigned to describe the resource\n * @property {string} uniqueName -\n *          An application-defined string that uniquely identifies the resource\n * @property {string} attributes -\n *          The JSON string that stores application-specific data\n * @property {channel.channel_type} type -\n *          The visibility of the channel. Can be: `public` or `private`\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the resource was last updated\n * @property {string} createdBy - The identity of the User that created the channel\n * @property {number} membersCount - The number of Members in the Channel\n * @property {number} messagesCount -\n *          The number of Messages that have been passed in the Channel\n * @property {string} messagingServiceSid -\n *          The unique ID of the Messaging Service this channel belongs to.\n * @property {string} url - The absolute URL of the Channel resource\n *\n * @param {V3} version - Version of the resource\n * @param {ChannelPayload} payload - The instance payload\n * @param {sid} serviceSid - Service Sid.\n * @param {sid_like} sid - A string that uniquely identifies this Channel.\n */\n\n/* jshint ignore:end */\n\n\nChannelInstance = function ChannelInstance(version, payload, serviceSid, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n\n  this.uniqueName = payload.unique_name; // jshint ignore:line\n\n  this.attributes = payload.attributes; // jshint ignore:line\n\n  this.type = payload.type; // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n\n  this.createdBy = payload.created_by; // jshint ignore:line\n\n  this.membersCount = deserialize.integer(payload.members_count); // jshint ignore:line\n\n  this.messagesCount = deserialize.integer(payload.messages_count); // jshint ignore:line\n\n  this.messagingServiceSid = payload.messaging_service_sid; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    serviceSid: serviceSid || this.serviceSid,\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(ChannelInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new ChannelContext(this._version, this._solution.serviceSid, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * update a ChannelInstance\n *\n * @function update\n * @memberof Twilio.Chat.V3.ChannelInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {channel.channel_type} [opts.type] -\n *          The Type for this Channel to migrate to.\n * @param {string} [opts.messagingServiceSid] -\n *          The unique ID of the Messaging Service this channel belongs to.\n * @param {channel.webhook_enabled_type} [opts.xTwilioWebhookEnabled] -\n *          The X-Twilio-Webhook-Enabled HTTP request header\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ChannelInstance\n */\n\n/* jshint ignore:end */\n\nChannelInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Chat.V3.ChannelInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nChannelInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nChannelInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the ChannelContext\n *\n * @constructor Twilio.Chat.V3.ChannelContext\n *\n * @param {V3} version - Version of the resource\n * @param {sid} serviceSid - Service Sid.\n * @param {sid_like} sid - A string that uniquely identifies this Channel.\n */\n\n/* jshint ignore:end */\n\n\nChannelContext = function ChannelContext(version, serviceSid, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    serviceSid: serviceSid,\n    sid: sid\n  };\n  this._uri = `/Services/${serviceSid}/Channels/${sid}`;\n};\n/* jshint ignore:start */\n\n/**\n * update a ChannelInstance\n *\n * @function update\n * @memberof Twilio.Chat.V3.ChannelContext#\n *\n * @param {object} [opts] - Options for request\n * @param {channel.channel_type} [opts.type] -\n *          The Type for this Channel to migrate to.\n * @param {string} [opts.messagingServiceSid] -\n *          The unique ID of the Messaging Service this channel belongs to.\n * @param {channel.webhook_enabled_type} [opts.xTwilioWebhookEnabled] -\n *          The X-Twilio-Webhook-Enabled HTTP request header\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ChannelInstance\n */\n\n/* jshint ignore:end */\n\n\nChannelContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'Type': _.get(opts, 'type'),\n    'MessagingServiceSid': _.get(opts, 'messagingServiceSid')\n  });\n  var headers = values.of({\n    'X-Twilio-Webhook-Enabled': _.get(opts, 'xTwilioWebhookEnabled')\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data,\n    headers: headers\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new ChannelInstance(this._version, payload, this._solution.serviceSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Chat.V3.ChannelContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nChannelContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nChannelContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  ChannelList: ChannelList,\n  ChannelPage: ChannelPage,\n  ChannelInstance: ChannelInstance,\n  ChannelContext: ChannelContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","deserialize","values","ChannelList","ChannelPage","ChannelInstance","ChannelContext","version","ChannelListInstance","sid","get","_version","_solution","serviceSid","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","accountSid","account_sid","service_sid","friendlyName","friendly_name","uniqueName","unique_name","attributes","type","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","createdBy","created_by","membersCount","integer","members_count","messagesCount","messages_count","messagingServiceSid","messaging_service_sid","url","_context","undefined","Object","defineProperty","update","opts","callback","_proxy","_uri","deferred","defer","data","of","headers","promise","uri","method","then","resolve","bind","catch","error","reject","nodeify","module","exports"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/twilio/lib/rest/chat/v3/channel.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar ChannelList;\nvar ChannelPage;\nvar ChannelInstance;\nvar ChannelContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the ChannelList\n *\n * @constructor Twilio.Chat.V3.ChannelList\n *\n * @param {Twilio.Chat.V3} version - Version of the resource\n */\n/* jshint ignore:end */\nChannelList = function ChannelList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function channels\n   * @memberof Twilio.Chat.V3#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Chat.V3.ChannelContext}\n   */\n  /* jshint ignore:end */\n  function ChannelListInstance(sid) {\n    return ChannelListInstance.get(sid);\n  }\n\n  ChannelListInstance._version = version;\n  // Path Solution\n  ChannelListInstance._solution = {};\n  /* jshint ignore:start */\n  /**\n   * Constructs a channel\n   *\n   * @function get\n   * @memberof Twilio.Chat.V3.ChannelList#\n   *\n   * @param {string} serviceSid - Service Sid.\n   * @param {string} sid - A string that uniquely identifies this Channel.\n   *\n   * @returns {Twilio.Chat.V3.ChannelContext}\n   */\n  /* jshint ignore:end */\n  ChannelListInstance.get = function get(serviceSid, sid) {\n    return new ChannelContext(this._version, serviceSid, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Chat.V3.ChannelList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  ChannelListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  ChannelListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return ChannelListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ChannelPage\n *\n * @constructor Twilio.Chat.V3.ChannelPage\n *\n * @param {V3} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {ChannelSolution} solution - Path solution\n *\n * @returns ChannelPage\n */\n/* jshint ignore:end */\nChannelPage = function ChannelPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(ChannelPage.prototype, Page.prototype);\nChannelPage.prototype.constructor = ChannelPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of ChannelInstance\n *\n * @function getInstance\n * @memberof Twilio.Chat.V3.ChannelPage#\n *\n * @param {ChannelPayload} payload - Payload response from the API\n *\n * @returns ChannelInstance\n */\n/* jshint ignore:end */\nChannelPage.prototype.getInstance = function getInstance(payload) {\n  return new ChannelInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Chat.V3.ChannelPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nChannelPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nChannelPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ChannelContext\n *\n * @constructor Twilio.Chat.V3.ChannelInstance\n *\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} serviceSid -\n *          The SID of the Service that the resource is associated with\n * @property {string} friendlyName -\n *          The string that you assigned to describe the resource\n * @property {string} uniqueName -\n *          An application-defined string that uniquely identifies the resource\n * @property {string} attributes -\n *          The JSON string that stores application-specific data\n * @property {channel.channel_type} type -\n *          The visibility of the channel. Can be: `public` or `private`\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the resource was last updated\n * @property {string} createdBy - The identity of the User that created the channel\n * @property {number} membersCount - The number of Members in the Channel\n * @property {number} messagesCount -\n *          The number of Messages that have been passed in the Channel\n * @property {string} messagingServiceSid -\n *          The unique ID of the Messaging Service this channel belongs to.\n * @property {string} url - The absolute URL of the Channel resource\n *\n * @param {V3} version - Version of the resource\n * @param {ChannelPayload} payload - The instance payload\n * @param {sid} serviceSid - Service Sid.\n * @param {sid_like} sid - A string that uniquely identifies this Channel.\n */\n/* jshint ignore:end */\nChannelInstance = function ChannelInstance(version, payload, serviceSid, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.uniqueName = payload.unique_name; // jshint ignore:line\n  this.attributes = payload.attributes; // jshint ignore:line\n  this.type = payload.type; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.createdBy = payload.created_by; // jshint ignore:line\n  this.membersCount = deserialize.integer(payload.members_count); // jshint ignore:line\n  this.messagesCount = deserialize.integer(payload.messages_count); // jshint ignore:line\n  this.messagingServiceSid = payload.messaging_service_sid; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {serviceSid: serviceSid || this.serviceSid, sid: sid || this.sid, };\n};\n\nObject.defineProperty(ChannelInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new ChannelContext(this._version, this._solution.serviceSid, this._solution.sid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * update a ChannelInstance\n *\n * @function update\n * @memberof Twilio.Chat.V3.ChannelInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {channel.channel_type} [opts.type] -\n *          The Type for this Channel to migrate to.\n * @param {string} [opts.messagingServiceSid] -\n *          The unique ID of the Messaging Service this channel belongs to.\n * @param {channel.webhook_enabled_type} [opts.xTwilioWebhookEnabled] -\n *          The X-Twilio-Webhook-Enabled HTTP request header\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ChannelInstance\n */\n/* jshint ignore:end */\nChannelInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Chat.V3.ChannelInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nChannelInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nChannelInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ChannelContext\n *\n * @constructor Twilio.Chat.V3.ChannelContext\n *\n * @param {V3} version - Version of the resource\n * @param {sid} serviceSid - Service Sid.\n * @param {sid_like} sid - A string that uniquely identifies this Channel.\n */\n/* jshint ignore:end */\nChannelContext = function ChannelContext(version, serviceSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {serviceSid: serviceSid, sid: sid, };\n  this._uri = `/Services/${serviceSid}/Channels/${sid}`;\n};\n\n/* jshint ignore:start */\n/**\n * update a ChannelInstance\n *\n * @function update\n * @memberof Twilio.Chat.V3.ChannelContext#\n *\n * @param {object} [opts] - Options for request\n * @param {channel.channel_type} [opts.type] -\n *          The Type for this Channel to migrate to.\n * @param {string} [opts.messagingServiceSid] -\n *          The unique ID of the Messaging Service this channel belongs to.\n * @param {channel.webhook_enabled_type} [opts.xTwilioWebhookEnabled] -\n *          The X-Twilio-Webhook-Enabled HTTP request header\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ChannelInstance\n */\n/* jshint ignore:end */\nChannelContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'Type': _.get(opts, 'type'),\n    'MessagingServiceSid': _.get(opts, 'messagingServiceSid')\n  });\n  var headers = values.of({'X-Twilio-Webhook-Enabled': _.get(opts, 'xTwilioWebhookEnabled')});\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data, headers: headers});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new ChannelInstance(\n      this._version,\n      payload,\n      this._solution.serviceSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Chat.V3.ChannelContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nChannelContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nChannelContext.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  ChannelList: ChannelList,\n  ChannelPage: ChannelPage,\n  ChannelInstance: ChannelInstance,\n  ChannelContext: ChannelContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}