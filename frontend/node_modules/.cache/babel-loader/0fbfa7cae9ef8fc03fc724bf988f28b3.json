{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../base/values');\n/* jshint ignore:line */\n\n\nvar ByocTrunkList;\nvar ByocTrunkPage;\nvar ByocTrunkInstance;\nvar ByocTrunkContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the ByocTrunkList\n *\n * @constructor Twilio.Voice.V1.ByocTrunkList\n *\n * @param {Twilio.Voice.V1} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nByocTrunkList = function ByocTrunkList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function byocTrunks\n   * @memberof Twilio.Voice.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Voice.V1.ByocTrunkContext}\n   */\n\n  /* jshint ignore:end */\n  function ByocTrunkListInstance(sid) {\n    return ByocTrunkListInstance.get(sid);\n  }\n\n  ByocTrunkListInstance._version = version; // Path Solution\n\n  ByocTrunkListInstance._solution = {};\n  ByocTrunkListInstance._uri = `/ByocTrunks`;\n  /* jshint ignore:start */\n\n  /**\n   * create a ByocTrunkInstance\n   *\n   * @function create\n   * @memberof Twilio.Voice.V1.ByocTrunkList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] - A string to describe the resource\n   * @param {string} [opts.voiceUrl] - The URL we should call when receiving a call\n   * @param {string} [opts.voiceMethod] - The HTTP method to use with voice_url\n   * @param {string} [opts.voiceFallbackUrl] -\n   *          The URL we should call when an error occurs in executing TwiML\n   * @param {string} [opts.voiceFallbackMethod] -\n   *          The HTTP method to use with voice_fallback_url\n   * @param {string} [opts.statusCallbackUrl] -\n   *          The URL that we should call to pass status updates\n   * @param {string} [opts.statusCallbackMethod] -\n   *          The HTTP method we should use to call `status_callback_url`\n   * @param {boolean} [opts.cnamLookupEnabled] -\n   *          Whether Caller ID Name (CNAM) lookup is enabled for the trunk\n   * @param {string} [opts.connectionPolicySid] -\n   *          Origination Connection Policy (to your Carrier)\n   * @param {string} [opts.fromDomainSid] -\n   *          The SID of the SIP Domain that should be used in the `From` header of originating calls\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed ByocTrunkInstance\n   */\n\n  /* jshint ignore:end */\n\n  ByocTrunkListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'VoiceUrl': _.get(opts, 'voiceUrl'),\n      'VoiceMethod': _.get(opts, 'voiceMethod'),\n      'VoiceFallbackUrl': _.get(opts, 'voiceFallbackUrl'),\n      'VoiceFallbackMethod': _.get(opts, 'voiceFallbackMethod'),\n      'StatusCallbackUrl': _.get(opts, 'statusCallbackUrl'),\n      'StatusCallbackMethod': _.get(opts, 'statusCallbackMethod'),\n      'CnamLookupEnabled': serialize.bool(_.get(opts, 'cnamLookupEnabled')),\n      'ConnectionPolicySid': _.get(opts, 'connectionPolicySid'),\n      'FromDomainSid': _.get(opts, 'fromDomainSid')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new ByocTrunkInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Streams ByocTrunkInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Voice.V1.ByocTrunkList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n\n  ByocTrunkListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists ByocTrunkInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Voice.V1.ByocTrunkList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  ByocTrunkListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of ByocTrunkInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Voice.V1.ByocTrunkList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  ByocTrunkListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new ByocTrunkPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of ByocTrunkInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Voice.V1.ByocTrunkList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  ByocTrunkListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new ByocTrunkPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a byoc_trunk\n   *\n   * @function get\n   * @memberof Twilio.Voice.V1.ByocTrunkList#\n   *\n   * @param {string} sid - The unique string that identifies the resource\n   *\n   * @returns {Twilio.Voice.V1.ByocTrunkContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  ByocTrunkListInstance.get = function get(sid) {\n    return new ByocTrunkContext(this._version, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Voice.V1.ByocTrunkList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  ByocTrunkListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  ByocTrunkListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return ByocTrunkListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the ByocTrunkPage\n *\n * @constructor Twilio.Voice.V1.ByocTrunkPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {ByocTrunkSolution} solution - Path solution\n *\n * @returns ByocTrunkPage\n */\n\n/* jshint ignore:end */\n\n\nByocTrunkPage = function ByocTrunkPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(ByocTrunkPage.prototype, Page.prototype);\n\nByocTrunkPage.prototype.constructor = ByocTrunkPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of ByocTrunkInstance\n *\n * @function getInstance\n * @memberof Twilio.Voice.V1.ByocTrunkPage#\n *\n * @param {ByocTrunkPayload} payload - Payload response from the API\n *\n * @returns ByocTrunkInstance\n */\n\n/* jshint ignore:end */\n\nByocTrunkPage.prototype.getInstance = function getInstance(payload) {\n  return new ByocTrunkInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Voice.V1.ByocTrunkPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nByocTrunkPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nByocTrunkPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the ByocTrunkContext\n *\n * @constructor Twilio.Voice.V1.ByocTrunkInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} friendlyName -\n *          The string that you assigned to describe the resource\n * @property {string} voiceUrl - The URL we call when receiving a call\n * @property {string} voiceMethod - The HTTP method to use with voice_url\n * @property {string} voiceFallbackUrl -\n *          The URL we call when an error occurs while executing TwiML\n * @property {string} voiceFallbackMethod -\n *          The HTTP method used with voice_fallback_url\n * @property {string} statusCallbackUrl - The URL that we call with status updates\n * @property {string} statusCallbackMethod -\n *          The HTTP method we use to call status_callback_url\n * @property {boolean} cnamLookupEnabled -\n *          Whether Caller ID Name (CNAM) lookup is enabled for the trunk\n * @property {string} connectionPolicySid -\n *          Origination Connection Policy (to your Carrier)\n * @property {string} fromDomainSid -\n *          The SID of the SIP Domain that should be used in the `From` header of originating calls\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT that the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT that the resource was last updated\n * @property {string} url - The absolute URL of the resource\n *\n * @param {V1} version - Version of the resource\n * @param {ByocTrunkPayload} payload - The instance payload\n * @param {sid} sid - The unique string that identifies the resource\n */\n\n/* jshint ignore:end */\n\n\nByocTrunkInstance = function ByocTrunkInstance(version, payload, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n\n  this.voiceUrl = payload.voice_url; // jshint ignore:line\n\n  this.voiceMethod = payload.voice_method; // jshint ignore:line\n\n  this.voiceFallbackUrl = payload.voice_fallback_url; // jshint ignore:line\n\n  this.voiceFallbackMethod = payload.voice_fallback_method; // jshint ignore:line\n\n  this.statusCallbackUrl = payload.status_callback_url; // jshint ignore:line\n\n  this.statusCallbackMethod = payload.status_callback_method; // jshint ignore:line\n\n  this.cnamLookupEnabled = payload.cnam_lookup_enabled; // jshint ignore:line\n\n  this.connectionPolicySid = payload.connection_policy_sid; // jshint ignore:line\n\n  this.fromDomainSid = payload.from_domain_sid; // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(ByocTrunkInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new ByocTrunkContext(this._version, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a ByocTrunkInstance\n *\n * @function fetch\n * @memberof Twilio.Voice.V1.ByocTrunkInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ByocTrunkInstance\n */\n\n/* jshint ignore:end */\n\nByocTrunkInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * update a ByocTrunkInstance\n *\n * @function update\n * @memberof Twilio.Voice.V1.ByocTrunkInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] - A string to describe the resource\n * @param {string} [opts.voiceUrl] - The URL we should call when receiving a call\n * @param {string} [opts.voiceMethod] -\n *          The HTTP method we should use with voice_url\n * @param {string} [opts.voiceFallbackUrl] -\n *          The URL we should call when an error occurs in executing TwiML\n * @param {string} [opts.voiceFallbackMethod] -\n *          The HTTP method used with voice_fallback_url\n * @param {string} [opts.statusCallbackUrl] -\n *          The URL that we should call to pass status updates\n * @param {string} [opts.statusCallbackMethod] -\n *          The HTTP method we should use to call status_callback_url\n * @param {boolean} [opts.cnamLookupEnabled] -\n *          Whether Caller ID Name (CNAM) lookup is enabled for the trunk\n * @param {string} [opts.connectionPolicySid] -\n *          Origination Connection Policy (to your Carrier)\n * @param {string} [opts.fromDomainSid] -\n *          The SID of the SIP Domain that should be used in the `From` header of originating calls\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ByocTrunkInstance\n */\n\n/* jshint ignore:end */\n\n\nByocTrunkInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * remove a ByocTrunkInstance\n *\n * @function remove\n * @memberof Twilio.Voice.V1.ByocTrunkInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ByocTrunkInstance\n */\n\n/* jshint ignore:end */\n\n\nByocTrunkInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Voice.V1.ByocTrunkInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nByocTrunkInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nByocTrunkInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the ByocTrunkContext\n *\n * @constructor Twilio.Voice.V1.ByocTrunkContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} sid - The unique string that identifies the resource\n */\n\n/* jshint ignore:end */\n\n\nByocTrunkContext = function ByocTrunkContext(version, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    sid: sid\n  };\n  this._uri = `/ByocTrunks/${sid}`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a ByocTrunkInstance\n *\n * @function fetch\n * @memberof Twilio.Voice.V1.ByocTrunkContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ByocTrunkInstance\n */\n\n/* jshint ignore:end */\n\n\nByocTrunkContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new ByocTrunkInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * update a ByocTrunkInstance\n *\n * @function update\n * @memberof Twilio.Voice.V1.ByocTrunkContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] - A string to describe the resource\n * @param {string} [opts.voiceUrl] - The URL we should call when receiving a call\n * @param {string} [opts.voiceMethod] -\n *          The HTTP method we should use with voice_url\n * @param {string} [opts.voiceFallbackUrl] -\n *          The URL we should call when an error occurs in executing TwiML\n * @param {string} [opts.voiceFallbackMethod] -\n *          The HTTP method used with voice_fallback_url\n * @param {string} [opts.statusCallbackUrl] -\n *          The URL that we should call to pass status updates\n * @param {string} [opts.statusCallbackMethod] -\n *          The HTTP method we should use to call status_callback_url\n * @param {boolean} [opts.cnamLookupEnabled] -\n *          Whether Caller ID Name (CNAM) lookup is enabled for the trunk\n * @param {string} [opts.connectionPolicySid] -\n *          Origination Connection Policy (to your Carrier)\n * @param {string} [opts.fromDomainSid] -\n *          The SID of the SIP Domain that should be used in the `From` header of originating calls\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ByocTrunkInstance\n */\n\n/* jshint ignore:end */\n\n\nByocTrunkContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'VoiceUrl': _.get(opts, 'voiceUrl'),\n    'VoiceMethod': _.get(opts, 'voiceMethod'),\n    'VoiceFallbackUrl': _.get(opts, 'voiceFallbackUrl'),\n    'VoiceFallbackMethod': _.get(opts, 'voiceFallbackMethod'),\n    'StatusCallbackUrl': _.get(opts, 'statusCallbackUrl'),\n    'StatusCallbackMethod': _.get(opts, 'statusCallbackMethod'),\n    'CnamLookupEnabled': serialize.bool(_.get(opts, 'cnamLookupEnabled')),\n    'ConnectionPolicySid': _.get(opts, 'connectionPolicySid'),\n    'FromDomainSid': _.get(opts, 'fromDomainSid')\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new ByocTrunkInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * remove a ByocTrunkInstance\n *\n * @function remove\n * @memberof Twilio.Voice.V1.ByocTrunkContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ByocTrunkInstance\n */\n\n/* jshint ignore:end */\n\n\nByocTrunkContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Voice.V1.ByocTrunkContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nByocTrunkContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nByocTrunkContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  ByocTrunkList: ByocTrunkList,\n  ByocTrunkPage: ByocTrunkPage,\n  ByocTrunkInstance: ByocTrunkInstance,\n  ByocTrunkContext: ByocTrunkContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","deserialize","serialize","values","ByocTrunkList","ByocTrunkPage","ByocTrunkInstance","ByocTrunkContext","version","ByocTrunkListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isFunction","deferred","defer","data","of","bool","promise","uri","method","then","payload","resolve","bind","catch","error","reject","nodeify","each","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","fetchNextPage","fn","page","instances","instance","nextPage","merge","list","allResources","resource","push","length","pageToken","pageNumber","params","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","accountSid","account_sid","friendlyName","friendly_name","voiceUrl","voice_url","voiceMethod","voice_method","voiceFallbackUrl","voice_fallback_url","voiceFallbackMethod","voice_fallback_method","statusCallbackUrl","status_callback_url","statusCallbackMethod","status_callback_method","cnamLookupEnabled","cnam_lookup_enabled","connectionPolicySid","connection_policy_sid","fromDomainSid","from_domain_sid","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","url","_context","undefined","Object","defineProperty","fetch","_proxy","update","remove","module","exports"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/twilio/lib/rest/voice/v1/byocTrunk.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require('../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar ByocTrunkList;\nvar ByocTrunkPage;\nvar ByocTrunkInstance;\nvar ByocTrunkContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the ByocTrunkList\n *\n * @constructor Twilio.Voice.V1.ByocTrunkList\n *\n * @param {Twilio.Voice.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nByocTrunkList = function ByocTrunkList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function byocTrunks\n   * @memberof Twilio.Voice.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Voice.V1.ByocTrunkContext}\n   */\n  /* jshint ignore:end */\n  function ByocTrunkListInstance(sid) {\n    return ByocTrunkListInstance.get(sid);\n  }\n\n  ByocTrunkListInstance._version = version;\n  // Path Solution\n  ByocTrunkListInstance._solution = {};\n  ByocTrunkListInstance._uri = `/ByocTrunks`;\n  /* jshint ignore:start */\n  /**\n   * create a ByocTrunkInstance\n   *\n   * @function create\n   * @memberof Twilio.Voice.V1.ByocTrunkList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.friendlyName] - A string to describe the resource\n   * @param {string} [opts.voiceUrl] - The URL we should call when receiving a call\n   * @param {string} [opts.voiceMethod] - The HTTP method to use with voice_url\n   * @param {string} [opts.voiceFallbackUrl] -\n   *          The URL we should call when an error occurs in executing TwiML\n   * @param {string} [opts.voiceFallbackMethod] -\n   *          The HTTP method to use with voice_fallback_url\n   * @param {string} [opts.statusCallbackUrl] -\n   *          The URL that we should call to pass status updates\n   * @param {string} [opts.statusCallbackMethod] -\n   *          The HTTP method we should use to call `status_callback_url`\n   * @param {boolean} [opts.cnamLookupEnabled] -\n   *          Whether Caller ID Name (CNAM) lookup is enabled for the trunk\n   * @param {string} [opts.connectionPolicySid] -\n   *          Origination Connection Policy (to your Carrier)\n   * @param {string} [opts.fromDomainSid] -\n   *          The SID of the SIP Domain that should be used in the `From` header of originating calls\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed ByocTrunkInstance\n   */\n  /* jshint ignore:end */\n  ByocTrunkListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'VoiceUrl': _.get(opts, 'voiceUrl'),\n      'VoiceMethod': _.get(opts, 'voiceMethod'),\n      'VoiceFallbackUrl': _.get(opts, 'voiceFallbackUrl'),\n      'VoiceFallbackMethod': _.get(opts, 'voiceFallbackMethod'),\n      'StatusCallbackUrl': _.get(opts, 'statusCallbackUrl'),\n      'StatusCallbackMethod': _.get(opts, 'statusCallbackMethod'),\n      'CnamLookupEnabled': serialize.bool(_.get(opts, 'cnamLookupEnabled')),\n      'ConnectionPolicySid': _.get(opts, 'connectionPolicySid'),\n      'FromDomainSid': _.get(opts, 'fromDomainSid')\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new ByocTrunkInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams ByocTrunkInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Voice.V1.ByocTrunkList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  ByocTrunkListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists ByocTrunkInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Voice.V1.ByocTrunkList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ByocTrunkListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of ByocTrunkInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Voice.V1.ByocTrunkList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ByocTrunkListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new ByocTrunkPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of ByocTrunkInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Voice.V1.ByocTrunkList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  ByocTrunkListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new ByocTrunkPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a byoc_trunk\n   *\n   * @function get\n   * @memberof Twilio.Voice.V1.ByocTrunkList#\n   *\n   * @param {string} sid - The unique string that identifies the resource\n   *\n   * @returns {Twilio.Voice.V1.ByocTrunkContext}\n   */\n  /* jshint ignore:end */\n  ByocTrunkListInstance.get = function get(sid) {\n    return new ByocTrunkContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Voice.V1.ByocTrunkList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  ByocTrunkListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  ByocTrunkListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return ByocTrunkListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ByocTrunkPage\n *\n * @constructor Twilio.Voice.V1.ByocTrunkPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {ByocTrunkSolution} solution - Path solution\n *\n * @returns ByocTrunkPage\n */\n/* jshint ignore:end */\nByocTrunkPage = function ByocTrunkPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(ByocTrunkPage.prototype, Page.prototype);\nByocTrunkPage.prototype.constructor = ByocTrunkPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of ByocTrunkInstance\n *\n * @function getInstance\n * @memberof Twilio.Voice.V1.ByocTrunkPage#\n *\n * @param {ByocTrunkPayload} payload - Payload response from the API\n *\n * @returns ByocTrunkInstance\n */\n/* jshint ignore:end */\nByocTrunkPage.prototype.getInstance = function getInstance(payload) {\n  return new ByocTrunkInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Voice.V1.ByocTrunkPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nByocTrunkPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nByocTrunkPage.prototype[util.inspect.custom] = function inspect(depth, options)\n    {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ByocTrunkContext\n *\n * @constructor Twilio.Voice.V1.ByocTrunkInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} friendlyName -\n *          The string that you assigned to describe the resource\n * @property {string} voiceUrl - The URL we call when receiving a call\n * @property {string} voiceMethod - The HTTP method to use with voice_url\n * @property {string} voiceFallbackUrl -\n *          The URL we call when an error occurs while executing TwiML\n * @property {string} voiceFallbackMethod -\n *          The HTTP method used with voice_fallback_url\n * @property {string} statusCallbackUrl - The URL that we call with status updates\n * @property {string} statusCallbackMethod -\n *          The HTTP method we use to call status_callback_url\n * @property {boolean} cnamLookupEnabled -\n *          Whether Caller ID Name (CNAM) lookup is enabled for the trunk\n * @property {string} connectionPolicySid -\n *          Origination Connection Policy (to your Carrier)\n * @property {string} fromDomainSid -\n *          The SID of the SIP Domain that should be used in the `From` header of originating calls\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT that the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT that the resource was last updated\n * @property {string} url - The absolute URL of the resource\n *\n * @param {V1} version - Version of the resource\n * @param {ByocTrunkPayload} payload - The instance payload\n * @param {sid} sid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nByocTrunkInstance = function ByocTrunkInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.voiceUrl = payload.voice_url; // jshint ignore:line\n  this.voiceMethod = payload.voice_method; // jshint ignore:line\n  this.voiceFallbackUrl = payload.voice_fallback_url; // jshint ignore:line\n  this.voiceFallbackMethod = payload.voice_fallback_method; // jshint ignore:line\n  this.statusCallbackUrl = payload.status_callback_url; // jshint ignore:line\n  this.statusCallbackMethod = payload.status_callback_method; // jshint ignore:line\n  this.cnamLookupEnabled = payload.cnam_lookup_enabled; // jshint ignore:line\n  this.connectionPolicySid = payload.connection_policy_sid; // jshint ignore:line\n  this.fromDomainSid = payload.from_domain_sid; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {sid: sid || this.sid, };\n};\n\nObject.defineProperty(ByocTrunkInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new ByocTrunkContext(this._version, this._solution.sid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a ByocTrunkInstance\n *\n * @function fetch\n * @memberof Twilio.Voice.V1.ByocTrunkInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ByocTrunkInstance\n */\n/* jshint ignore:end */\nByocTrunkInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a ByocTrunkInstance\n *\n * @function update\n * @memberof Twilio.Voice.V1.ByocTrunkInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] - A string to describe the resource\n * @param {string} [opts.voiceUrl] - The URL we should call when receiving a call\n * @param {string} [opts.voiceMethod] -\n *          The HTTP method we should use with voice_url\n * @param {string} [opts.voiceFallbackUrl] -\n *          The URL we should call when an error occurs in executing TwiML\n * @param {string} [opts.voiceFallbackMethod] -\n *          The HTTP method used with voice_fallback_url\n * @param {string} [opts.statusCallbackUrl] -\n *          The URL that we should call to pass status updates\n * @param {string} [opts.statusCallbackMethod] -\n *          The HTTP method we should use to call status_callback_url\n * @param {boolean} [opts.cnamLookupEnabled] -\n *          Whether Caller ID Name (CNAM) lookup is enabled for the trunk\n * @param {string} [opts.connectionPolicySid] -\n *          Origination Connection Policy (to your Carrier)\n * @param {string} [opts.fromDomainSid] -\n *          The SID of the SIP Domain that should be used in the `From` header of originating calls\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ByocTrunkInstance\n */\n/* jshint ignore:end */\nByocTrunkInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a ByocTrunkInstance\n *\n * @function remove\n * @memberof Twilio.Voice.V1.ByocTrunkInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ByocTrunkInstance\n */\n/* jshint ignore:end */\nByocTrunkInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Voice.V1.ByocTrunkInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nByocTrunkInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nByocTrunkInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the ByocTrunkContext\n *\n * @constructor Twilio.Voice.V1.ByocTrunkContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} sid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nByocTrunkContext = function ByocTrunkContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {sid: sid, };\n  this._uri = `/ByocTrunks/${sid}`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a ByocTrunkInstance\n *\n * @function fetch\n * @memberof Twilio.Voice.V1.ByocTrunkContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ByocTrunkInstance\n */\n/* jshint ignore:end */\nByocTrunkContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new ByocTrunkInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a ByocTrunkInstance\n *\n * @function update\n * @memberof Twilio.Voice.V1.ByocTrunkContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] - A string to describe the resource\n * @param {string} [opts.voiceUrl] - The URL we should call when receiving a call\n * @param {string} [opts.voiceMethod] -\n *          The HTTP method we should use with voice_url\n * @param {string} [opts.voiceFallbackUrl] -\n *          The URL we should call when an error occurs in executing TwiML\n * @param {string} [opts.voiceFallbackMethod] -\n *          The HTTP method used with voice_fallback_url\n * @param {string} [opts.statusCallbackUrl] -\n *          The URL that we should call to pass status updates\n * @param {string} [opts.statusCallbackMethod] -\n *          The HTTP method we should use to call status_callback_url\n * @param {boolean} [opts.cnamLookupEnabled] -\n *          Whether Caller ID Name (CNAM) lookup is enabled for the trunk\n * @param {string} [opts.connectionPolicySid] -\n *          Origination Connection Policy (to your Carrier)\n * @param {string} [opts.fromDomainSid] -\n *          The SID of the SIP Domain that should be used in the `From` header of originating calls\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ByocTrunkInstance\n */\n/* jshint ignore:end */\nByocTrunkContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'VoiceUrl': _.get(opts, 'voiceUrl'),\n    'VoiceMethod': _.get(opts, 'voiceMethod'),\n    'VoiceFallbackUrl': _.get(opts, 'voiceFallbackUrl'),\n    'VoiceFallbackMethod': _.get(opts, 'voiceFallbackMethod'),\n    'StatusCallbackUrl': _.get(opts, 'statusCallbackUrl'),\n    'StatusCallbackMethod': _.get(opts, 'statusCallbackMethod'),\n    'CnamLookupEnabled': serialize.bool(_.get(opts, 'cnamLookupEnabled')),\n    'ConnectionPolicySid': _.get(opts, 'connectionPolicySid'),\n    'FromDomainSid': _.get(opts, 'fromDomainSid')\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new ByocTrunkInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a ByocTrunkInstance\n *\n * @function remove\n * @memberof Twilio.Voice.V1.ByocTrunkContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed ByocTrunkInstance\n */\n/* jshint ignore:end */\nByocTrunkContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Voice.V1.ByocTrunkContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nByocTrunkContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nByocTrunkContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  ByocTrunkList: ByocTrunkList,\n  ByocTrunkPage: ByocTrunkPage,\n  ByocTrunkInstance: ByocTrunkInstance,\n  ByocTrunkContext: ByocTrunkContext\n};\n"],"mappings":"AAAA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AAEA,IAAIA,CAAC,GAAGC,OAAO,CAAC,GAAD,CAAf;AAAuB;;;AACvB,IAAIC,CAAC,GAAGD,OAAO,CAAC,QAAD,CAAf;AAA4B;;;AAC5B,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAAlB;AAA6B;;;AAC7B,IAAIG,IAAI,GAAGH,OAAO,CAAC,oBAAD,CAAlB;AAA2C;;;AAC3C,IAAII,WAAW,GAAGJ,OAAO,CACrB,2BADqB,CAAzB;AACmC;;;AACnC,IAAIK,SAAS,GAAGL,OAAO,CAAC,yBAAD,CAAvB;AAAqD;;;AACrD,IAAIM,MAAM,GAAGN,OAAO,CAAC,sBAAD,CAApB;AAA+C;;;AAE/C,IAAIO,aAAJ;AACA,IAAIC,aAAJ;AACA,IAAIC,iBAAJ;AACA,IAAIC,gBAAJ;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACAH,aAAa,GAAG,SAASA,aAAT,CAAuBI,OAAvB,EAAgC;EAC9C;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EACE;EACA,SAASC,qBAAT,CAA+BC,GAA/B,EAAoC;IAClC,OAAOD,qBAAqB,CAACE,GAAtB,CAA0BD,GAA1B,CAAP;EACD;;EAEDD,qBAAqB,CAACG,QAAtB,GAAiCJ,OAAjC,CAf8C,CAgB9C;;EACAC,qBAAqB,CAACI,SAAtB,GAAkC,EAAlC;EACAJ,qBAAqB,CAACK,IAAtB,GAA8B,aAA9B;EACA;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE;;EACAL,qBAAqB,CAACM,MAAtB,GAA+B,SAASA,MAAT,CAAgBC,IAAhB,EAAsBC,QAAtB,EAAgC;IAC7D,IAAInB,CAAC,CAACoB,UAAF,CAAaF,IAAb,CAAJ,EAAwB;MACtBC,QAAQ,GAAGD,IAAX;MACAA,IAAI,GAAG,EAAP;IACD;;IACDA,IAAI,GAAGA,IAAI,IAAI,EAAf;IAEA,IAAIG,QAAQ,GAAGvB,CAAC,CAACwB,KAAF,EAAf;IACA,IAAIC,IAAI,GAAGlB,MAAM,CAACmB,EAAP,CAAU;MACnB,gBAAgBxB,CAAC,CAACa,GAAF,CAAMK,IAAN,EAAY,cAAZ,CADG;MAEnB,YAAYlB,CAAC,CAACa,GAAF,CAAMK,IAAN,EAAY,UAAZ,CAFO;MAGnB,eAAelB,CAAC,CAACa,GAAF,CAAMK,IAAN,EAAY,aAAZ,CAHI;MAInB,oBAAoBlB,CAAC,CAACa,GAAF,CAAMK,IAAN,EAAY,kBAAZ,CAJD;MAKnB,uBAAuBlB,CAAC,CAACa,GAAF,CAAMK,IAAN,EAAY,qBAAZ,CALJ;MAMnB,qBAAqBlB,CAAC,CAACa,GAAF,CAAMK,IAAN,EAAY,mBAAZ,CANF;MAOnB,wBAAwBlB,CAAC,CAACa,GAAF,CAAMK,IAAN,EAAY,sBAAZ,CAPL;MAQnB,qBAAqBd,SAAS,CAACqB,IAAV,CAAezB,CAAC,CAACa,GAAF,CAAMK,IAAN,EAAY,mBAAZ,CAAf,CARF;MASnB,uBAAuBlB,CAAC,CAACa,GAAF,CAAMK,IAAN,EAAY,qBAAZ,CATJ;MAUnB,iBAAiBlB,CAAC,CAACa,GAAF,CAAMK,IAAN,EAAY,eAAZ;IAVE,CAAV,CAAX;;IAaA,IAAIQ,OAAO,GAAG,KAAKZ,QAAL,CAAcG,MAAd,CAAqB;MAACU,GAAG,EAAE,KAAKX,IAAX;MAAiBY,MAAM,EAAE,MAAzB;MAAiCL,IAAI,EAAEA;IAAvC,CAArB,CAAd;;IAEAG,OAAO,GAAGA,OAAO,CAACG,IAAR,CAAa,UAASC,OAAT,EAAkB;MACvCT,QAAQ,CAACU,OAAT,CAAiB,IAAIvB,iBAAJ,CAAsB,KAAKM,QAA3B,EAAqCgB,OAArC,EAA8C,KAAKf,SAAL,CAAeH,GAA7D,CAAjB;IACD,CAFsB,CAErBoB,IAFqB,CAEhB,IAFgB,CAAb,CAAV;IAIAN,OAAO,CAACO,KAAR,CAAc,UAASC,KAAT,EAAgB;MAC5Bb,QAAQ,CAACc,MAAT,CAAgBD,KAAhB;IACD,CAFD;;IAIA,IAAIlC,CAAC,CAACoB,UAAF,CAAaD,QAAb,CAAJ,EAA4B;MAC1BE,QAAQ,CAACK,OAAT,CAAiBU,OAAjB,CAAyBjB,QAAzB;IACD;;IAED,OAAOE,QAAQ,CAACK,OAAhB;EACD,CApCD;EAsCA;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE;;;EACAf,qBAAqB,CAAC0B,IAAtB,GAA6B,SAASA,IAAT,CAAcnB,IAAd,EAAoBC,QAApB,EAA8B;IACzD,IAAInB,CAAC,CAACoB,UAAF,CAAaF,IAAb,CAAJ,EAAwB;MACtBC,QAAQ,GAAGD,IAAX;MACAA,IAAI,GAAG,EAAP;IACD;;IACDA,IAAI,GAAGA,IAAI,IAAI,EAAf;;IACA,IAAIA,IAAI,CAACC,QAAT,EAAmB;MACjBA,QAAQ,GAAGD,IAAI,CAACC,QAAhB;IACD;;IACD,IAAInB,CAAC,CAACsC,WAAF,CAAcnB,QAAd,CAAJ,EAA6B;MAC3B,MAAM,IAAIoB,KAAJ,CAAU,oCAAV,CAAN;IACD;;IAED,IAAIC,IAAI,GAAG,KAAX;IACA,IAAIC,WAAW,GAAG,CAAlB;IACA,IAAIC,eAAe,GAAG,CAAtB;;IACA,IAAIC,MAAM,GAAG,KAAK7B,QAAL,CAAc8B,UAAd,CAAyB;MACpCC,KAAK,EAAE3B,IAAI,CAAC2B,KADwB;MAEpCC,QAAQ,EAAE5B,IAAI,CAAC4B;IAFqB,CAAzB,CAAb;;IAKA,SAASC,UAAT,CAAoBb,KAApB,EAA2B;MACzBM,IAAI,GAAG,IAAP;;MACA,IAAIxC,CAAC,CAACoB,UAAF,CAAaF,IAAI,CAACsB,IAAlB,CAAJ,EAA6B;QAC3BtB,IAAI,CAACsB,IAAL,CAAUN,KAAV;MACD;IACF;;IAED,SAASc,aAAT,CAAuBC,EAAvB,EAA2B;MACzB,IAAIvB,OAAO,GAAGuB,EAAE,EAAhB;;MACA,IAAIjD,CAAC,CAACsC,WAAF,CAAcZ,OAAd,CAAJ,EAA4B;QAC1BqB,UAAU;QACV;MACD;;MAEDrB,OAAO,CAACG,IAAR,CAAa,UAASqB,IAAT,EAAe;QAC1BlD,CAAC,CAACqC,IAAF,CAAOa,IAAI,CAACC,SAAZ,EAAuB,UAASC,QAAT,EAAmB;UACxC,IAAIZ,IAAI,IAAK,CAACxC,CAAC,CAACsC,WAAF,CAAcpB,IAAI,CAAC2B,KAAnB,CAAD,IAA8BH,eAAe,IAAIxB,IAAI,CAAC2B,KAAnE,EAA2E;YACzEL,IAAI,GAAG,IAAP;YACA,OAAO,KAAP;UACD;;UAEDE,eAAe;UACfvB,QAAQ,CAACiC,QAAD,EAAWL,UAAX,CAAR;QACD,CARD;;QAUA,IAAI,CAACP,IAAL,EAAW;UACTC,WAAW;UACXO,aAAa,CAAChD,CAAC,CAACgC,IAAF,CAAOkB,IAAI,CAACG,QAAZ,EAAsBH,IAAtB,CAAD,CAAb;QACD,CAHD,MAGO;UACLH,UAAU;QACX;MACF,CAjBD;MAmBArB,OAAO,CAACO,KAAR,CAAcc,UAAd;IACD;;IAEDC,aAAa,CAAChD,CAAC,CAACgC,IAAF,CAAO,KAAKkB,IAAZ,EAAkB,IAAlB,EAAwBlD,CAAC,CAACsD,KAAF,CAAQpC,IAAR,EAAcyB,MAAd,CAAxB,CAAD,CAAb;EACD,CA1DD;EA4DA;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE;;;EACAhC,qBAAqB,CAAC4C,IAAtB,GAA6B,SAASA,IAAT,CAAcrC,IAAd,EAAoBC,QAApB,EAA8B;IACzD,IAAInB,CAAC,CAACoB,UAAF,CAAaF,IAAb,CAAJ,EAAwB;MACtBC,QAAQ,GAAGD,IAAX;MACAA,IAAI,GAAG,EAAP;IACD;;IACDA,IAAI,GAAGA,IAAI,IAAI,EAAf;IACA,IAAIG,QAAQ,GAAGvB,CAAC,CAACwB,KAAF,EAAf;IACA,IAAIkC,YAAY,GAAG,EAAnB;;IACAtC,IAAI,CAACC,QAAL,GAAgB,UAASsC,QAAT,EAAmBjB,IAAnB,EAAyB;MACvCgB,YAAY,CAACE,IAAb,CAAkBD,QAAlB;;MAEA,IAAI,CAACzD,CAAC,CAACsC,WAAF,CAAcpB,IAAI,CAAC2B,KAAnB,CAAD,IAA8BW,YAAY,CAACG,MAAb,KAAwBzC,IAAI,CAAC2B,KAA/D,EAAsE;QACpEL,IAAI;MACL;IACF,CAND;;IAQAtB,IAAI,CAACsB,IAAL,GAAY,UAASN,KAAT,EAAgB;MAC1B,IAAIlC,CAAC,CAACsC,WAAF,CAAcJ,KAAd,CAAJ,EAA0B;QACxBb,QAAQ,CAACU,OAAT,CAAiByB,YAAjB;MACD,CAFD,MAEO;QACLnC,QAAQ,CAACc,MAAT,CAAgBD,KAAhB;MACD;IACF,CAND;;IAQA,IAAIlC,CAAC,CAACoB,UAAF,CAAaD,QAAb,CAAJ,EAA4B;MAC1BE,QAAQ,CAACK,OAAT,CAAiBU,OAAjB,CAAyBjB,QAAzB;IACD;;IAED,KAAKkB,IAAL,CAAUnB,IAAV;IACA,OAAOG,QAAQ,CAACK,OAAhB;EACD,CA9BD;EAgCA;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE;;;EACAf,qBAAqB,CAACuC,IAAtB,GAA6B,SAASA,IAAT,CAAchC,IAAd,EAAoBC,QAApB,EAA8B;IACzD,IAAInB,CAAC,CAACoB,UAAF,CAAaF,IAAb,CAAJ,EAAwB;MACtBC,QAAQ,GAAGD,IAAX;MACAA,IAAI,GAAG,EAAP;IACD;;IACDA,IAAI,GAAGA,IAAI,IAAI,EAAf;IAEA,IAAIG,QAAQ,GAAGvB,CAAC,CAACwB,KAAF,EAAf;IACA,IAAIC,IAAI,GAAGlB,MAAM,CAACmB,EAAP,CAAU;MACnB,aAAaN,IAAI,CAAC0C,SADC;MAEnB,QAAQ1C,IAAI,CAAC2C,UAFM;MAGnB,YAAY3C,IAAI,CAAC4B;IAHE,CAAV,CAAX;;IAMA,IAAIpB,OAAO,GAAG,KAAKZ,QAAL,CAAcoC,IAAd,CAAmB;MAACvB,GAAG,EAAE,KAAKX,IAAX;MAAiBY,MAAM,EAAE,KAAzB;MAAgCkC,MAAM,EAAEvC;IAAxC,CAAnB,CAAd;;IAEAG,OAAO,GAAGA,OAAO,CAACG,IAAR,CAAa,UAASC,OAAT,EAAkB;MACvCT,QAAQ,CAACU,OAAT,CAAiB,IAAIxB,aAAJ,CAAkB,KAAKO,QAAvB,EAAiCgB,OAAjC,EAA0C,KAAKf,SAA/C,CAAjB;IACD,CAFsB,CAErBiB,IAFqB,CAEhB,IAFgB,CAAb,CAAV;IAIAN,OAAO,CAACO,KAAR,CAAc,UAASC,KAAT,EAAgB;MAC5Bb,QAAQ,CAACc,MAAT,CAAgBD,KAAhB;IACD,CAFD;;IAIA,IAAIlC,CAAC,CAACoB,UAAF,CAAaD,QAAb,CAAJ,EAA4B;MAC1BE,QAAQ,CAACK,OAAT,CAAiBU,OAAjB,CAAyBjB,QAAzB;IACD;;IAED,OAAOE,QAAQ,CAACK,OAAhB;EACD,CA7BD;EA+BA;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE;;;EACAf,qBAAqB,CAACoD,OAAtB,GAAgC,SAASA,OAAT,CAAiBC,SAAjB,EAA4B7C,QAA5B,EAAsC;IACpE,IAAIE,QAAQ,GAAGvB,CAAC,CAACwB,KAAF,EAAf;;IAEA,IAAII,OAAO,GAAG,KAAKZ,QAAL,CAAcmD,OAAd,CAAsBC,MAAtB,CAA6BC,OAA7B,CAAqC;MAACvC,MAAM,EAAE,KAAT;MAAgBD,GAAG,EAAEqC;IAArB,CAArC,CAAd;;IAEAtC,OAAO,GAAGA,OAAO,CAACG,IAAR,CAAa,UAASC,OAAT,EAAkB;MACvCT,QAAQ,CAACU,OAAT,CAAiB,IAAIxB,aAAJ,CAAkB,KAAKO,QAAvB,EAAiCgB,OAAjC,EAA0C,KAAKf,SAA/C,CAAjB;IACD,CAFsB,CAErBiB,IAFqB,CAEhB,IAFgB,CAAb,CAAV;IAIAN,OAAO,CAACO,KAAR,CAAc,UAASC,KAAT,EAAgB;MAC5Bb,QAAQ,CAACc,MAAT,CAAgBD,KAAhB;IACD,CAFD;;IAIA,IAAIlC,CAAC,CAACoB,UAAF,CAAaD,QAAb,CAAJ,EAA4B;MAC1BE,QAAQ,CAACK,OAAT,CAAiBU,OAAjB,CAAyBjB,QAAzB;IACD;;IAED,OAAOE,QAAQ,CAACK,OAAhB;EACD,CAlBD;EAoBA;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE;;;EACAf,qBAAqB,CAACE,GAAtB,GAA4B,SAASA,GAAT,CAAaD,GAAb,EAAkB;IAC5C,OAAO,IAAIH,gBAAJ,CAAqB,KAAKK,QAA1B,EAAoCF,GAApC,CAAP;EACD,CAFD;EAIA;;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EACE;;;EACAD,qBAAqB,CAACyD,MAAtB,GAA+B,SAASA,MAAT,GAAkB;IAC/C,OAAO,KAAKrD,SAAZ;EACD,CAFD;;EAIAJ,qBAAqB,CAACV,IAAI,CAACoE,OAAL,CAAaC,MAAd,CAArB,GAA6C,SAASD,OAAT,CAAiBE,KAAjB,EAAwBC,OAAxB,EAAiC;IAC5E,OAAOvE,IAAI,CAACoE,OAAL,CAAa,KAAKD,MAAL,EAAb,EAA4BI,OAA5B,CAAP;EACD,CAFD;;EAIA,OAAO7D,qBAAP;AACD,CA9WD;AAiXA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAJ,aAAa,GAAG,SAASA,aAAT,CAAuBG,OAAvB,EAAgC+D,QAAhC,EAA0CC,QAA1C,EAAoD;EAClE;EACA,KAAK3D,SAAL,GAAiB2D,QAAjB;EAEAxE,IAAI,CAACyE,SAAL,CAAeC,WAAf,CAA2BC,IAA3B,CAAgC,IAAhC,EAAsCnE,OAAtC,EAA+C+D,QAA/C,EAAyD,KAAK1D,SAA9D;AACD,CALD;;AAOAf,CAAC,CAAC8E,MAAF,CAASvE,aAAa,CAACoE,SAAvB,EAAkCzE,IAAI,CAACyE,SAAvC;;AACApE,aAAa,CAACoE,SAAd,CAAwBC,WAAxB,GAAsCrE,aAAtC;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACAA,aAAa,CAACoE,SAAd,CAAwBI,WAAxB,GAAsC,SAASA,WAAT,CAAqBjD,OAArB,EAA8B;EAClE,OAAO,IAAItB,iBAAJ,CAAsB,KAAKM,QAA3B,EAAqCgB,OAArC,CAAP;AACD,CAFD;AAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAvB,aAAa,CAACoE,SAAd,CAAwBP,MAAxB,GAAiC,SAASA,MAAT,GAAkB;EACjD,IAAIY,KAAK,GAAG,EAAZ;;EACAhF,CAAC,CAACiF,MAAF,CAAS,IAAT,EAAe,UAASC,KAAT,EAAgBC,GAAhB,EAAqB;IAClC,IAAI,CAACnF,CAAC,CAACoF,UAAF,CAAaD,GAAb,EAAkB,GAAlB,CAAD,IAA2B,CAAEnF,CAAC,CAACoB,UAAF,CAAa8D,KAAb,CAAjC,EAAsD;MACpDF,KAAK,CAACG,GAAD,CAAL,GAAaD,KAAb;IACD;EACF,CAJD;;EAKA,OAAOF,KAAP;AACD,CARD;;AAUAzE,aAAa,CAACoE,SAAd,CAAwB1E,IAAI,CAACoE,OAAL,CAAaC,MAArC,IAA+C,SAASD,OAAT,CAAiBE,KAAjB,EAAwBC,OAAxB,EAC3C;EACF,OAAOvE,IAAI,CAACoE,OAAL,CAAa,KAAKD,MAAL,EAAb,EAA4BI,OAA5B,CAAP;AACD,CAHD;AAMA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAhE,iBAAiB,GAAG,SAASA,iBAAT,CAA2BE,OAA3B,EAAoCoB,OAApC,EAA6ClB,GAA7C,EAAkD;EACpE,KAAKE,QAAL,GAAgBJ,OAAhB,CADoE,CAGpE;;EACA,KAAK2E,UAAL,GAAkBvD,OAAO,CAACwD,WAA1B,CAJoE,CAI7B;;EACvC,KAAK1E,GAAL,GAAWkB,OAAO,CAAClB,GAAnB,CALoE,CAK5C;;EACxB,KAAK2E,YAAL,GAAoBzD,OAAO,CAAC0D,aAA5B,CANoE,CAMzB;;EAC3C,KAAKC,QAAL,GAAgB3D,OAAO,CAAC4D,SAAxB,CAPoE,CAOjC;;EACnC,KAAKC,WAAL,GAAmB7D,OAAO,CAAC8D,YAA3B,CARoE,CAQ3B;;EACzC,KAAKC,gBAAL,GAAwB/D,OAAO,CAACgE,kBAAhC,CAToE,CAShB;;EACpD,KAAKC,mBAAL,GAA2BjE,OAAO,CAACkE,qBAAnC,CAVoE,CAUV;;EAC1D,KAAKC,iBAAL,GAAyBnE,OAAO,CAACoE,mBAAjC,CAXoE,CAWd;;EACtD,KAAKC,oBAAL,GAA4BrE,OAAO,CAACsE,sBAApC,CAZoE,CAYR;;EAC5D,KAAKC,iBAAL,GAAyBvE,OAAO,CAACwE,mBAAjC,CAboE,CAad;;EACtD,KAAKC,mBAAL,GAA2BzE,OAAO,CAAC0E,qBAAnC,CAdoE,CAcV;;EAC1D,KAAKC,aAAL,GAAqB3E,OAAO,CAAC4E,eAA7B,CAfoE,CAetB;;EAC9C,KAAKC,WAAL,GAAmBxG,WAAW,CAACyG,eAAZ,CAA4B9E,OAAO,CAAC+E,YAApC,CAAnB,CAhBoE,CAgBE;;EACtE,KAAKC,WAAL,GAAmB3G,WAAW,CAACyG,eAAZ,CAA4B9E,OAAO,CAACiF,YAApC,CAAnB,CAjBoE,CAiBE;;EACtE,KAAKC,GAAL,GAAWlF,OAAO,CAACkF,GAAnB,CAlBoE,CAkB5C;EAExB;;EACA,KAAKC,QAAL,GAAgBC,SAAhB;EACA,KAAKnG,SAAL,GAAiB;IAACH,GAAG,EAAEA,GAAG,IAAI,KAAKA;EAAlB,CAAjB;AACD,CAvBD;;AAyBAuG,MAAM,CAACC,cAAP,CAAsB5G,iBAAiB,CAACmE,SAAxC,EACE,QADF,EACY;EACR9D,GAAG,EAAE,YAAW;IACd,IAAI,CAAC,KAAKoG,QAAV,EAAoB;MAClB,KAAKA,QAAL,GAAgB,IAAIxG,gBAAJ,CAAqB,KAAKK,QAA1B,EAAoC,KAAKC,SAAL,CAAeH,GAAnD,CAAhB;IACD;;IAED,OAAO,KAAKqG,QAAZ;EACD;AAPO,CADZ;AAWA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACAzG,iBAAiB,CAACmE,SAAlB,CAA4B0C,KAA5B,GAAoC,SAASA,KAAT,CAAelG,QAAf,EAAyB;EAC3D,OAAO,KAAKmG,MAAL,CAAYD,KAAZ,CAAkBlG,QAAlB,CAAP;AACD,CAFD;AAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAX,iBAAiB,CAACmE,SAAlB,CAA4B4C,MAA5B,GAAqC,SAASA,MAAT,CAAgBrG,IAAhB,EAAsBC,QAAtB,EAAgC;EACnE,OAAO,KAAKmG,MAAL,CAAYC,MAAZ,CAAmBrG,IAAnB,EAAyBC,QAAzB,CAAP;AACD,CAFD;AAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAX,iBAAiB,CAACmE,SAAlB,CAA4B6C,MAA5B,GAAqC,SAASA,MAAT,CAAgBrG,QAAhB,EAA0B;EAC7D,OAAO,KAAKmG,MAAL,CAAYE,MAAZ,CAAmBrG,QAAnB,CAAP;AACD,CAFD;AAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAX,iBAAiB,CAACmE,SAAlB,CAA4BP,MAA5B,GAAqC,SAASA,MAAT,GAAkB;EACrD,IAAIY,KAAK,GAAG,EAAZ;;EACAhF,CAAC,CAACiF,MAAF,CAAS,IAAT,EAAe,UAASC,KAAT,EAAgBC,GAAhB,EAAqB;IAClC,IAAI,CAACnF,CAAC,CAACoF,UAAF,CAAaD,GAAb,EAAkB,GAAlB,CAAD,IAA2B,CAAEnF,CAAC,CAACoB,UAAF,CAAa8D,KAAb,CAAjC,EAAsD;MACpDF,KAAK,CAACG,GAAD,CAAL,GAAaD,KAAb;IACD;EACF,CAJD;;EAKA,OAAOF,KAAP;AACD,CARD;;AAUAxE,iBAAiB,CAACmE,SAAlB,CAA4B1E,IAAI,CAACoE,OAAL,CAAaC,MAAzC,IAAmD,SAASD,OAAT,CAAiBE,KAAjB,EAC/CC,OAD+C,EACtC;EACX,OAAOvE,IAAI,CAACoE,OAAL,CAAa,KAAKD,MAAL,EAAb,EAA4BI,OAA5B,CAAP;AACD,CAHD;AAMA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA/D,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,OAA1B,EAAmCE,GAAnC,EAAwC;EACzD,KAAKE,QAAL,GAAgBJ,OAAhB,CADyD,CAGzD;;EACA,KAAKK,SAAL,GAAiB;IAACH,GAAG,EAAEA;EAAN,CAAjB;EACA,KAAKI,IAAL,GAAa,eAAcJ,GAAI,EAA/B;AACD,CAND;AAQA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAH,gBAAgB,CAACkE,SAAjB,CAA2B0C,KAA3B,GAAmC,SAASA,KAAT,CAAelG,QAAf,EAAyB;EAC1D,IAAIE,QAAQ,GAAGvB,CAAC,CAACwB,KAAF,EAAf;;EACA,IAAII,OAAO,GAAG,KAAKZ,QAAL,CAAcuG,KAAd,CAAoB;IAAC1F,GAAG,EAAE,KAAKX,IAAX;IAAiBY,MAAM,EAAE;EAAzB,CAApB,CAAd;;EAEAF,OAAO,GAAGA,OAAO,CAACG,IAAR,CAAa,UAASC,OAAT,EAAkB;IACvCT,QAAQ,CAACU,OAAT,CAAiB,IAAIvB,iBAAJ,CAAsB,KAAKM,QAA3B,EAAqCgB,OAArC,EAA8C,KAAKf,SAAL,CAAeH,GAA7D,CAAjB;EACD,CAFsB,CAErBoB,IAFqB,CAEhB,IAFgB,CAAb,CAAV;EAIAN,OAAO,CAACO,KAAR,CAAc,UAASC,KAAT,EAAgB;IAC5Bb,QAAQ,CAACc,MAAT,CAAgBD,KAAhB;EACD,CAFD;;EAIA,IAAIlC,CAAC,CAACoB,UAAF,CAAaD,QAAb,CAAJ,EAA4B;IAC1BE,QAAQ,CAACK,OAAT,CAAiBU,OAAjB,CAAyBjB,QAAzB;EACD;;EAED,OAAOE,QAAQ,CAACK,OAAhB;AACD,CAjBD;AAmBA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAjB,gBAAgB,CAACkE,SAAjB,CAA2B4C,MAA3B,GAAoC,SAASA,MAAT,CAAgBrG,IAAhB,EAAsBC,QAAtB,EAAgC;EAClE,IAAInB,CAAC,CAACoB,UAAF,CAAaF,IAAb,CAAJ,EAAwB;IACtBC,QAAQ,GAAGD,IAAX;IACAA,IAAI,GAAG,EAAP;EACD;;EACDA,IAAI,GAAGA,IAAI,IAAI,EAAf;EAEA,IAAIG,QAAQ,GAAGvB,CAAC,CAACwB,KAAF,EAAf;EACA,IAAIC,IAAI,GAAGlB,MAAM,CAACmB,EAAP,CAAU;IACnB,gBAAgBxB,CAAC,CAACa,GAAF,CAAMK,IAAN,EAAY,cAAZ,CADG;IAEnB,YAAYlB,CAAC,CAACa,GAAF,CAAMK,IAAN,EAAY,UAAZ,CAFO;IAGnB,eAAelB,CAAC,CAACa,GAAF,CAAMK,IAAN,EAAY,aAAZ,CAHI;IAInB,oBAAoBlB,CAAC,CAACa,GAAF,CAAMK,IAAN,EAAY,kBAAZ,CAJD;IAKnB,uBAAuBlB,CAAC,CAACa,GAAF,CAAMK,IAAN,EAAY,qBAAZ,CALJ;IAMnB,qBAAqBlB,CAAC,CAACa,GAAF,CAAMK,IAAN,EAAY,mBAAZ,CANF;IAOnB,wBAAwBlB,CAAC,CAACa,GAAF,CAAMK,IAAN,EAAY,sBAAZ,CAPL;IAQnB,qBAAqBd,SAAS,CAACqB,IAAV,CAAezB,CAAC,CAACa,GAAF,CAAMK,IAAN,EAAY,mBAAZ,CAAf,CARF;IASnB,uBAAuBlB,CAAC,CAACa,GAAF,CAAMK,IAAN,EAAY,qBAAZ,CATJ;IAUnB,iBAAiBlB,CAAC,CAACa,GAAF,CAAMK,IAAN,EAAY,eAAZ;EAVE,CAAV,CAAX;;EAaA,IAAIQ,OAAO,GAAG,KAAKZ,QAAL,CAAcyG,MAAd,CAAqB;IAAC5F,GAAG,EAAE,KAAKX,IAAX;IAAiBY,MAAM,EAAE,MAAzB;IAAiCL,IAAI,EAAEA;EAAvC,CAArB,CAAd;;EAEAG,OAAO,GAAGA,OAAO,CAACG,IAAR,CAAa,UAASC,OAAT,EAAkB;IACvCT,QAAQ,CAACU,OAAT,CAAiB,IAAIvB,iBAAJ,CAAsB,KAAKM,QAA3B,EAAqCgB,OAArC,EAA8C,KAAKf,SAAL,CAAeH,GAA7D,CAAjB;EACD,CAFsB,CAErBoB,IAFqB,CAEhB,IAFgB,CAAb,CAAV;EAIAN,OAAO,CAACO,KAAR,CAAc,UAASC,KAAT,EAAgB;IAC5Bb,QAAQ,CAACc,MAAT,CAAgBD,KAAhB;EACD,CAFD;;EAIA,IAAIlC,CAAC,CAACoB,UAAF,CAAaD,QAAb,CAAJ,EAA4B;IAC1BE,QAAQ,CAACK,OAAT,CAAiBU,OAAjB,CAAyBjB,QAAzB;EACD;;EAED,OAAOE,QAAQ,CAACK,OAAhB;AACD,CApCD;AAsCA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAjB,gBAAgB,CAACkE,SAAjB,CAA2B6C,MAA3B,GAAoC,SAASA,MAAT,CAAgBrG,QAAhB,EAA0B;EAC5D,IAAIE,QAAQ,GAAGvB,CAAC,CAACwB,KAAF,EAAf;;EACA,IAAII,OAAO,GAAG,KAAKZ,QAAL,CAAc0G,MAAd,CAAqB;IAAC7F,GAAG,EAAE,KAAKX,IAAX;IAAiBY,MAAM,EAAE;EAAzB,CAArB,CAAd;;EAEAF,OAAO,GAAGA,OAAO,CAACG,IAAR,CAAa,UAASC,OAAT,EAAkB;IACvCT,QAAQ,CAACU,OAAT,CAAiBD,OAAjB;EACD,CAFsB,CAErBE,IAFqB,CAEhB,IAFgB,CAAb,CAAV;EAIAN,OAAO,CAACO,KAAR,CAAc,UAASC,KAAT,EAAgB;IAC5Bb,QAAQ,CAACc,MAAT,CAAgBD,KAAhB;EACD,CAFD;;EAIA,IAAIlC,CAAC,CAACoB,UAAF,CAAaD,QAAb,CAAJ,EAA4B;IAC1BE,QAAQ,CAACK,OAAT,CAAiBU,OAAjB,CAAyBjB,QAAzB;EACD;;EAED,OAAOE,QAAQ,CAACK,OAAhB;AACD,CAjBD;AAmBA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACAjB,gBAAgB,CAACkE,SAAjB,CAA2BP,MAA3B,GAAoC,SAASA,MAAT,GAAkB;EACpD,OAAO,KAAKrD,SAAZ;AACD,CAFD;;AAIAN,gBAAgB,CAACkE,SAAjB,CAA2B1E,IAAI,CAACoE,OAAL,CAAaC,MAAxC,IAAkD,SAASD,OAAT,CAAiBE,KAAjB,EAC9CC,OAD8C,EACrC;EACX,OAAOvE,IAAI,CAACoE,OAAL,CAAa,KAAKD,MAAL,EAAb,EAA4BI,OAA5B,CAAP;AACD,CAHD;;AAKAiD,MAAM,CAACC,OAAP,GAAiB;EACfpH,aAAa,EAAEA,aADA;EAEfC,aAAa,EAAEA,aAFA;EAGfC,iBAAiB,EAAEA,iBAHJ;EAIfC,gBAAgB,EAAEA;AAJH,CAAjB"},"metadata":{},"sourceType":"script"}