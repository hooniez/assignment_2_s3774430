{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../../base/values');\n/* jshint ignore:line */\n\n\nvar TaskActionsList;\nvar TaskActionsPage;\nvar TaskActionsInstance;\nvar TaskActionsContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the TaskActionsList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsList\n *\n * @param {Twilio.Preview.Understand} version - Version of the resource\n * @param {string} assistantSid - The unique ID of the parent Assistant.\n * @param {string} taskSid - The unique ID of the Task.\n */\n\n/* jshint ignore:end */\n\nTaskActionsList = function TaskActionsList(version, assistantSid, taskSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function taskActions\n   * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsContext}\n   */\n\n  /* jshint ignore:end */\n  function TaskActionsListInstance(sid) {\n    return TaskActionsListInstance.get(sid);\n  }\n\n  TaskActionsListInstance._version = version; // Path Solution\n\n  TaskActionsListInstance._solution = {\n    assistantSid: assistantSid,\n    taskSid: taskSid\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a task_actions\n   *\n   * @function get\n   * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsList#\n   *\n   * @returns {Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsContext}\n   */\n\n  /* jshint ignore:end */\n\n  TaskActionsListInstance.get = function get() {\n    return new TaskActionsContext(this._version, this._solution.assistantSid, this._solution.taskSid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  TaskActionsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  TaskActionsListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return TaskActionsListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the TaskActionsPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsPage\n *\n * @param {Understand} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {TaskActionsSolution} solution - Path solution\n *\n * @returns TaskActionsPage\n */\n\n/* jshint ignore:end */\n\n\nTaskActionsPage = function TaskActionsPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(TaskActionsPage.prototype, Page.prototype);\n\nTaskActionsPage.prototype.constructor = TaskActionsPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of TaskActionsInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsPage#\n *\n * @param {TaskActionsPayload} payload - Payload response from the API\n *\n * @returns TaskActionsInstance\n */\n\n/* jshint ignore:end */\n\nTaskActionsPage.prototype.getInstance = function getInstance(payload) {\n  return new TaskActionsInstance(this._version, payload, this._solution.assistantSid, this._solution.taskSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nTaskActionsPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nTaskActionsPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the TaskActionsContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsInstance\n *\n * @property {string} accountSid -\n *          The unique ID of the Account that created this Field.\n * @property {string} assistantSid - The unique ID of the parent Assistant.\n * @property {string} taskSid - The unique ID of the Task.\n * @property {string} url - The url\n * @property {object} data - The data\n *\n * @param {Understand} version - Version of the resource\n * @param {TaskActionsPayload} payload - The instance payload\n * @param {sid} assistantSid - The unique ID of the parent Assistant.\n * @param {sid} taskSid - The unique ID of the Task.\n */\n\n/* jshint ignore:end */\n\n\nTaskActionsInstance = function TaskActionsInstance(version, payload, assistantSid, taskSid) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.assistantSid = payload.assistant_sid; // jshint ignore:line\n\n  this.taskSid = payload.task_sid; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n\n  this.data = payload.data; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    assistantSid: assistantSid,\n    taskSid: taskSid\n  };\n};\n\nObject.defineProperty(TaskActionsInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new TaskActionsContext(this._version, this._solution.assistantSid, this._solution.taskSid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a TaskActionsInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TaskActionsInstance\n */\n\n/* jshint ignore:end */\n\nTaskActionsInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * update a TaskActionsInstance\n *\n * @function update\n * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {object} [opts.actions] -\n *          The JSON actions that instruct the Assistant how to perform this task.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TaskActionsInstance\n */\n\n/* jshint ignore:end */\n\n\nTaskActionsInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nTaskActionsInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nTaskActionsInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the TaskActionsContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsContext\n *\n * @param {Understand} version - Version of the resource\n * @param {sid_like} assistantSid - The unique ID of the parent Assistant.\n * @param {sid_like} taskSid - The unique ID of the Task.\n */\n\n/* jshint ignore:end */\n\n\nTaskActionsContext = function TaskActionsContext(version, assistantSid, taskSid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    assistantSid: assistantSid,\n    taskSid: taskSid\n  };\n  this._uri = `/Assistants/${assistantSid}/Tasks/${taskSid}/Actions`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a TaskActionsInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TaskActionsInstance\n */\n\n/* jshint ignore:end */\n\n\nTaskActionsContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new TaskActionsInstance(this._version, payload, this._solution.assistantSid, this._solution.taskSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * update a TaskActionsInstance\n *\n * @function update\n * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsContext#\n *\n * @param {object} [opts] - Options for request\n * @param {object} [opts.actions] -\n *          The JSON actions that instruct the Assistant how to perform this task.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TaskActionsInstance\n */\n\n/* jshint ignore:end */\n\n\nTaskActionsContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'Actions': serialize.object(_.get(opts, 'actions'))\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new TaskActionsInstance(this._version, payload, this._solution.assistantSid, this._solution.taskSid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nTaskActionsContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nTaskActionsContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  TaskActionsList: TaskActionsList,\n  TaskActionsPage: TaskActionsPage,\n  TaskActionsInstance: TaskActionsInstance,\n  TaskActionsContext: TaskActionsContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","serialize","values","TaskActionsList","TaskActionsPage","TaskActionsInstance","TaskActionsContext","version","assistantSid","taskSid","TaskActionsListInstance","sid","get","_version","_solution","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","accountSid","account_sid","assistant_sid","task_sid","url","data","_context","undefined","Object","defineProperty","fetch","callback","_proxy","update","opts","_uri","deferred","defer","promise","uri","method","then","resolve","bind","catch","error","reject","nodeify","of","object","module","exports"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/twilio/lib/rest/preview/understand/assistant/task/taskActions.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar serialize = require(\n    '../../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar TaskActionsList;\nvar TaskActionsPage;\nvar TaskActionsInstance;\nvar TaskActionsContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskActionsList\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsList\n *\n * @param {Twilio.Preview.Understand} version - Version of the resource\n * @param {string} assistantSid - The unique ID of the parent Assistant.\n * @param {string} taskSid - The unique ID of the Task.\n */\n/* jshint ignore:end */\nTaskActionsList = function TaskActionsList(version, assistantSid, taskSid) {\n  /* jshint ignore:start */\n  /**\n   * @function taskActions\n   * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsContext}\n   */\n  /* jshint ignore:end */\n  function TaskActionsListInstance(sid) {\n    return TaskActionsListInstance.get(sid);\n  }\n\n  TaskActionsListInstance._version = version;\n  // Path Solution\n  TaskActionsListInstance._solution = {assistantSid: assistantSid, taskSid: taskSid};\n  /* jshint ignore:start */\n  /**\n   * Constructs a task_actions\n   *\n   * @function get\n   * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsList#\n   *\n   * @returns {Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsContext}\n   */\n  /* jshint ignore:end */\n  TaskActionsListInstance.get = function get() {\n    return new TaskActionsContext(this._version, this._solution.assistantSid, this._solution.taskSid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  TaskActionsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  TaskActionsListInstance[util.inspect.custom] = function inspect(depth, options)\n      {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return TaskActionsListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskActionsPage\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsPage\n *\n * @param {Understand} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {TaskActionsSolution} solution - Path solution\n *\n * @returns TaskActionsPage\n */\n/* jshint ignore:end */\nTaskActionsPage = function TaskActionsPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(TaskActionsPage.prototype, Page.prototype);\nTaskActionsPage.prototype.constructor = TaskActionsPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of TaskActionsInstance\n *\n * @function getInstance\n * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsPage#\n *\n * @param {TaskActionsPayload} payload - Payload response from the API\n *\n * @returns TaskActionsInstance\n */\n/* jshint ignore:end */\nTaskActionsPage.prototype.getInstance = function getInstance(payload) {\n  return new TaskActionsInstance(\n    this._version,\n    payload,\n    this._solution.assistantSid,\n    this._solution.taskSid\n  );\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTaskActionsPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nTaskActionsPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskActionsContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsInstance\n *\n * @property {string} accountSid -\n *          The unique ID of the Account that created this Field.\n * @property {string} assistantSid - The unique ID of the parent Assistant.\n * @property {string} taskSid - The unique ID of the Task.\n * @property {string} url - The url\n * @property {object} data - The data\n *\n * @param {Understand} version - Version of the resource\n * @param {TaskActionsPayload} payload - The instance payload\n * @param {sid} assistantSid - The unique ID of the parent Assistant.\n * @param {sid} taskSid - The unique ID of the Task.\n */\n/* jshint ignore:end */\nTaskActionsInstance = function TaskActionsInstance(version, payload,\n                                                    assistantSid, taskSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.assistantSid = payload.assistant_sid; // jshint ignore:line\n  this.taskSid = payload.task_sid; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.data = payload.data; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {assistantSid: assistantSid, taskSid: taskSid, };\n};\n\nObject.defineProperty(TaskActionsInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new TaskActionsContext(\n          this._version,\n          this._solution.assistantSid,\n          this._solution.taskSid\n        );\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a TaskActionsInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TaskActionsInstance\n */\n/* jshint ignore:end */\nTaskActionsInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a TaskActionsInstance\n *\n * @function update\n * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {object} [opts.actions] -\n *          The JSON actions that instruct the Assistant how to perform this task.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TaskActionsInstance\n */\n/* jshint ignore:end */\nTaskActionsInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTaskActionsInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nTaskActionsInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the TaskActionsContext\n *\n * PLEASE NOTE that this class contains preview products that are subject to\n * change. Use them with caution. If you currently do not have developer preview\n * access, please contact help@twilio.com.\n *\n * @constructor Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsContext\n *\n * @param {Understand} version - Version of the resource\n * @param {sid_like} assistantSid - The unique ID of the parent Assistant.\n * @param {sid_like} taskSid - The unique ID of the Task.\n */\n/* jshint ignore:end */\nTaskActionsContext = function TaskActionsContext(version, assistantSid, taskSid)\n                                                  {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {assistantSid: assistantSid, taskSid: taskSid, };\n  this._uri = `/Assistants/${assistantSid}/Tasks/${taskSid}/Actions`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a TaskActionsInstance\n *\n * @function fetch\n * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TaskActionsInstance\n */\n/* jshint ignore:end */\nTaskActionsContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new TaskActionsInstance(\n      this._version,\n      payload,\n      this._solution.assistantSid,\n      this._solution.taskSid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a TaskActionsInstance\n *\n * @function update\n * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsContext#\n *\n * @param {object} [opts] - Options for request\n * @param {object} [opts.actions] -\n *          The JSON actions that instruct the Assistant how to perform this task.\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed TaskActionsInstance\n */\n/* jshint ignore:end */\nTaskActionsContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({'Actions': serialize.object(_.get(opts, 'actions'))});\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new TaskActionsInstance(\n      this._version,\n      payload,\n      this._solution.assistantSid,\n      this._solution.taskSid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Preview.Understand.AssistantContext.TaskContext.TaskActionsContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nTaskActionsContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nTaskActionsContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  TaskActionsList: TaskActionsList,\n  TaskActionsPage: TaskActionsPage,\n  TaskActionsInstance: TaskActionsInstance,\n  TaskActionsContext: TaskActionsContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}