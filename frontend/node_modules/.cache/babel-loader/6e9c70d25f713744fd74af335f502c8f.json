{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../base/Page');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../base/values');\n/* jshint ignore:line */\n\n\nvar UserList;\nvar UserPage;\nvar UserInstance;\nvar UserContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the UserList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.FrontlineApi.V1.UserList\n *\n * @param {Twilio.FrontlineApi.V1} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nUserList = function UserList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function users\n   * @memberof Twilio.FrontlineApi.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.FrontlineApi.V1.UserContext}\n   */\n\n  /* jshint ignore:end */\n  function UserListInstance(sid) {\n    return UserListInstance.get(sid);\n  }\n\n  UserListInstance._version = version; // Path Solution\n\n  UserListInstance._solution = {};\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a user\n   *\n   * @function get\n   * @memberof Twilio.FrontlineApi.V1.UserList#\n   *\n   * @param {string} sid - The SID of the User resource to fetch\n   *\n   * @returns {Twilio.FrontlineApi.V1.UserContext}\n   */\n\n  /* jshint ignore:end */\n\n  UserListInstance.get = function get(sid) {\n    return new UserContext(this._version, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.FrontlineApi.V1.UserList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  UserListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  UserListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return UserListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the UserPage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.FrontlineApi.V1.UserPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {UserSolution} solution - Path solution\n *\n * @returns UserPage\n */\n\n/* jshint ignore:end */\n\n\nUserPage = function UserPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(UserPage.prototype, Page.prototype);\n\nUserPage.prototype.constructor = UserPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of UserInstance\n *\n * @function getInstance\n * @memberof Twilio.FrontlineApi.V1.UserPage#\n *\n * @param {UserPayload} payload - Payload response from the API\n *\n * @returns UserInstance\n */\n\n/* jshint ignore:end */\n\nUserPage.prototype.getInstance = function getInstance(payload) {\n  return new UserInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.FrontlineApi.V1.UserPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nUserPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nUserPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the UserContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.FrontlineApi.V1.UserInstance\n *\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} identity - The string that identifies the resource's User\n * @property {string} friendlyName -\n *          The string that you assigned to describe the User\n * @property {string} avatar -\n *          The avatar URL which will be shown in Frontline application\n * @property {user.state_type} state - Current state of this user\n * @property {boolean} isAvailable -\n *          Whether the User is available for new conversations\n * @property {string} url - An absolute URL for this user.\n *\n * @param {V1} version - Version of the resource\n * @param {UserPayload} payload - The instance payload\n * @param {string} sid - The SID of the User resource to fetch\n */\n\n/* jshint ignore:end */\n\n\nUserInstance = function UserInstance(version, payload, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.identity = payload.identity; // jshint ignore:line\n\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n\n  this.avatar = payload.avatar; // jshint ignore:line\n\n  this.state = payload.state; // jshint ignore:line\n\n  this.isAvailable = payload.is_available; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(UserInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new UserContext(this._version, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a UserInstance\n *\n * @function fetch\n * @memberof Twilio.FrontlineApi.V1.UserInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed UserInstance\n */\n\n/* jshint ignore:end */\n\nUserInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * update a UserInstance\n *\n * @function update\n * @memberof Twilio.FrontlineApi.V1.UserInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] -\n *          The string that you assigned to describe the User\n * @param {string} [opts.avatar] -\n *          The avatar URL which will be shown in Frontline application\n * @param {user.state_type} [opts.state] - Current state of this user\n * @param {boolean} [opts.isAvailable] -\n *          Whether the User is available for new conversations\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed UserInstance\n */\n\n/* jshint ignore:end */\n\n\nUserInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.FrontlineApi.V1.UserInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nUserInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nUserInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the UserContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.FrontlineApi.V1.UserContext\n *\n * @param {V1} version - Version of the resource\n * @param {string} sid - The SID of the User resource to fetch\n */\n\n/* jshint ignore:end */\n\n\nUserContext = function UserContext(version, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    sid: sid\n  };\n  this._uri = `/Users/${sid}`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a UserInstance\n *\n * @function fetch\n * @memberof Twilio.FrontlineApi.V1.UserContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed UserInstance\n */\n\n/* jshint ignore:end */\n\n\nUserContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new UserInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * update a UserInstance\n *\n * @function update\n * @memberof Twilio.FrontlineApi.V1.UserContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] -\n *          The string that you assigned to describe the User\n * @param {string} [opts.avatar] -\n *          The avatar URL which will be shown in Frontline application\n * @param {user.state_type} [opts.state] - Current state of this user\n * @param {boolean} [opts.isAvailable] -\n *          Whether the User is available for new conversations\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed UserInstance\n */\n\n/* jshint ignore:end */\n\n\nUserContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'Avatar': _.get(opts, 'avatar'),\n    'State': _.get(opts, 'state'),\n    'IsAvailable': serialize.bool(_.get(opts, 'isAvailable'))\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new UserInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.FrontlineApi.V1.UserContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nUserContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nUserContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  UserList: UserList,\n  UserPage: UserPage,\n  UserInstance: UserInstance,\n  UserContext: UserContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","serialize","values","UserList","UserPage","UserInstance","UserContext","version","UserListInstance","sid","get","_version","_solution","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","identity","friendlyName","friendly_name","avatar","state","isAvailable","is_available","url","_context","undefined","Object","defineProperty","fetch","callback","_proxy","update","opts","_uri","deferred","defer","promise","uri","method","then","resolve","bind","catch","error","reject","nodeify","data","of","bool","module","exports"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/twilio/lib/rest/frontlineApi/v1/user.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar serialize = require('../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar UserList;\nvar UserPage;\nvar UserInstance;\nvar UserContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the UserList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.FrontlineApi.V1.UserList\n *\n * @param {Twilio.FrontlineApi.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nUserList = function UserList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function users\n   * @memberof Twilio.FrontlineApi.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.FrontlineApi.V1.UserContext}\n   */\n  /* jshint ignore:end */\n  function UserListInstance(sid) {\n    return UserListInstance.get(sid);\n  }\n\n  UserListInstance._version = version;\n  // Path Solution\n  UserListInstance._solution = {};\n  /* jshint ignore:start */\n  /**\n   * Constructs a user\n   *\n   * @function get\n   * @memberof Twilio.FrontlineApi.V1.UserList#\n   *\n   * @param {string} sid - The SID of the User resource to fetch\n   *\n   * @returns {Twilio.FrontlineApi.V1.UserContext}\n   */\n  /* jshint ignore:end */\n  UserListInstance.get = function get(sid) {\n    return new UserContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.FrontlineApi.V1.UserList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  UserListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  UserListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return UserListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the UserPage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.FrontlineApi.V1.UserPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {UserSolution} solution - Path solution\n *\n * @returns UserPage\n */\n/* jshint ignore:end */\nUserPage = function UserPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(UserPage.prototype, Page.prototype);\nUserPage.prototype.constructor = UserPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of UserInstance\n *\n * @function getInstance\n * @memberof Twilio.FrontlineApi.V1.UserPage#\n *\n * @param {UserPayload} payload - Payload response from the API\n *\n * @returns UserInstance\n */\n/* jshint ignore:end */\nUserPage.prototype.getInstance = function getInstance(payload) {\n  return new UserInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.FrontlineApi.V1.UserPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nUserPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nUserPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the UserContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.FrontlineApi.V1.UserInstance\n *\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} identity - The string that identifies the resource's User\n * @property {string} friendlyName -\n *          The string that you assigned to describe the User\n * @property {string} avatar -\n *          The avatar URL which will be shown in Frontline application\n * @property {user.state_type} state - Current state of this user\n * @property {boolean} isAvailable -\n *          Whether the User is available for new conversations\n * @property {string} url - An absolute URL for this user.\n *\n * @param {V1} version - Version of the resource\n * @param {UserPayload} payload - The instance payload\n * @param {string} sid - The SID of the User resource to fetch\n */\n/* jshint ignore:end */\nUserInstance = function UserInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.identity = payload.identity; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.avatar = payload.avatar; // jshint ignore:line\n  this.state = payload.state; // jshint ignore:line\n  this.isAvailable = payload.is_available; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {sid: sid || this.sid, };\n};\n\nObject.defineProperty(UserInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new UserContext(this._version, this._solution.sid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a UserInstance\n *\n * @function fetch\n * @memberof Twilio.FrontlineApi.V1.UserInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed UserInstance\n */\n/* jshint ignore:end */\nUserInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a UserInstance\n *\n * @function update\n * @memberof Twilio.FrontlineApi.V1.UserInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] -\n *          The string that you assigned to describe the User\n * @param {string} [opts.avatar] -\n *          The avatar URL which will be shown in Frontline application\n * @param {user.state_type} [opts.state] - Current state of this user\n * @param {boolean} [opts.isAvailable] -\n *          Whether the User is available for new conversations\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed UserInstance\n */\n/* jshint ignore:end */\nUserInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.FrontlineApi.V1.UserInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nUserInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nUserInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the UserContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.FrontlineApi.V1.UserContext\n *\n * @param {V1} version - Version of the resource\n * @param {string} sid - The SID of the User resource to fetch\n */\n/* jshint ignore:end */\nUserContext = function UserContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {sid: sid, };\n  this._uri = `/Users/${sid}`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a UserInstance\n *\n * @function fetch\n * @memberof Twilio.FrontlineApi.V1.UserContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed UserInstance\n */\n/* jshint ignore:end */\nUserContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new UserInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a UserInstance\n *\n * @function update\n * @memberof Twilio.FrontlineApi.V1.UserContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.friendlyName] -\n *          The string that you assigned to describe the User\n * @param {string} [opts.avatar] -\n *          The avatar URL which will be shown in Frontline application\n * @param {user.state_type} [opts.state] - Current state of this user\n * @param {boolean} [opts.isAvailable] -\n *          Whether the User is available for new conversations\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed UserInstance\n */\n/* jshint ignore:end */\nUserContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'Avatar': _.get(opts, 'avatar'),\n    'State': _.get(opts, 'state'),\n    'IsAvailable': serialize.bool(_.get(opts, 'isAvailable'))\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new UserInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.FrontlineApi.V1.UserContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nUserContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nUserContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  UserList: UserList,\n  UserPage: UserPage,\n  UserInstance: UserInstance,\n  UserContext: UserContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}