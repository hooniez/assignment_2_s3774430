{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar OriginationUrlList;\nvar OriginationUrlPage;\nvar OriginationUrlInstance;\nvar OriginationUrlContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the OriginationUrlList\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.OriginationUrlList\n *\n * @param {Twilio.Trunking.V1} version - Version of the resource\n * @param {string} trunkSid - The SID of the Trunk that owns the Origination URL\n */\n\n/* jshint ignore:end */\n\nOriginationUrlList = function OriginationUrlList(version, trunkSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function originationUrls\n   * @memberof Twilio.Trunking.V1.TrunkContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Trunking.V1.TrunkContext.OriginationUrlContext}\n   */\n\n  /* jshint ignore:end */\n  function OriginationUrlListInstance(sid) {\n    return OriginationUrlListInstance.get(sid);\n  }\n\n  OriginationUrlListInstance._version = version; // Path Solution\n\n  OriginationUrlListInstance._solution = {\n    trunkSid: trunkSid\n  };\n  OriginationUrlListInstance._uri = `/Trunks/${trunkSid}/OriginationUrls`;\n  /* jshint ignore:start */\n\n  /**\n   * create a OriginationUrlInstance\n   *\n   * @function create\n   * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlList#\n   *\n   * @param {object} opts - Options for request\n   * @param {number} opts.weight -\n   *          The value that determines the relative load the URI should receive compared to others with the same priority\n   * @param {number} opts.priority - The relative importance of the URI\n   * @param {boolean} opts.enabled - Whether the URL is enabled\n   * @param {string} opts.friendlyName - A string to describe the resource\n   * @param {string} opts.sipUrl -\n   *          The SIP address you want Twilio to route your Origination calls to\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed OriginationUrlInstance\n   */\n\n  /* jshint ignore:end */\n\n  OriginationUrlListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n\n    if (_.isUndefined(opts['weight'])) {\n      throw new Error('Required parameter \"opts[\\'weight\\']\" missing.');\n    }\n\n    if (_.isUndefined(opts['priority'])) {\n      throw new Error('Required parameter \"opts[\\'priority\\']\" missing.');\n    }\n\n    if (_.isUndefined(opts['enabled'])) {\n      throw new Error('Required parameter \"opts[\\'enabled\\']\" missing.');\n    }\n\n    if (_.isUndefined(opts['friendlyName'])) {\n      throw new Error('Required parameter \"opts[\\'friendlyName\\']\" missing.');\n    }\n\n    if (_.isUndefined(opts['sipUrl'])) {\n      throw new Error('Required parameter \"opts[\\'sipUrl\\']\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Weight': _.get(opts, 'weight'),\n      'Priority': _.get(opts, 'priority'),\n      'Enabled': serialize.bool(_.get(opts, 'enabled')),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'SipUrl': _.get(opts, 'sipUrl')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new OriginationUrlInstance(this._version, payload, this._solution.trunkSid, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Streams OriginationUrlInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n\n  OriginationUrlListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists OriginationUrlInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  OriginationUrlListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of OriginationUrlInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  OriginationUrlListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new OriginationUrlPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of OriginationUrlInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  OriginationUrlListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new OriginationUrlPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a origination_url\n   *\n   * @function get\n   * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlList#\n   *\n   * @param {string} sid - The unique string that identifies the resource\n   *\n   * @returns {Twilio.Trunking.V1.TrunkContext.OriginationUrlContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  OriginationUrlListInstance.get = function get(sid) {\n    return new OriginationUrlContext(this._version, this._solution.trunkSid, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  OriginationUrlListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  OriginationUrlListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return OriginationUrlListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the OriginationUrlPage\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.OriginationUrlPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {OriginationUrlSolution} solution - Path solution\n *\n * @returns OriginationUrlPage\n */\n\n/* jshint ignore:end */\n\n\nOriginationUrlPage = function OriginationUrlPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(OriginationUrlPage.prototype, Page.prototype);\n\nOriginationUrlPage.prototype.constructor = OriginationUrlPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of OriginationUrlInstance\n *\n * @function getInstance\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlPage#\n *\n * @param {OriginationUrlPayload} payload - Payload response from the API\n *\n * @returns OriginationUrlInstance\n */\n\n/* jshint ignore:end */\n\nOriginationUrlPage.prototype.getInstance = function getInstance(payload) {\n  return new OriginationUrlInstance(this._version, payload, this._solution.trunkSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nOriginationUrlPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nOriginationUrlPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the OriginationUrlContext\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.OriginationUrlInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} trunkSid - The SID of the Trunk that owns the Origination URL\n * @property {number} weight -\n *          The value that determines the relative load the URI should receive compared to others with the same priority\n * @property {boolean} enabled - Whether the URL is enabled\n * @property {string} sipUrl -\n *          The SIP address you want Twilio to route your Origination calls to\n * @property {string} friendlyName -\n *          The string that you assigned to describe the resource\n * @property {number} priority - The relative importance of the URI\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT when the resource was last updated\n * @property {string} url - The absolute URL of the resource\n *\n * @param {V1} version - Version of the resource\n * @param {OriginationUrlPayload} payload - The instance payload\n * @param {sid} trunkSid - The SID of the Trunk that owns the Origination URL\n * @param {sid} sid - The unique string that identifies the resource\n */\n\n/* jshint ignore:end */\n\n\nOriginationUrlInstance = function OriginationUrlInstance(version, payload, trunkSid, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.trunkSid = payload.trunk_sid; // jshint ignore:line\n\n  this.weight = deserialize.integer(payload.weight); // jshint ignore:line\n\n  this.enabled = payload.enabled; // jshint ignore:line\n\n  this.sipUrl = payload.sip_url; // jshint ignore:line\n\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n\n  this.priority = deserialize.integer(payload.priority); // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    trunkSid: trunkSid,\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(OriginationUrlInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new OriginationUrlContext(this._version, this._solution.trunkSid, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a OriginationUrlInstance\n *\n * @function fetch\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed OriginationUrlInstance\n */\n\n/* jshint ignore:end */\n\nOriginationUrlInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * remove a OriginationUrlInstance\n *\n * @function remove\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed OriginationUrlInstance\n */\n\n/* jshint ignore:end */\n\n\nOriginationUrlInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n/* jshint ignore:start */\n\n/**\n * update a OriginationUrlInstance\n *\n * @function update\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.weight] -\n *          The value that determines the relative load the URI should receive compared to others with the same priority\n * @param {number} [opts.priority] - The relative importance of the URI\n * @param {boolean} [opts.enabled] - Whether the URL is enabled\n * @param {string} [opts.friendlyName] - A string to describe the resource\n * @param {string} [opts.sipUrl] -\n *          The SIP address you want Twilio to route your Origination calls to\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed OriginationUrlInstance\n */\n\n/* jshint ignore:end */\n\n\nOriginationUrlInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nOriginationUrlInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nOriginationUrlInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the OriginationUrlContext\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.OriginationUrlContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} trunkSid -\n *          The SID of the Trunk from which to fetch the OriginationUrl\n * @param {sid} sid - The unique string that identifies the resource\n */\n\n/* jshint ignore:end */\n\n\nOriginationUrlContext = function OriginationUrlContext(version, trunkSid, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    trunkSid: trunkSid,\n    sid: sid\n  };\n  this._uri = `/Trunks/${trunkSid}/OriginationUrls/${sid}`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a OriginationUrlInstance\n *\n * @function fetch\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed OriginationUrlInstance\n */\n\n/* jshint ignore:end */\n\n\nOriginationUrlContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new OriginationUrlInstance(this._version, payload, this._solution.trunkSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * remove a OriginationUrlInstance\n *\n * @function remove\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed OriginationUrlInstance\n */\n\n/* jshint ignore:end */\n\n\nOriginationUrlContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * update a OriginationUrlInstance\n *\n * @function update\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlContext#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.weight] -\n *          The value that determines the relative load the URI should receive compared to others with the same priority\n * @param {number} [opts.priority] - The relative importance of the URI\n * @param {boolean} [opts.enabled] - Whether the URL is enabled\n * @param {string} [opts.friendlyName] - A string to describe the resource\n * @param {string} [opts.sipUrl] -\n *          The SIP address you want Twilio to route your Origination calls to\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed OriginationUrlInstance\n */\n\n/* jshint ignore:end */\n\n\nOriginationUrlContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'Weight': _.get(opts, 'weight'),\n    'Priority': _.get(opts, 'priority'),\n    'Enabled': serialize.bool(_.get(opts, 'enabled')),\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'SipUrl': _.get(opts, 'sipUrl')\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new OriginationUrlInstance(this._version, payload, this._solution.trunkSid, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nOriginationUrlContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nOriginationUrlContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  OriginationUrlList: OriginationUrlList,\n  OriginationUrlPage: OriginationUrlPage,\n  OriginationUrlInstance: OriginationUrlInstance,\n  OriginationUrlContext: OriginationUrlContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","deserialize","serialize","values","OriginationUrlList","OriginationUrlPage","OriginationUrlInstance","OriginationUrlContext","version","trunkSid","OriginationUrlListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isUndefined","Error","deferred","defer","data","of","bool","promise","uri","method","then","payload","resolve","bind","catch","error","reject","isFunction","nodeify","each","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","fetchNextPage","fn","page","instances","instance","nextPage","merge","list","allResources","resource","push","length","pageToken","pageNumber","params","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","accountSid","account_sid","trunk_sid","weight","integer","enabled","sipUrl","sip_url","friendlyName","friendly_name","priority","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","url","_context","undefined","Object","defineProperty","fetch","_proxy","remove","update","module","exports"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/twilio/lib/rest/trunking/v1/trunk/originationUrl.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require('../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar OriginationUrlList;\nvar OriginationUrlPage;\nvar OriginationUrlInstance;\nvar OriginationUrlContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the OriginationUrlList\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.OriginationUrlList\n *\n * @param {Twilio.Trunking.V1} version - Version of the resource\n * @param {string} trunkSid - The SID of the Trunk that owns the Origination URL\n */\n/* jshint ignore:end */\nOriginationUrlList = function OriginationUrlList(version, trunkSid) {\n  /* jshint ignore:start */\n  /**\n   * @function originationUrls\n   * @memberof Twilio.Trunking.V1.TrunkContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Trunking.V1.TrunkContext.OriginationUrlContext}\n   */\n  /* jshint ignore:end */\n  function OriginationUrlListInstance(sid) {\n    return OriginationUrlListInstance.get(sid);\n  }\n\n  OriginationUrlListInstance._version = version;\n  // Path Solution\n  OriginationUrlListInstance._solution = {trunkSid: trunkSid};\n  OriginationUrlListInstance._uri = `/Trunks/${trunkSid}/OriginationUrls`;\n  /* jshint ignore:start */\n  /**\n   * create a OriginationUrlInstance\n   *\n   * @function create\n   * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlList#\n   *\n   * @param {object} opts - Options for request\n   * @param {number} opts.weight -\n   *          The value that determines the relative load the URI should receive compared to others with the same priority\n   * @param {number} opts.priority - The relative importance of the URI\n   * @param {boolean} opts.enabled - Whether the URL is enabled\n   * @param {string} opts.friendlyName - A string to describe the resource\n   * @param {string} opts.sipUrl -\n   *          The SIP address you want Twilio to route your Origination calls to\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed OriginationUrlInstance\n   */\n  /* jshint ignore:end */\n  OriginationUrlListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts['weight'])) {\n      throw new Error('Required parameter \"opts[\\'weight\\']\" missing.');\n    }\n    if (_.isUndefined(opts['priority'])) {\n      throw new Error('Required parameter \"opts[\\'priority\\']\" missing.');\n    }\n    if (_.isUndefined(opts['enabled'])) {\n      throw new Error('Required parameter \"opts[\\'enabled\\']\" missing.');\n    }\n    if (_.isUndefined(opts['friendlyName'])) {\n      throw new Error('Required parameter \"opts[\\'friendlyName\\']\" missing.');\n    }\n    if (_.isUndefined(opts['sipUrl'])) {\n      throw new Error('Required parameter \"opts[\\'sipUrl\\']\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Weight': _.get(opts, 'weight'),\n      'Priority': _.get(opts, 'priority'),\n      'Enabled': serialize.bool(_.get(opts, 'enabled')),\n      'FriendlyName': _.get(opts, 'friendlyName'),\n      'SipUrl': _.get(opts, 'sipUrl')\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new OriginationUrlInstance(\n        this._version,\n        payload,\n        this._solution.trunkSid,\n        this._solution.sid\n      ));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams OriginationUrlInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  OriginationUrlListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists OriginationUrlInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  OriginationUrlListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of OriginationUrlInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  OriginationUrlListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new OriginationUrlPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of OriginationUrlInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  OriginationUrlListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new OriginationUrlPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a origination_url\n   *\n   * @function get\n   * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlList#\n   *\n   * @param {string} sid - The unique string that identifies the resource\n   *\n   * @returns {Twilio.Trunking.V1.TrunkContext.OriginationUrlContext}\n   */\n  /* jshint ignore:end */\n  OriginationUrlListInstance.get = function get(sid) {\n    return new OriginationUrlContext(this._version, this._solution.trunkSid, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  OriginationUrlListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  OriginationUrlListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return OriginationUrlListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the OriginationUrlPage\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.OriginationUrlPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {OriginationUrlSolution} solution - Path solution\n *\n * @returns OriginationUrlPage\n */\n/* jshint ignore:end */\nOriginationUrlPage = function OriginationUrlPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(OriginationUrlPage.prototype, Page.prototype);\nOriginationUrlPage.prototype.constructor = OriginationUrlPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of OriginationUrlInstance\n *\n * @function getInstance\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlPage#\n *\n * @param {OriginationUrlPayload} payload - Payload response from the API\n *\n * @returns OriginationUrlInstance\n */\n/* jshint ignore:end */\nOriginationUrlPage.prototype.getInstance = function getInstance(payload) {\n  return new OriginationUrlInstance(this._version, payload, this._solution.trunkSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nOriginationUrlPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nOriginationUrlPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the OriginationUrlContext\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.OriginationUrlInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} trunkSid - The SID of the Trunk that owns the Origination URL\n * @property {number} weight -\n *          The value that determines the relative load the URI should receive compared to others with the same priority\n * @property {boolean} enabled - Whether the URL is enabled\n * @property {string} sipUrl -\n *          The SIP address you want Twilio to route your Origination calls to\n * @property {string} friendlyName -\n *          The string that you assigned to describe the resource\n * @property {number} priority - The relative importance of the URI\n * @property {Date} dateCreated -\n *          The RFC 2822 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The RFC 2822 date and time in GMT when the resource was last updated\n * @property {string} url - The absolute URL of the resource\n *\n * @param {V1} version - Version of the resource\n * @param {OriginationUrlPayload} payload - The instance payload\n * @param {sid} trunkSid - The SID of the Trunk that owns the Origination URL\n * @param {sid} sid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nOriginationUrlInstance = function OriginationUrlInstance(version, payload,\n                                                          trunkSid, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.sid = payload.sid; // jshint ignore:line\n  this.trunkSid = payload.trunk_sid; // jshint ignore:line\n  this.weight = deserialize.integer(payload.weight); // jshint ignore:line\n  this.enabled = payload.enabled; // jshint ignore:line\n  this.sipUrl = payload.sip_url; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.priority = deserialize.integer(payload.priority); // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {trunkSid: trunkSid, sid: sid || this.sid, };\n};\n\nObject.defineProperty(OriginationUrlInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new OriginationUrlContext(\n          this._version,\n          this._solution.trunkSid,\n          this._solution.sid\n        );\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a OriginationUrlInstance\n *\n * @function fetch\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed OriginationUrlInstance\n */\n/* jshint ignore:end */\nOriginationUrlInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a OriginationUrlInstance\n *\n * @function remove\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed OriginationUrlInstance\n */\n/* jshint ignore:end */\nOriginationUrlInstance.prototype.remove = function remove(callback) {\n  return this._proxy.remove(callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a OriginationUrlInstance\n *\n * @function update\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.weight] -\n *          The value that determines the relative load the URI should receive compared to others with the same priority\n * @param {number} [opts.priority] - The relative importance of the URI\n * @param {boolean} [opts.enabled] - Whether the URL is enabled\n * @param {string} [opts.friendlyName] - A string to describe the resource\n * @param {string} [opts.sipUrl] -\n *          The SIP address you want Twilio to route your Origination calls to\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed OriginationUrlInstance\n */\n/* jshint ignore:end */\nOriginationUrlInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nOriginationUrlInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nOriginationUrlInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the OriginationUrlContext\n *\n * @constructor Twilio.Trunking.V1.TrunkContext.OriginationUrlContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid} trunkSid -\n *          The SID of the Trunk from which to fetch the OriginationUrl\n * @param {sid} sid - The unique string that identifies the resource\n */\n/* jshint ignore:end */\nOriginationUrlContext = function OriginationUrlContext(version, trunkSid, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {trunkSid: trunkSid, sid: sid, };\n  this._uri = `/Trunks/${trunkSid}/OriginationUrls/${sid}`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a OriginationUrlInstance\n *\n * @function fetch\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed OriginationUrlInstance\n */\n/* jshint ignore:end */\nOriginationUrlContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new OriginationUrlInstance(\n      this._version,\n      payload,\n      this._solution.trunkSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a OriginationUrlInstance\n *\n * @function remove\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed OriginationUrlInstance\n */\n/* jshint ignore:end */\nOriginationUrlContext.prototype.remove = function remove(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a OriginationUrlInstance\n *\n * @function update\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlContext#\n *\n * @param {object} [opts] - Options for request\n * @param {number} [opts.weight] -\n *          The value that determines the relative load the URI should receive compared to others with the same priority\n * @param {number} [opts.priority] - The relative importance of the URI\n * @param {boolean} [opts.enabled] - Whether the URL is enabled\n * @param {string} [opts.friendlyName] - A string to describe the resource\n * @param {string} [opts.sipUrl] -\n *          The SIP address you want Twilio to route your Origination calls to\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed OriginationUrlInstance\n */\n/* jshint ignore:end */\nOriginationUrlContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'Weight': _.get(opts, 'weight'),\n    'Priority': _.get(opts, 'priority'),\n    'Enabled': serialize.bool(_.get(opts, 'enabled')),\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'SipUrl': _.get(opts, 'sipUrl')\n  });\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new OriginationUrlInstance(\n      this._version,\n      payload,\n      this._solution.trunkSid,\n      this._solution.sid\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Trunking.V1.TrunkContext.OriginationUrlContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nOriginationUrlContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nOriginationUrlContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  OriginationUrlList: OriginationUrlList,\n  OriginationUrlPage: OriginationUrlPage,\n  OriginationUrlInstance: OriginationUrlInstance,\n  OriginationUrlContext: OriginationUrlContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}