{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../base/Page');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../base/values');\n/* jshint ignore:line */\n\n\nvar RecordingSettingsList;\nvar RecordingSettingsPage;\nvar RecordingSettingsInstance;\nvar RecordingSettingsContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the RecordingSettingsList\n *\n * @constructor Twilio.Video.V1.RecordingSettingsList\n *\n * @param {Twilio.Video.V1} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nRecordingSettingsList = function RecordingSettingsList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function recordingSettings\n   * @memberof Twilio.Video.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Video.V1.RecordingSettingsContext}\n   */\n\n  /* jshint ignore:end */\n  function RecordingSettingsListInstance(sid) {\n    return RecordingSettingsListInstance.get(sid);\n  }\n\n  RecordingSettingsListInstance._version = version; // Path Solution\n\n  RecordingSettingsListInstance._solution = {};\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a recording_settings\n   *\n   * @function get\n   * @memberof Twilio.Video.V1.RecordingSettingsList#\n   *\n   * @returns {Twilio.Video.V1.RecordingSettingsContext}\n   */\n\n  /* jshint ignore:end */\n\n  RecordingSettingsListInstance.get = function get() {\n    return new RecordingSettingsContext(this._version);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Video.V1.RecordingSettingsList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  RecordingSettingsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  RecordingSettingsListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return RecordingSettingsListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the RecordingSettingsPage\n *\n * @constructor Twilio.Video.V1.RecordingSettingsPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {RecordingSettingsSolution} solution - Path solution\n *\n * @returns RecordingSettingsPage\n */\n\n/* jshint ignore:end */\n\n\nRecordingSettingsPage = function RecordingSettingsPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(RecordingSettingsPage.prototype, Page.prototype);\n\nRecordingSettingsPage.prototype.constructor = RecordingSettingsPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of RecordingSettingsInstance\n *\n * @function getInstance\n * @memberof Twilio.Video.V1.RecordingSettingsPage#\n *\n * @param {RecordingSettingsPayload} payload - Payload response from the API\n *\n * @returns RecordingSettingsInstance\n */\n\n/* jshint ignore:end */\n\nRecordingSettingsPage.prototype.getInstance = function getInstance(payload) {\n  return new RecordingSettingsInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Video.V1.RecordingSettingsPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nRecordingSettingsPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nRecordingSettingsPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the RecordingSettingsContext\n *\n * @constructor Twilio.Video.V1.RecordingSettingsInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} friendlyName -\n *          The string that you assigned to describe the resource\n * @property {string} awsCredentialsSid - The SID of the stored Credential resource\n * @property {string} awsS3Url -\n *          The URL of the AWS S3 bucket where the recordings are stored\n * @property {boolean} awsStorageEnabled -\n *          Whether all recordings are written to the aws_s3_url\n * @property {string} encryptionKeySid -\n *          The SID of the Public Key resource used for encryption\n * @property {boolean} encryptionEnabled -\n *          Whether all recordings are stored in an encrypted form\n * @property {string} url - The absolute URL of the resource\n *\n * @param {V1} version - Version of the resource\n * @param {RecordingSettingsPayload} payload - The instance payload\n */\n\n/* jshint ignore:end */\n\n\nRecordingSettingsInstance = function RecordingSettingsInstance(version, payload) {\n  this._version = version; // Marshaled Properties\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n\n  this.awsCredentialsSid = payload.aws_credentials_sid; // jshint ignore:line\n\n  this.awsS3Url = payload.aws_s3_url; // jshint ignore:line\n\n  this.awsStorageEnabled = payload.aws_storage_enabled; // jshint ignore:line\n\n  this.encryptionKeySid = payload.encryption_key_sid; // jshint ignore:line\n\n  this.encryptionEnabled = payload.encryption_enabled; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {};\n};\n\nObject.defineProperty(RecordingSettingsInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new RecordingSettingsContext(this._version);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a RecordingSettingsInstance\n *\n * @function fetch\n * @memberof Twilio.Video.V1.RecordingSettingsInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RecordingSettingsInstance\n */\n\n/* jshint ignore:end */\n\nRecordingSettingsInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * create a RecordingSettingsInstance\n *\n * @function create\n * @memberof Twilio.Video.V1.RecordingSettingsInstance#\n *\n * @param {object} opts - Options for request\n * @param {string} opts.friendlyName - A string to describe the resource\n * @param {string} [opts.awsCredentialsSid] -\n *          The SID of the stored Credential resource\n * @param {string} [opts.encryptionKeySid] -\n *          The SID of the Public Key resource to use for encryption\n * @param {string} [opts.awsS3Url] -\n *          The URL of the AWS S3 bucket where the recordings should be stored\n * @param {boolean} [opts.awsStorageEnabled] -\n *          Whether all recordings should be written to the aws_s3_url\n * @param {boolean} [opts.encryptionEnabled] -\n *          Whether all recordings should be stored in an encrypted form\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RecordingSettingsInstance\n */\n\n/* jshint ignore:end */\n\n\nRecordingSettingsInstance.prototype.create = function create(opts, callback) {\n  return this._proxy.create(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Video.V1.RecordingSettingsInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nRecordingSettingsInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nRecordingSettingsInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the RecordingSettingsContext\n *\n * @constructor Twilio.Video.V1.RecordingSettingsContext\n *\n * @param {V1} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\n\nRecordingSettingsContext = function RecordingSettingsContext(version) {\n  this._version = version; // Path Solution\n\n  this._solution = {};\n  this._uri = `/RecordingSettings/Default`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a RecordingSettingsInstance\n *\n * @function fetch\n * @memberof Twilio.Video.V1.RecordingSettingsContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RecordingSettingsInstance\n */\n\n/* jshint ignore:end */\n\n\nRecordingSettingsContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new RecordingSettingsInstance(this._version, payload));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * create a RecordingSettingsInstance\n *\n * @function create\n * @memberof Twilio.Video.V1.RecordingSettingsContext#\n *\n * @param {object} opts - Options for request\n * @param {string} opts.friendlyName - A string to describe the resource\n * @param {string} [opts.awsCredentialsSid] -\n *          The SID of the stored Credential resource\n * @param {string} [opts.encryptionKeySid] -\n *          The SID of the Public Key resource to use for encryption\n * @param {string} [opts.awsS3Url] -\n *          The URL of the AWS S3 bucket where the recordings should be stored\n * @param {boolean} [opts.awsStorageEnabled] -\n *          Whether all recordings should be written to the aws_s3_url\n * @param {boolean} [opts.encryptionEnabled] -\n *          Whether all recordings should be stored in an encrypted form\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RecordingSettingsInstance\n */\n\n/* jshint ignore:end */\n\n\nRecordingSettingsContext.prototype.create = function create(opts, callback) {\n  if (_.isUndefined(opts)) {\n    throw new Error('Required parameter \"opts\" missing.');\n  }\n\n  if (_.isUndefined(opts['friendlyName'])) {\n    throw new Error('Required parameter \"opts[\\'friendlyName\\']\" missing.');\n  }\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'AwsCredentialsSid': _.get(opts, 'awsCredentialsSid'),\n    'EncryptionKeySid': _.get(opts, 'encryptionKeySid'),\n    'AwsS3Url': _.get(opts, 'awsS3Url'),\n    'AwsStorageEnabled': serialize.bool(_.get(opts, 'awsStorageEnabled')),\n    'EncryptionEnabled': serialize.bool(_.get(opts, 'encryptionEnabled'))\n  });\n\n  var promise = this._version.create({\n    uri: this._uri,\n    method: 'POST',\n    data: data\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new RecordingSettingsInstance(this._version, payload));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Video.V1.RecordingSettingsContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nRecordingSettingsContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nRecordingSettingsContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  RecordingSettingsList: RecordingSettingsList,\n  RecordingSettingsPage: RecordingSettingsPage,\n  RecordingSettingsInstance: RecordingSettingsInstance,\n  RecordingSettingsContext: RecordingSettingsContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","serialize","values","RecordingSettingsList","RecordingSettingsPage","RecordingSettingsInstance","RecordingSettingsContext","version","RecordingSettingsListInstance","sid","get","_version","_solution","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","payload","clone","forOwn","value","key","startsWith","isFunction","accountSid","account_sid","friendlyName","friendly_name","awsCredentialsSid","aws_credentials_sid","awsS3Url","aws_s3_url","awsStorageEnabled","aws_storage_enabled","encryptionKeySid","encryption_key_sid","encryptionEnabled","encryption_enabled","url","_context","undefined","Object","defineProperty","fetch","callback","_proxy","create","opts","_uri","deferred","defer","promise","uri","method","then","resolve","bind","catch","error","reject","nodeify","isUndefined","Error","data","of","bool","module","exports"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/twilio/lib/rest/video/v1/recordingSettings.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar serialize = require('../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar RecordingSettingsList;\nvar RecordingSettingsPage;\nvar RecordingSettingsInstance;\nvar RecordingSettingsContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the RecordingSettingsList\n *\n * @constructor Twilio.Video.V1.RecordingSettingsList\n *\n * @param {Twilio.Video.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nRecordingSettingsList = function RecordingSettingsList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function recordingSettings\n   * @memberof Twilio.Video.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Video.V1.RecordingSettingsContext}\n   */\n  /* jshint ignore:end */\n  function RecordingSettingsListInstance(sid) {\n    return RecordingSettingsListInstance.get(sid);\n  }\n\n  RecordingSettingsListInstance._version = version;\n  // Path Solution\n  RecordingSettingsListInstance._solution = {};\n  /* jshint ignore:start */\n  /**\n   * Constructs a recording_settings\n   *\n   * @function get\n   * @memberof Twilio.Video.V1.RecordingSettingsList#\n   *\n   * @returns {Twilio.Video.V1.RecordingSettingsContext}\n   */\n  /* jshint ignore:end */\n  RecordingSettingsListInstance.get = function get() {\n    return new RecordingSettingsContext(this._version);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Video.V1.RecordingSettingsList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  RecordingSettingsListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  RecordingSettingsListInstance[util.inspect.custom] = function inspect(depth,\n      options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return RecordingSettingsListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the RecordingSettingsPage\n *\n * @constructor Twilio.Video.V1.RecordingSettingsPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {RecordingSettingsSolution} solution - Path solution\n *\n * @returns RecordingSettingsPage\n */\n/* jshint ignore:end */\nRecordingSettingsPage = function RecordingSettingsPage(version, response,\n                                                        solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(RecordingSettingsPage.prototype, Page.prototype);\nRecordingSettingsPage.prototype.constructor = RecordingSettingsPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of RecordingSettingsInstance\n *\n * @function getInstance\n * @memberof Twilio.Video.V1.RecordingSettingsPage#\n *\n * @param {RecordingSettingsPayload} payload - Payload response from the API\n *\n * @returns RecordingSettingsInstance\n */\n/* jshint ignore:end */\nRecordingSettingsPage.prototype.getInstance = function getInstance(payload) {\n  return new RecordingSettingsInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Video.V1.RecordingSettingsPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nRecordingSettingsPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nRecordingSettingsPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the RecordingSettingsContext\n *\n * @constructor Twilio.Video.V1.RecordingSettingsInstance\n *\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} friendlyName -\n *          The string that you assigned to describe the resource\n * @property {string} awsCredentialsSid - The SID of the stored Credential resource\n * @property {string} awsS3Url -\n *          The URL of the AWS S3 bucket where the recordings are stored\n * @property {boolean} awsStorageEnabled -\n *          Whether all recordings are written to the aws_s3_url\n * @property {string} encryptionKeySid -\n *          The SID of the Public Key resource used for encryption\n * @property {boolean} encryptionEnabled -\n *          Whether all recordings are stored in an encrypted form\n * @property {string} url - The absolute URL of the resource\n *\n * @param {V1} version - Version of the resource\n * @param {RecordingSettingsPayload} payload - The instance payload\n */\n/* jshint ignore:end */\nRecordingSettingsInstance = function RecordingSettingsInstance(version, payload)\n    {\n  this._version = version;\n\n  // Marshaled Properties\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.awsCredentialsSid = payload.aws_credentials_sid; // jshint ignore:line\n  this.awsS3Url = payload.aws_s3_url; // jshint ignore:line\n  this.awsStorageEnabled = payload.aws_storage_enabled; // jshint ignore:line\n  this.encryptionKeySid = payload.encryption_key_sid; // jshint ignore:line\n  this.encryptionEnabled = payload.encryption_enabled; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {};\n};\n\nObject.defineProperty(RecordingSettingsInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new RecordingSettingsContext(this._version);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a RecordingSettingsInstance\n *\n * @function fetch\n * @memberof Twilio.Video.V1.RecordingSettingsInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RecordingSettingsInstance\n */\n/* jshint ignore:end */\nRecordingSettingsInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * create a RecordingSettingsInstance\n *\n * @function create\n * @memberof Twilio.Video.V1.RecordingSettingsInstance#\n *\n * @param {object} opts - Options for request\n * @param {string} opts.friendlyName - A string to describe the resource\n * @param {string} [opts.awsCredentialsSid] -\n *          The SID of the stored Credential resource\n * @param {string} [opts.encryptionKeySid] -\n *          The SID of the Public Key resource to use for encryption\n * @param {string} [opts.awsS3Url] -\n *          The URL of the AWS S3 bucket where the recordings should be stored\n * @param {boolean} [opts.awsStorageEnabled] -\n *          Whether all recordings should be written to the aws_s3_url\n * @param {boolean} [opts.encryptionEnabled] -\n *          Whether all recordings should be stored in an encrypted form\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RecordingSettingsInstance\n */\n/* jshint ignore:end */\nRecordingSettingsInstance.prototype.create = function create(opts, callback) {\n  return this._proxy.create(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Video.V1.RecordingSettingsInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nRecordingSettingsInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nRecordingSettingsInstance.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the RecordingSettingsContext\n *\n * @constructor Twilio.Video.V1.RecordingSettingsContext\n *\n * @param {V1} version - Version of the resource\n */\n/* jshint ignore:end */\nRecordingSettingsContext = function RecordingSettingsContext(version) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {};\n  this._uri = `/RecordingSettings/Default`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a RecordingSettingsInstance\n *\n * @function fetch\n * @memberof Twilio.Video.V1.RecordingSettingsContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RecordingSettingsInstance\n */\n/* jshint ignore:end */\nRecordingSettingsContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new RecordingSettingsInstance(this._version, payload));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * create a RecordingSettingsInstance\n *\n * @function create\n * @memberof Twilio.Video.V1.RecordingSettingsContext#\n *\n * @param {object} opts - Options for request\n * @param {string} opts.friendlyName - A string to describe the resource\n * @param {string} [opts.awsCredentialsSid] -\n *          The SID of the stored Credential resource\n * @param {string} [opts.encryptionKeySid] -\n *          The SID of the Public Key resource to use for encryption\n * @param {string} [opts.awsS3Url] -\n *          The URL of the AWS S3 bucket where the recordings should be stored\n * @param {boolean} [opts.awsStorageEnabled] -\n *          Whether all recordings should be written to the aws_s3_url\n * @param {boolean} [opts.encryptionEnabled] -\n *          Whether all recordings should be stored in an encrypted form\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed RecordingSettingsInstance\n */\n/* jshint ignore:end */\nRecordingSettingsContext.prototype.create = function create(opts, callback) {\n  if (_.isUndefined(opts)) {\n    throw new Error('Required parameter \"opts\" missing.');\n  }\n  if (_.isUndefined(opts['friendlyName'])) {\n    throw new Error('Required parameter \"opts[\\'friendlyName\\']\" missing.');\n  }\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'FriendlyName': _.get(opts, 'friendlyName'),\n    'AwsCredentialsSid': _.get(opts, 'awsCredentialsSid'),\n    'EncryptionKeySid': _.get(opts, 'encryptionKeySid'),\n    'AwsS3Url': _.get(opts, 'awsS3Url'),\n    'AwsStorageEnabled': serialize.bool(_.get(opts, 'awsStorageEnabled')),\n    'EncryptionEnabled': serialize.bool(_.get(opts, 'encryptionEnabled'))\n  });\n\n  var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new RecordingSettingsInstance(this._version, payload));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Video.V1.RecordingSettingsContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nRecordingSettingsContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nRecordingSettingsContext.prototype[util.inspect.custom] = function\n    inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  RecordingSettingsList: RecordingSettingsList,\n  RecordingSettingsPage: RecordingSettingsPage,\n  RecordingSettingsInstance: RecordingSettingsInstance,\n  RecordingSettingsContext: RecordingSettingsContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}