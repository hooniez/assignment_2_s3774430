{"ast":null,"code":"var _jsxFileName = \"/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/Posts/PostForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Row, Col, Card, Form, Button, Container, ProgressBar, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport { Image } from \"react-bootstrap-icons\";\nimport styles from \"./PostForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst postUrl = \"https://api.cloudinary.com/v1_1/duc4zmhl7/image/upload\";\nconst resUrl = \"https://res.cloudinary.com/duc4zmhl7/image/upload\";\nexport default function PostForm(_ref) {\n  _s();\n\n  let {\n    user,\n    dispatchUser,\n    addPost,\n    postId,\n    isComment,\n    parentPostId,\n    replyTo\n  } = _ref;\n  const [isPostable, setIsPostable] = useState(false);\n  const [numCharsTyped, setNumCharsTyped] = useState(0);\n  const [progressBarVariant, setProgressBarVariant] = useState(\"success\");\n  const wordLimit = 250;\n  useEffect(() => {\n    // Disable/enable the post button\n    clearTimeout(validateTextareaTimeoutId);\n    validateTextareaTimeoutId = setTimeout(() => {\n      setIsPostable(validateTextarea(numCharsTyped));\n    }, 500);\n\n    if (Math.floor(numCharsTyped / wordLimit * 100) <= 70) {\n      setProgressBarVariant(\"success\");\n    } else if (numCharsTyped <= wordLimit) {\n      setProgressBarVariant(\"warning\");\n    } else {\n      setProgressBarVariant(\"danger\");\n    }\n  }, [numCharsTyped]);\n  let validateTextareaTimeoutId;\n\n  const validateTextarea = num => num > 0 && num <= wordLimit;\n\n  const textareaChangeHandler = event => {\n    setNumCharsTyped(event.target.value.length);\n  };\n\n  const imageUploadHandler = event => {\n    let img = document.querySelector(\"#myImg\");\n    img.src = URL.createObjectURL(event.target.files[0]); // TODO: CLEAN UP AFTER\n  };\n\n  const postHandler = async e => {\n    e.preventDefault();\n    let imagesToUpload = document.querySelector(\"#imageUpload\").files; // Create a general post JSON\n\n    let post = {\n      postId: postId,\n      parentId: null,\n      children: [],\n      text: e.target[0].value,\n      datePosted: new Date(),\n      postBy: user.data.email,\n      likes: [],\n      isDeleted: false,\n      img: null\n    };\n\n    if (imagesToUpload.length != 0) {\n      const data = new FormData();\n      data.append(\"file\", imagesToUpload[0]);\n      data.append(\"upload_preset\", \"zqlcfaas\");\n      fetch(postUrl, {\n        method: \"POST\",\n        body: data\n      }).then(response => response.json()).then(data => {\n        post.img = `${resUrl}/v${data.version}/${data.public_id}.${data.format}`;\n        e.target.querySelector(\"img\").src = \"#\";\n      }).catch(error => console.log(error));\n    }\n\n    addPost(post, isComment, parentPostId);\n    e.target.reset();\n    setIsPostable(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"gx-0\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 3,\n          className: \"d-flex-column \",\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            src: user.data.avatarsrc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n            className: \"my-3\",\n            variant: progressBarVariant,\n            now: Math.floor(numCharsTyped / wordLimit * 100),\n            label: progressBarVariant !== \"success\" && `${wordLimit - numCharsTyped} letters left`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: styles.textAreaCol,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: postHandler,\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              autoFocus: true,\n              as: \"textarea\",\n              rows: 6,\n              onChange: textareaChangeHandler,\n              defaultValue: replyTo ? `@${replyTo}` : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"myImg\",\n              src: \"#\",\n              className: \"img-fluid mt-3\",\n              hidden: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Container, {\n              className: \"d-flex justify-content-between align-items-center mt-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"imageUpload\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: \"mb-0\",\n                  children: /*#__PURE__*/_jsxDEV(Image, {\n                    width: \"2em\",\n                    height: \"2em\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"file\",\n                  className: \"d-none\",\n                  onChange: imageUploadHandler\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                disabled: !isPostable,\n                children: \"Post\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostForm, \"d1h2uLj+C+m6pzlIZmXwdS5W4IE=\");\n\n_c = PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["useState","useEffect","Row","Col","Card","Form","Button","Container","ProgressBar","OverlayTrigger","Tooltip","Image","styles","postUrl","resUrl","PostForm","user","dispatchUser","addPost","postId","isComment","parentPostId","replyTo","isPostable","setIsPostable","numCharsTyped","setNumCharsTyped","progressBarVariant","setProgressBarVariant","wordLimit","clearTimeout","validateTextareaTimeoutId","setTimeout","validateTextarea","Math","floor","num","textareaChangeHandler","event","target","value","length","imageUploadHandler","img","document","querySelector","src","URL","createObjectURL","files","postHandler","e","preventDefault","imagesToUpload","post","parentId","children","text","datePosted","Date","postBy","data","email","likes","isDeleted","FormData","append","fetch","method","body","then","response","json","version","public_id","format","catch","error","console","log","reset","avatarsrc","textAreaCol"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/src/UI/Posts/PostForm.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport {\n  Row,\n  Col,\n  Card,\n  Form,\n  Button,\n  Container,\n  ProgressBar,\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\nimport { Image } from \"react-bootstrap-icons\";\nimport styles from \"./PostForm.module.css\";\n\nconst postUrl = \"https://api.cloudinary.com/v1_1/duc4zmhl7/image/upload\";\nconst resUrl = \"https://res.cloudinary.com/duc4zmhl7/image/upload\";\n\nexport default function PostForm({\n  user,\n  dispatchUser,\n  addPost,\n  postId,\n  isComment,\n  parentPostId,\n  replyTo,\n}) {\n  const [isPostable, setIsPostable] = useState(false);\n  const [numCharsTyped, setNumCharsTyped] = useState(0);\n  const [progressBarVariant, setProgressBarVariant] = useState(\"success\");\n  const wordLimit = 250;\n\n  useEffect(() => {\n    // Disable/enable the post button\n    clearTimeout(validateTextareaTimeoutId);\n    validateTextareaTimeoutId = setTimeout(() => {\n      setIsPostable(validateTextarea(numCharsTyped));\n    }, 500);\n\n    if (Math.floor((numCharsTyped / wordLimit) * 100) <= 70) {\n      setProgressBarVariant(\"success\");\n    } else if (numCharsTyped <= wordLimit) {\n      setProgressBarVariant(\"warning\");\n    } else {\n      setProgressBarVariant(\"danger\");\n    }\n  }, [numCharsTyped]);\n\n  let validateTextareaTimeoutId;\n\n  const validateTextarea = (num) => num > 0 && num <= wordLimit;\n\n  const textareaChangeHandler = (event) => {\n    setNumCharsTyped(event.target.value.length);\n  };\n\n  const imageUploadHandler = (event) => {\n    let img = document.querySelector(\"#myImg\");\n    img.src = URL.createObjectURL(event.target.files[0]);\n\n    // TODO: CLEAN UP AFTER\n  };\n\n  const postHandler = async (e) => {\n    e.preventDefault();\n\n    let imagesToUpload = document.querySelector(\"#imageUpload\").files;\n    // Create a general post JSON\n    let post = {\n      postId: postId,\n      parentId: null,\n      children: [],\n      text: e.target[0].value,\n      datePosted: new Date(),\n      postBy: user.data.email,\n      likes: [],\n      isDeleted: false,\n      img: null,\n    };\n\n    if (imagesToUpload.length != 0) {\n      const data = new FormData();\n      data.append(\"file\", imagesToUpload[0]);\n      data.append(\"upload_preset\", \"zqlcfaas\");\n\n      fetch(postUrl, {\n        method: \"POST\",\n        body: data,\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          post.img = `${resUrl}/v${data.version}/${data.public_id}.${data.format}`;\n\n          e.target.querySelector(\"img\").src = \"#\";\n        })\n        .catch((error) => console.log(error));\n    }\n\n    addPost(post, isComment, parentPostId);\n    e.target.reset();\n    setIsPostable(false);\n  };\n\n  return (\n    <Card>\n      <Card.Body>\n        <Row className=\"gx-0\">\n          <Col xs={3} className=\"d-flex-column \">\n            <Card.Img src={user.data.avatarsrc}></Card.Img>\n            <ProgressBar\n              className=\"my-3\"\n              variant={progressBarVariant}\n              now={Math.floor((numCharsTyped / wordLimit) * 100)}\n              label={\n                progressBarVariant !== \"success\" &&\n                `${wordLimit - numCharsTyped} letters left`\n              }\n            ></ProgressBar>\n          </Col>\n          <Col className={styles.textAreaCol}>\n            <Form onSubmit={postHandler}>\n              <Form.Control\n                autoFocus\n                as=\"textarea\"\n                rows={6}\n                onChange={textareaChangeHandler}\n                defaultValue={replyTo ? `@${replyTo}` : \"\"}\n              ></Form.Control>\n              <img id=\"myImg\" src=\"#\" className=\"img-fluid mt-3\" hidden></img>\n\n              <Container className=\"d-flex justify-content-between align-items-center mt-3\">\n                <Form.Group controlId=\"imageUpload\">\n                  <Form.Label className=\"mb-0\">\n                    <Image width=\"2em\" height=\"2em\"></Image>\n                  </Form.Label>\n                  <Form.Control\n                    type=\"file\"\n                    className=\"d-none\"\n                    onChange={imageUploadHandler}\n                  ></Form.Control>\n                </Form.Group>\n\n                <Button type=\"submit\" disabled={!isPostable}>\n                  Post\n                </Button>\n              </Container>\n            </Form>\n          </Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SACEC,GADF,EAEEC,GAFF,EAGEC,IAHF,EAIEC,IAJF,EAKEC,MALF,EAMEC,SANF,EAOEC,WAPF,EAQEC,cARF,EASEC,OATF,QAUO,iBAVP;AAWA,SAASC,KAAT,QAAsB,uBAAtB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;AAEA,MAAMC,OAAO,GAAG,wDAAhB;AACA,MAAMC,MAAM,GAAG,mDAAf;AAEA,eAAe,SAASC,QAAT,OAQZ;EAAA;;EAAA,IAR8B;IAC/BC,IAD+B;IAE/BC,YAF+B;IAG/BC,OAH+B;IAI/BC,MAJ+B;IAK/BC,SAL+B;IAM/BC,YAN+B;IAO/BC;EAP+B,CAQ9B;EACD,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BxB,QAAQ,CAAC,KAAD,CAA5C;EACA,MAAM,CAACyB,aAAD,EAAgBC,gBAAhB,IAAoC1B,QAAQ,CAAC,CAAD,CAAlD;EACA,MAAM,CAAC2B,kBAAD,EAAqBC,qBAArB,IAA8C5B,QAAQ,CAAC,SAAD,CAA5D;EACA,MAAM6B,SAAS,GAAG,GAAlB;EAEA5B,SAAS,CAAC,MAAM;IACd;IACA6B,YAAY,CAACC,yBAAD,CAAZ;IACAA,yBAAyB,GAAGC,UAAU,CAAC,MAAM;MAC3CR,aAAa,CAACS,gBAAgB,CAACR,aAAD,CAAjB,CAAb;IACD,CAFqC,EAEnC,GAFmC,CAAtC;;IAIA,IAAIS,IAAI,CAACC,KAAL,CAAYV,aAAa,GAAGI,SAAjB,GAA8B,GAAzC,KAAiD,EAArD,EAAyD;MACvDD,qBAAqB,CAAC,SAAD,CAArB;IACD,CAFD,MAEO,IAAIH,aAAa,IAAII,SAArB,EAAgC;MACrCD,qBAAqB,CAAC,SAAD,CAArB;IACD,CAFM,MAEA;MACLA,qBAAqB,CAAC,QAAD,CAArB;IACD;EACF,CAdQ,EAcN,CAACH,aAAD,CAdM,CAAT;EAgBA,IAAIM,yBAAJ;;EAEA,MAAME,gBAAgB,GAAIG,GAAD,IAASA,GAAG,GAAG,CAAN,IAAWA,GAAG,IAAIP,SAApD;;EAEA,MAAMQ,qBAAqB,GAAIC,KAAD,IAAW;IACvCZ,gBAAgB,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,MAApB,CAAhB;EACD,CAFD;;EAIA,MAAMC,kBAAkB,GAAIJ,KAAD,IAAW;IACpC,IAAIK,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAV;IACAF,GAAG,CAACG,GAAJ,GAAUC,GAAG,CAACC,eAAJ,CAAoBV,KAAK,CAACC,MAAN,CAAaU,KAAb,CAAmB,CAAnB,CAApB,CAAV,CAFoC,CAIpC;EACD,CALD;;EAOA,MAAMC,WAAW,GAAG,MAAOC,CAAP,IAAa;IAC/BA,CAAC,CAACC,cAAF;IAEA,IAAIC,cAAc,GAAGT,QAAQ,CAACC,aAAT,CAAuB,cAAvB,EAAuCI,KAA5D,CAH+B,CAI/B;;IACA,IAAIK,IAAI,GAAG;MACTnC,MAAM,EAAEA,MADC;MAEToC,QAAQ,EAAE,IAFD;MAGTC,QAAQ,EAAE,EAHD;MAITC,IAAI,EAAEN,CAAC,CAACZ,MAAF,CAAS,CAAT,EAAYC,KAJT;MAKTkB,UAAU,EAAE,IAAIC,IAAJ,EALH;MAMTC,MAAM,EAAE5C,IAAI,CAAC6C,IAAL,CAAUC,KANT;MAOTC,KAAK,EAAE,EAPE;MAQTC,SAAS,EAAE,KARF;MASTrB,GAAG,EAAE;IATI,CAAX;;IAYA,IAAIU,cAAc,CAACZ,MAAf,IAAyB,CAA7B,EAAgC;MAC9B,MAAMoB,IAAI,GAAG,IAAII,QAAJ,EAAb;MACAJ,IAAI,CAACK,MAAL,CAAY,MAAZ,EAAoBb,cAAc,CAAC,CAAD,CAAlC;MACAQ,IAAI,CAACK,MAAL,CAAY,eAAZ,EAA6B,UAA7B;MAEAC,KAAK,CAACtD,OAAD,EAAU;QACbuD,MAAM,EAAE,MADK;QAEbC,IAAI,EAAER;MAFO,CAAV,CAAL,CAIGS,IAJH,CAISC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAJtB,EAKGF,IALH,CAKST,IAAD,IAAU;QACdP,IAAI,CAACX,GAAL,GAAY,GAAE7B,MAAO,KAAI+C,IAAI,CAACY,OAAQ,IAAGZ,IAAI,CAACa,SAAU,IAAGb,IAAI,CAACc,MAAO,EAAvE;QAEAxB,CAAC,CAACZ,MAAF,CAASM,aAAT,CAAuB,KAAvB,EAA8BC,GAA9B,GAAoC,GAApC;MACD,CATH,EAUG8B,KAVH,CAUUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAVpB;IAWD;;IAED3D,OAAO,CAACoC,IAAD,EAAOlC,SAAP,EAAkBC,YAAlB,CAAP;IACA8B,CAAC,CAACZ,MAAF,CAASyC,KAAT;IACAxD,aAAa,CAAC,KAAD,CAAb;EACD,CAtCD;;EAwCA,oBACE,QAAC,IAAD;IAAA,uBACE,QAAC,IAAD,CAAM,IAAN;MAAA,uBACE,QAAC,GAAD;QAAK,SAAS,EAAC,MAAf;QAAA,wBACE,QAAC,GAAD;UAAK,EAAE,EAAE,CAAT;UAAY,SAAS,EAAC,gBAAtB;UAAA,wBACE,QAAC,IAAD,CAAM,GAAN;YAAU,GAAG,EAAER,IAAI,CAAC6C,IAAL,CAAUoB;UAAzB;YAAA;YAAA;YAAA;UAAA,QADF,eAEE,QAAC,WAAD;YACE,SAAS,EAAC,MADZ;YAEE,OAAO,EAAEtD,kBAFX;YAGE,GAAG,EAAEO,IAAI,CAACC,KAAL,CAAYV,aAAa,GAAGI,SAAjB,GAA8B,GAAzC,CAHP;YAIE,KAAK,EACHF,kBAAkB,KAAK,SAAvB,IACC,GAAEE,SAAS,GAAGJ,aAAc;UANjC;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAaE,QAAC,GAAD;UAAK,SAAS,EAAEb,MAAM,CAACsE,WAAvB;UAAA,uBACE,QAAC,IAAD;YAAM,QAAQ,EAAEhC,WAAhB;YAAA,wBACE,QAAC,IAAD,CAAM,OAAN;cACE,SAAS,MADX;cAEE,EAAE,EAAC,UAFL;cAGE,IAAI,EAAE,CAHR;cAIE,QAAQ,EAAEb,qBAJZ;cAKE,YAAY,EAAEf,OAAO,GAAI,IAAGA,OAAQ,EAAf,GAAmB;YAL1C;cAAA;cAAA;cAAA;YAAA,QADF,eAQE;cAAK,EAAE,EAAC,OAAR;cAAgB,GAAG,EAAC,GAApB;cAAwB,SAAS,EAAC,gBAAlC;cAAmD,MAAM;YAAzD;cAAA;cAAA;cAAA;YAAA,QARF,eAUE,QAAC,SAAD;cAAW,SAAS,EAAC,wDAArB;cAAA,wBACE,QAAC,IAAD,CAAM,KAAN;gBAAY,SAAS,EAAC,aAAtB;gBAAA,wBACE,QAAC,IAAD,CAAM,KAAN;kBAAY,SAAS,EAAC,MAAtB;kBAAA,uBACE,QAAC,KAAD;oBAAO,KAAK,EAAC,KAAb;oBAAmB,MAAM,EAAC;kBAA1B;oBAAA;oBAAA;oBAAA;kBAAA;gBADF;kBAAA;kBAAA;kBAAA;gBAAA,QADF,eAIE,QAAC,IAAD,CAAM,OAAN;kBACE,IAAI,EAAC,MADP;kBAEE,SAAS,EAAC,QAFZ;kBAGE,QAAQ,EAAEoB;gBAHZ;kBAAA;kBAAA;kBAAA;gBAAA,QAJF;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAYE,QAAC,MAAD;gBAAQ,IAAI,EAAC,QAAb;gBAAsB,QAAQ,EAAE,CAACnB,UAAjC;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAZF;YAAA;cAAA;cAAA;cAAA;YAAA,QAVF;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAbF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAiDD;;GAtIuBR,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}