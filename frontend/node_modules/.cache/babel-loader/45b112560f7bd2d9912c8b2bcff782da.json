{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar TwiML = require('./TwiML');\n/* jshint ignore:line */\n\n/* jshint ignore:start */\n\n/**\n * <Response> TwiML for Faxes\n *\n * @constructor FaxResponse\n */\n\n/* jshint ignore:end */\n\n\nfunction FaxResponse() {\n  TwiML.call(this);\n  this._propertyName = 'response';\n}\n\nFaxResponse.prototype = Object.create(TwiML.prototype);\nFaxResponse.prototype.constructor = FaxResponse;\n/* jshint ignore:start */\n\n/**\n * <Receive> TwiML Verb\n *\n * @function receive\n * @memberof FaxResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.action] - Receive action URL\n * @param {string} [attributes.method] - Receive action URL method\n * @param {receive.media_type} [attributes.mediaType] -\n *          The media type used to store media in the fax media store\n * @param {receive.page_size} [attributes.pageSize] -\n *          What size to interpret received pages as\n * @param {boolean} [attributes.storeMedia] -\n *          Whether or not to store received media in the fax media store\n *\n * @returns Receive\n */\n\n/* jshint ignore:end */\n\nFaxResponse.prototype.receive = function receive(attributes) {\n  return new Receive(this.response.ele('Receive', attributes));\n};\n/* jshint ignore:start */\n\n/**\n * <Receive> TwiML Verb\n *\n * @constructor Receive\n *\n * @param {object} receive - <Receive> TwiML Verb\n */\n\n/* jshint ignore:end */\n\n\nfunction Receive(receive) {\n  this.receive = receive;\n  this._propertyName = 'receive';\n}\n\nReceive.prototype = Object.create(TwiML.prototype);\nReceive.prototype.constructor = Receive;\nmodule.exports = FaxResponse;","map":{"version":3,"names":["TwiML","require","FaxResponse","call","_propertyName","prototype","Object","create","constructor","receive","attributes","Receive","response","ele","module","exports"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/twilio/lib/twiml/FaxResponse.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar TwiML = require('./TwiML');  /* jshint ignore:line */\n\n\n/* jshint ignore:start */\n/**\n * <Response> TwiML for Faxes\n *\n * @constructor FaxResponse\n */\n/* jshint ignore:end */\nfunction FaxResponse() {\n  TwiML.call(this);\n  this._propertyName = 'response';\n}\n\nFaxResponse.prototype = Object.create(TwiML.prototype);\nFaxResponse.prototype.constructor = FaxResponse;\n\n/* jshint ignore:start */\n/**\n * <Receive> TwiML Verb\n *\n * @function receive\n * @memberof FaxResponse#\n *\n * @param {object} [attributes] - TwiML attributes\n * @param {string} [attributes.action] - Receive action URL\n * @param {string} [attributes.method] - Receive action URL method\n * @param {receive.media_type} [attributes.mediaType] -\n *          The media type used to store media in the fax media store\n * @param {receive.page_size} [attributes.pageSize] -\n *          What size to interpret received pages as\n * @param {boolean} [attributes.storeMedia] -\n *          Whether or not to store received media in the fax media store\n *\n * @returns Receive\n */\n/* jshint ignore:end */\nFaxResponse.prototype.receive = function receive(attributes) {\n  return new Receive(this.response.ele('Receive', attributes));\n};\n\n\n/* jshint ignore:start */\n/**\n * <Receive> TwiML Verb\n *\n * @constructor Receive\n *\n * @param {object} receive - <Receive> TwiML Verb\n */\n/* jshint ignore:end */\nfunction Receive(receive) {\n  this.receive = receive;\n  this._propertyName = 'receive';\n}\n\nReceive.prototype = Object.create(TwiML.prototype);\nReceive.prototype.constructor = Receive;\n\nmodule.exports = FaxResponse;\n"],"mappings":"AAAA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;AAAiC;;AAGjC;;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,SAASC,WAAT,GAAuB;EACrBF,KAAK,CAACG,IAAN,CAAW,IAAX;EACA,KAAKC,aAAL,GAAqB,UAArB;AACD;;AAEDF,WAAW,CAACG,SAAZ,GAAwBC,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACK,SAApB,CAAxB;AACAH,WAAW,CAACG,SAAZ,CAAsBG,WAAtB,GAAoCN,WAApC;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACAA,WAAW,CAACG,SAAZ,CAAsBI,OAAtB,GAAgC,SAASA,OAAT,CAAiBC,UAAjB,EAA6B;EAC3D,OAAO,IAAIC,OAAJ,CAAY,KAAKC,QAAL,CAAcC,GAAd,CAAkB,SAAlB,EAA6BH,UAA7B,CAAZ,CAAP;AACD,CAFD;AAKA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,SAASC,OAAT,CAAiBF,OAAjB,EAA0B;EACxB,KAAKA,OAAL,GAAeA,OAAf;EACA,KAAKL,aAAL,GAAqB,SAArB;AACD;;AAEDO,OAAO,CAACN,SAAR,GAAoBC,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACK,SAApB,CAApB;AACAM,OAAO,CAACN,SAAR,CAAkBG,WAAlB,GAAgCG,OAAhC;AAEAG,MAAM,CAACC,OAAP,GAAiBb,WAAjB"},"metadata":{},"sourceType":"script"}