{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../base/values');\n/* jshint ignore:line */\n\n\nvar EsimProfileList;\nvar EsimProfilePage;\nvar EsimProfileInstance;\nvar EsimProfileContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the EsimProfileList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Supersim.V1.EsimProfileList\n *\n * @param {Twilio.Supersim.V1} version - Version of the resource\n */\n\n/* jshint ignore:end */\n\nEsimProfileList = function EsimProfileList(version) {\n  /* jshint ignore:start */\n\n  /**\n   * @function esimProfiles\n   * @memberof Twilio.Supersim.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Supersim.V1.EsimProfileContext}\n   */\n\n  /* jshint ignore:end */\n  function EsimProfileListInstance(sid) {\n    return EsimProfileListInstance.get(sid);\n  }\n\n  EsimProfileListInstance._version = version; // Path Solution\n\n  EsimProfileListInstance._solution = {};\n  EsimProfileListInstance._uri = `/ESimProfiles`;\n  /* jshint ignore:start */\n\n  /**\n   * create a EsimProfileInstance\n   *\n   * @function create\n   * @memberof Twilio.Supersim.V1.EsimProfileList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.callbackUrl] -\n   *          The URL we should call after we have sent when the status of the eSIM Profile changes\n   * @param {string} [opts.callbackMethod] -\n   *          The HTTP method we should use to call callback_url\n   * @param {string} [opts.eid] -\n   *          Identifier of the eUICC that will claim the eSIM Profile\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed EsimProfileInstance\n   */\n\n  /* jshint ignore:end */\n\n  EsimProfileListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'CallbackUrl': _.get(opts, 'callbackUrl'),\n      'CallbackMethod': _.get(opts, 'callbackMethod'),\n      'Eid': _.get(opts, 'eid')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new EsimProfileInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Streams EsimProfileInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Supersim.V1.EsimProfileList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.eid] -\n   *          List the eSIM Profiles that have been associated with an EId\n   * @param {string} [opts.simSid] -\n   *          Find the eSIM Profile resource related to a Sim resource by providing the SIM SID\n   * @param {esim_profile.status} [opts.status] -\n   *          List the eSIM Profiles that are in a given status\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n\n  EsimProfileListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists EsimProfileInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Supersim.V1.EsimProfileList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.eid] -\n   *          List the eSIM Profiles that have been associated with an EId\n   * @param {string} [opts.simSid] -\n   *          Find the eSIM Profile resource related to a Sim resource by providing the SIM SID\n   * @param {esim_profile.status} [opts.status] -\n   *          List the eSIM Profiles that are in a given status\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  EsimProfileListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of EsimProfileInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Supersim.V1.EsimProfileList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.eid] -\n   *          List the eSIM Profiles that have been associated with an EId\n   * @param {string} [opts.simSid] -\n   *          Find the eSIM Profile resource related to a Sim resource by providing the SIM SID\n   * @param {esim_profile.status} [opts.status] -\n   *          List the eSIM Profiles that are in a given status\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  EsimProfileListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'Eid': _.get(opts, 'eid'),\n      'SimSid': _.get(opts, 'simSid'),\n      'Status': _.get(opts, 'status'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new EsimProfilePage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of EsimProfileInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Supersim.V1.EsimProfileList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  EsimProfileListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new EsimProfilePage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a esim_profile\n   *\n   * @function get\n   * @memberof Twilio.Supersim.V1.EsimProfileList#\n   *\n   * @param {string} sid - The SID of the eSIM Profile resource to fetch\n   *\n   * @returns {Twilio.Supersim.V1.EsimProfileContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  EsimProfileListInstance.get = function get(sid) {\n    return new EsimProfileContext(this._version, sid);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Supersim.V1.EsimProfileList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  EsimProfileListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  EsimProfileListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return EsimProfileListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the EsimProfilePage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Supersim.V1.EsimProfilePage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {EsimProfileSolution} solution - Path solution\n *\n * @returns EsimProfilePage\n */\n\n/* jshint ignore:end */\n\n\nEsimProfilePage = function EsimProfilePage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(EsimProfilePage.prototype, Page.prototype);\n\nEsimProfilePage.prototype.constructor = EsimProfilePage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of EsimProfileInstance\n *\n * @function getInstance\n * @memberof Twilio.Supersim.V1.EsimProfilePage#\n *\n * @param {EsimProfilePayload} payload - Payload response from the API\n *\n * @returns EsimProfileInstance\n */\n\n/* jshint ignore:end */\n\nEsimProfilePage.prototype.getInstance = function getInstance(payload) {\n  return new EsimProfileInstance(this._version, payload);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Supersim.V1.EsimProfilePage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nEsimProfilePage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nEsimProfilePage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the EsimProfileContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Supersim.V1.EsimProfileInstance\n *\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} accountSid -\n *          The SID of the Account to which the eSIM Profile resource belongs\n * @property {string} iccid - The ICCID associated with the Sim resource\n * @property {string} simSid -\n *          The SID of the Sim resource that this eSIM Profile controls\n * @property {esim_profile.status} status - The status of the eSIM Profile\n * @property {string} eid - Identifier of the eUICC that can claim the eSIM Profile\n * @property {string} smdpPlusAddress -\n *          Address of the SM-DP+ server from which the Profile will be downloaded\n * @property {string} errorCode -\n *          Code indicating the failure if the download of the SIM Profile failed and the eSIM Profile is in `failed` state\n * @property {string} errorMessage -\n *          Error message describing the failure if the download of the SIM Profile failed and the eSIM Profile is in `failed` state\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the resource was last updated\n * @property {string} url - The absolute URL of the eSIM Profile resource\n *\n * @param {V1} version - Version of the resource\n * @param {EsimProfilePayload} payload - The instance payload\n * @param {sid_like} sid - The SID of the eSIM Profile resource to fetch\n */\n\n/* jshint ignore:end */\n\n\nEsimProfileInstance = function EsimProfileInstance(version, payload, sid) {\n  this._version = version; // Marshaled Properties\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.iccid = payload.iccid; // jshint ignore:line\n\n  this.simSid = payload.sim_sid; // jshint ignore:line\n\n  this.status = payload.status; // jshint ignore:line\n\n  this.eid = payload.eid; // jshint ignore:line\n\n  this.smdpPlusAddress = payload.smdp_plus_address; // jshint ignore:line\n\n  this.errorCode = payload.error_code; // jshint ignore:line\n\n  this.errorMessage = payload.error_message; // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    sid: sid || this.sid\n  };\n};\n\nObject.defineProperty(EsimProfileInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new EsimProfileContext(this._version, this._solution.sid);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a EsimProfileInstance\n *\n * @function fetch\n * @memberof Twilio.Supersim.V1.EsimProfileInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed EsimProfileInstance\n */\n\n/* jshint ignore:end */\n\nEsimProfileInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Supersim.V1.EsimProfileInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nEsimProfileInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nEsimProfileInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the EsimProfileContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Supersim.V1.EsimProfileContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid_like} sid - The SID of the eSIM Profile resource to fetch\n */\n\n/* jshint ignore:end */\n\n\nEsimProfileContext = function EsimProfileContext(version, sid) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    sid: sid\n  };\n  this._uri = `/ESimProfiles/${sid}`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a EsimProfileInstance\n *\n * @function fetch\n * @memberof Twilio.Supersim.V1.EsimProfileContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed EsimProfileInstance\n */\n\n/* jshint ignore:end */\n\n\nEsimProfileContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new EsimProfileInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Supersim.V1.EsimProfileContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nEsimProfileContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nEsimProfileContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  EsimProfileList: EsimProfileList,\n  EsimProfilePage: EsimProfilePage,\n  EsimProfileInstance: EsimProfileInstance,\n  EsimProfileContext: EsimProfileContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","deserialize","values","EsimProfileList","EsimProfilePage","EsimProfileInstance","EsimProfileContext","version","EsimProfileListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isFunction","deferred","defer","data","of","promise","uri","method","then","payload","resolve","bind","catch","error","reject","nodeify","each","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","fetchNextPage","fn","page","instances","instance","nextPage","merge","list","allResources","resource","push","length","pageToken","pageNumber","params","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","accountSid","account_sid","iccid","simSid","sim_sid","status","eid","smdpPlusAddress","smdp_plus_address","errorCode","error_code","errorMessage","error_message","dateCreated","iso8601DateTime","date_created","dateUpdated","date_updated","url","_context","undefined","Object","defineProperty","fetch","_proxy","module","exports"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/twilio/lib/rest/supersim/v1/esimProfile.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../base/values');  /* jshint ignore:line */\n\nvar EsimProfileList;\nvar EsimProfilePage;\nvar EsimProfileInstance;\nvar EsimProfileContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the EsimProfileList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Supersim.V1.EsimProfileList\n *\n * @param {Twilio.Supersim.V1} version - Version of the resource\n */\n/* jshint ignore:end */\nEsimProfileList = function EsimProfileList(version) {\n  /* jshint ignore:start */\n  /**\n   * @function esimProfiles\n   * @memberof Twilio.Supersim.V1#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Supersim.V1.EsimProfileContext}\n   */\n  /* jshint ignore:end */\n  function EsimProfileListInstance(sid) {\n    return EsimProfileListInstance.get(sid);\n  }\n\n  EsimProfileListInstance._version = version;\n  // Path Solution\n  EsimProfileListInstance._solution = {};\n  EsimProfileListInstance._uri = `/ESimProfiles`;\n  /* jshint ignore:start */\n  /**\n   * create a EsimProfileInstance\n   *\n   * @function create\n   * @memberof Twilio.Supersim.V1.EsimProfileList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.callbackUrl] -\n   *          The URL we should call after we have sent when the status of the eSIM Profile changes\n   * @param {string} [opts.callbackMethod] -\n   *          The HTTP method we should use to call callback_url\n   * @param {string} [opts.eid] -\n   *          Identifier of the eUICC that will claim the eSIM Profile\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed EsimProfileInstance\n   */\n  /* jshint ignore:end */\n  EsimProfileListInstance.create = function create(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'CallbackUrl': _.get(opts, 'callbackUrl'),\n      'CallbackMethod': _.get(opts, 'callbackMethod'),\n      'Eid': _.get(opts, 'eid')\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new EsimProfileInstance(this._version, payload, this._solution.sid));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams EsimProfileInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Supersim.V1.EsimProfileList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.eid] -\n   *          List the eSIM Profiles that have been associated with an EId\n   * @param {string} [opts.simSid] -\n   *          Find the eSIM Profile resource related to a Sim resource by providing the SIM SID\n   * @param {esim_profile.status} [opts.status] -\n   *          List the eSIM Profiles that are in a given status\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  EsimProfileListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists EsimProfileInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Supersim.V1.EsimProfileList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.eid] -\n   *          List the eSIM Profiles that have been associated with an EId\n   * @param {string} [opts.simSid] -\n   *          Find the eSIM Profile resource related to a Sim resource by providing the SIM SID\n   * @param {esim_profile.status} [opts.status] -\n   *          List the eSIM Profiles that are in a given status\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  EsimProfileListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of EsimProfileInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Supersim.V1.EsimProfileList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.eid] -\n   *          List the eSIM Profiles that have been associated with an EId\n   * @param {string} [opts.simSid] -\n   *          Find the eSIM Profile resource related to a Sim resource by providing the SIM SID\n   * @param {esim_profile.status} [opts.status] -\n   *          List the eSIM Profiles that are in a given status\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  EsimProfileListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Eid': _.get(opts, 'eid'),\n      'SimSid': _.get(opts, 'simSid'),\n      'Status': _.get(opts, 'status'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new EsimProfilePage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of EsimProfileInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Supersim.V1.EsimProfileList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  EsimProfileListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new EsimProfilePage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a esim_profile\n   *\n   * @function get\n   * @memberof Twilio.Supersim.V1.EsimProfileList#\n   *\n   * @param {string} sid - The SID of the eSIM Profile resource to fetch\n   *\n   * @returns {Twilio.Supersim.V1.EsimProfileContext}\n   */\n  /* jshint ignore:end */\n  EsimProfileListInstance.get = function get(sid) {\n    return new EsimProfileContext(this._version, sid);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Supersim.V1.EsimProfileList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  EsimProfileListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  EsimProfileListInstance[util.inspect.custom] = function inspect(depth, options)\n      {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return EsimProfileListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the EsimProfilePage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Supersim.V1.EsimProfilePage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {EsimProfileSolution} solution - Path solution\n *\n * @returns EsimProfilePage\n */\n/* jshint ignore:end */\nEsimProfilePage = function EsimProfilePage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(EsimProfilePage.prototype, Page.prototype);\nEsimProfilePage.prototype.constructor = EsimProfilePage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of EsimProfileInstance\n *\n * @function getInstance\n * @memberof Twilio.Supersim.V1.EsimProfilePage#\n *\n * @param {EsimProfilePayload} payload - Payload response from the API\n *\n * @returns EsimProfileInstance\n */\n/* jshint ignore:end */\nEsimProfilePage.prototype.getInstance = function getInstance(payload) {\n  return new EsimProfileInstance(this._version, payload);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Supersim.V1.EsimProfilePage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nEsimProfilePage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nEsimProfilePage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the EsimProfileContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Supersim.V1.EsimProfileInstance\n *\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} accountSid -\n *          The SID of the Account to which the eSIM Profile resource belongs\n * @property {string} iccid - The ICCID associated with the Sim resource\n * @property {string} simSid -\n *          The SID of the Sim resource that this eSIM Profile controls\n * @property {esim_profile.status} status - The status of the eSIM Profile\n * @property {string} eid - Identifier of the eUICC that can claim the eSIM Profile\n * @property {string} smdpPlusAddress -\n *          Address of the SM-DP+ server from which the Profile will be downloaded\n * @property {string} errorCode -\n *          Code indicating the failure if the download of the SIM Profile failed and the eSIM Profile is in `failed` state\n * @property {string} errorMessage -\n *          Error message describing the failure if the download of the SIM Profile failed and the eSIM Profile is in `failed` state\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the resource was last updated\n * @property {string} url - The absolute URL of the eSIM Profile resource\n *\n * @param {V1} version - Version of the resource\n * @param {EsimProfilePayload} payload - The instance payload\n * @param {sid_like} sid - The SID of the eSIM Profile resource to fetch\n */\n/* jshint ignore:end */\nEsimProfileInstance = function EsimProfileInstance(version, payload, sid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.iccid = payload.iccid; // jshint ignore:line\n  this.simSid = payload.sim_sid; // jshint ignore:line\n  this.status = payload.status; // jshint ignore:line\n  this.eid = payload.eid; // jshint ignore:line\n  this.smdpPlusAddress = payload.smdp_plus_address; // jshint ignore:line\n  this.errorCode = payload.error_code; // jshint ignore:line\n  this.errorMessage = payload.error_message; // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {sid: sid || this.sid, };\n};\n\nObject.defineProperty(EsimProfileInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new EsimProfileContext(this._version, this._solution.sid);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a EsimProfileInstance\n *\n * @function fetch\n * @memberof Twilio.Supersim.V1.EsimProfileInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed EsimProfileInstance\n */\n/* jshint ignore:end */\nEsimProfileInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Supersim.V1.EsimProfileInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nEsimProfileInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nEsimProfileInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the EsimProfileContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Supersim.V1.EsimProfileContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid_like} sid - The SID of the eSIM Profile resource to fetch\n */\n/* jshint ignore:end */\nEsimProfileContext = function EsimProfileContext(version, sid) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {sid: sid, };\n  this._uri = `/ESimProfiles/${sid}`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a EsimProfileInstance\n *\n * @function fetch\n * @memberof Twilio.Supersim.V1.EsimProfileContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed EsimProfileInstance\n */\n/* jshint ignore:end */\nEsimProfileContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new EsimProfileInstance(this._version, payload, this._solution.sid));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Supersim.V1.EsimProfileContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nEsimProfileContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nEsimProfileContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  EsimProfileList: EsimProfileList,\n  EsimProfilePage: EsimProfilePage,\n  EsimProfileInstance: EsimProfileInstance,\n  EsimProfileContext: EsimProfileContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}