{"ast":null,"code":"'use strict';\n\nvar _ = require('lodash');\n\nvar jwt = require('jsonwebtoken');\n\nvar util = require('util');\n/**\n * @constructor\n * @param {object} options - ...\n * @param {string} options.workspaceSid - The workspace unique ID\n * @param {string} options.workerSid - The worker unique ID\n * @param {string} options.role - The role of the grant\n */\n\n\nfunction TaskRouterGrant(options) {\n  options = options || {};\n  this.workspaceSid = options.workspaceSid;\n  this.workerSid = options.workerSid;\n  this.role = options.role;\n}\n\n_.extend(TaskRouterGrant.prototype, {\n  key: 'task_router',\n  toPayload: function () {\n    var grant = {};\n\n    if (this.workspaceSid) {\n      grant.workspace_sid = this.workspaceSid;\n    }\n\n    if (this.workerSid) {\n      grant.worker_sid = this.workerSid;\n    }\n\n    if (this.role) {\n      grant.role = this.role;\n    }\n\n    return grant;\n  }\n});\n/**\n * @constructor\n * @param {object} options - ...\n * @param {string} options.serviceSid - The service unique ID\n * @param {string} options.endpointId - The endpoint ID\n * @param {string} options.deploymentRoleSid - SID of the deployment role to be\n *                 assigned to the user\n * @param {string} options.pushCredentialSid - The Push Credentials SID\n */\n\n\nfunction ChatGrant(options) {\n  options = options || {};\n  this.serviceSid = options.serviceSid;\n  this.endpointId = options.endpointId;\n  this.deploymentRoleSid = options.deploymentRoleSid;\n  this.pushCredentialSid = options.pushCredentialSid;\n}\n\n_.extend(ChatGrant.prototype, {\n  key: 'chat',\n  toPayload: function () {\n    var grant = {};\n\n    if (this.serviceSid) {\n      grant.service_sid = this.serviceSid;\n    }\n\n    if (this.endpointId) {\n      grant.endpoint_id = this.endpointId;\n    }\n\n    if (this.deploymentRoleSid) {\n      grant.deployment_role_sid = this.deploymentRoleSid;\n    }\n\n    if (this.pushCredentialSid) {\n      grant.push_credential_sid = this.pushCredentialSid;\n    }\n\n    return grant;\n  }\n});\n/**\n * @deprecated - Use ChatGrant instead.\n *\n * @constructor\n * @param {object} options - ...\n * @param {string} options.serviceSid - The service unique ID\n * @param {string} options.endpointId - The endpoint ID\n * @param {string} options.deploymentRoleSid - SID of the deployment role to be\n *                 assigned to the user\n * @param {string} options.pushCredentialSid - The Push Credentials SID\n */\n\n\nfunction IpMessagingGrant(options) {\n  ChatGrant.call(this, options);\n}\n\nIpMessagingGrant.prototype = _.create(ChatGrant.prototype, _.assign({\n  '_super': ChatGrant.prototype,\n  'constructor': ChatGrant\n}));\nIpMessagingGrant.prototype.key = 'ip_messaging';\n/**\n  * @deprecated - Use VideoGrant instead\n  *\n  * @constructor\n  * @param {object} options - ...\n  * @param {string} options.configurationProfileSid - The configuration\n  *                 profile unique ID\n  */\n\nfunction ConversationsGrant(options) {\n  options = options || {};\n  this.configurationProfileSid = options.configurationProfileSid;\n}\n\n_.extend(ConversationsGrant.prototype, {\n  key: 'rtc',\n  toPayload: function () {\n    var grant = {};\n\n    if (this.configurationProfileSid) {\n      grant.configuration_profile_sid = this.configurationProfileSid;\n    }\n\n    return grant;\n  }\n});\n/**\n * @constructor\n * @param {object} options - ...\n * @param {string} options.room - The Room name or Room sid.\n */\n\n\nfunction VideoGrant(options) {\n  options = options || {};\n  this.room = options.room;\n}\n\n_.extend(VideoGrant.prototype, {\n  key: 'video',\n  toPayload: function () {\n    var grant = {};\n\n    if (this.room) {\n      grant.room = this.room;\n    }\n\n    return grant;\n  }\n});\n/**\n * @constructor\n * @param {string} options.serviceSid - The service unique ID\n * @param {string} options.endpointId - The endpoint ID\n */\n\n\nfunction SyncGrant(options) {\n  options = options || {};\n  this.serviceSid = options.serviceSid;\n  this.endpointId = options.endpointId;\n}\n\n_.extend(SyncGrant.prototype, {\n  key: 'data_sync',\n  toPayload: function () {\n    var grant = {};\n\n    if (this.serviceSid) {\n      grant.service_sid = this.serviceSid;\n    }\n\n    if (this.endpointId) {\n      grant.endpoint_id = this.endpointId;\n    }\n\n    return grant;\n  }\n});\n/**\n * @constructor\n * @param {object} options - ...\n * @param {boolean} options.incomingAllow - Whether or not this endpoint is allowed to receive incoming calls as grants.identity\n * @param {string} options.outgoingApplicationSid - application sid to call when placing outgoing call\n * @param {object} options.outgoingApplicationParams - request params to pass to the application\n * @param {string} options.pushCredentialSid - Push Credential Sid to use when registering to receive incoming call notifications\n * @param {string} options.endpointId - Specify an endpoint identifier for this device, which will allow the developer\n *                 to direct calls to a specific endpoint when multiple devices are associated with a single identity\n */\n\n\nfunction VoiceGrant(options) {\n  options = options || {};\n  this.incomingAllow = options.incomingAllow;\n  this.outgoingApplicationSid = options.outgoingApplicationSid;\n  this.outgoingApplicationParams = options.outgoingApplicationParams;\n  this.pushCredentialSid = options.pushCredentialSid;\n  this.endpointId = options.endpointId;\n}\n\n_.extend(VoiceGrant.prototype, {\n  key: 'voice',\n  toPayload: function () {\n    var grant = {};\n\n    if (this.incomingAllow === true) {\n      grant.incoming = {\n        allow: true\n      };\n    }\n\n    if (this.outgoingApplicationSid) {\n      grant.outgoing = {};\n      grant.outgoing.application_sid = this.outgoingApplicationSid;\n\n      if (this.outgoingApplicationParams) {\n        grant.outgoing.params = this.outgoingApplicationParams;\n      }\n    }\n\n    if (this.pushCredentialSid) {\n      grant.push_credential_sid = this.pushCredentialSid;\n    }\n\n    if (this.endpointId) {\n      grant.endpoint_id = this.endpointId;\n    }\n\n    return grant;\n  }\n});\n/**\n * @constructor\n * @param {object} options - ...\n * @param {string} options.grant - The PlaybackGrant retrieved from Twilio's API\n */\n\n\nfunction PlaybackGrant(options) {\n  options = options || {};\n  this.grant = options.grant;\n}\n\n_.extend(PlaybackGrant.prototype, {\n  key: 'player',\n  toPayload: function () {\n    var grant = {};\n\n    if (this.grant) {\n      grant = this.grant;\n    }\n\n    return grant;\n  }\n});\n/**\n * @constructor\n * @param {string} accountSid - The account's unique ID to which access is scoped\n * @param {string} keySid - The signing key's unique ID\n * @param {string} secret - The secret to sign the token with\n * @param {object} options - ...\n * @param {number} [options.ttl=3600] - Time to live in seconds\n * @param {string} [options.identity] - The identity of the first person\n * @param {number} [options.nbf] - Time from epoch in seconds for not before value\n * @param {string} [options.region] - The region value associated with this account\n */\n\n\nfunction AccessToken(accountSid, keySid, secret, options) {\n  if (!accountSid) {\n    throw new Error('accountSid is required');\n  }\n\n  if (!keySid) {\n    throw new Error('keySid is required');\n  }\n\n  if (!secret) {\n    throw new Error('secret is required');\n  }\n\n  options = options || {};\n  this.accountSid = accountSid;\n  this.keySid = keySid;\n  this.secret = secret;\n  this.ttl = options.ttl || 3600;\n  this.identity = options.identity;\n  this.nbf = options.nbf;\n  this.region = options.region;\n  this.grants = [];\n} // Class level properties\n\n\nAccessToken.IpMessagingGrant = util.deprecate(IpMessagingGrant, 'IpMessagingGrant is deprecated, use ChatGrant instead.');\nAccessToken.ChatGrant = ChatGrant;\nAccessToken.VoiceGrant = VoiceGrant;\nAccessToken.SyncGrant = SyncGrant;\nAccessToken.VideoGrant = VideoGrant;\nAccessToken.ConversationsGrant = util.deprecate(ConversationsGrant, 'ConversationsGrant is deprecated, use VideoGrant instead.');\nAccessToken.TaskRouterGrant = TaskRouterGrant;\nAccessToken.PlaybackGrant = PlaybackGrant;\nAccessToken.DEFAULT_ALGORITHM = 'HS256';\nAccessToken.ALGORITHMS = ['HS256', 'HS384', 'HS512'];\n\n_.extend(AccessToken.prototype, {\n  addGrant: function (grant) {\n    this.grants.push(grant);\n  },\n  toJwt: function (algorithm) {\n    algorithm = algorithm || AccessToken.DEFAULT_ALGORITHM;\n\n    if (!_.includes(AccessToken.ALGORITHMS, algorithm)) {\n      throw new Error('Algorithm not supported. Allowed values are ' + AccessToken.ALGORITHMS.join(', '));\n    }\n\n    var grants = {};\n\n    if (_.isInteger(this.identity) || _.isString(this.identity)) {\n      grants.identity = String(this.identity);\n    }\n\n    _.each(this.grants, function (grant) {\n      grants[grant.key] = grant.toPayload();\n    });\n\n    var now = Math.floor(Date.now() / 1000);\n    var payload = {\n      jti: this.keySid + '-' + now,\n      grants: grants\n    };\n\n    if (_.isNumber(this.nbf)) {\n      payload.nbf = this.nbf;\n    }\n\n    var header = {\n      cty: 'twilio-fpa;v=1',\n      typ: 'JWT'\n    };\n\n    if (this.region && _.isString(this.region)) {\n      header.twr = this.region;\n    }\n\n    return jwt.sign(payload, this.secret, {\n      header: header,\n      algorithm: algorithm,\n      issuer: this.keySid,\n      subject: this.accountSid,\n      expiresIn: this.ttl\n    });\n  }\n});\n\nmodule.exports = AccessToken;","map":{"version":3,"names":["_","require","jwt","util","TaskRouterGrant","options","workspaceSid","workerSid","role","extend","prototype","key","toPayload","grant","workspace_sid","worker_sid","ChatGrant","serviceSid","endpointId","deploymentRoleSid","pushCredentialSid","service_sid","endpoint_id","deployment_role_sid","push_credential_sid","IpMessagingGrant","call","create","assign","ConversationsGrant","configurationProfileSid","configuration_profile_sid","VideoGrant","room","SyncGrant","VoiceGrant","incomingAllow","outgoingApplicationSid","outgoingApplicationParams","incoming","allow","outgoing","application_sid","params","PlaybackGrant","AccessToken","accountSid","keySid","secret","Error","ttl","identity","nbf","region","grants","deprecate","DEFAULT_ALGORITHM","ALGORITHMS","addGrant","push","toJwt","algorithm","includes","join","isInteger","isString","String","each","now","Math","floor","Date","payload","jti","isNumber","header","cty","typ","twr","sign","issuer","subject","expiresIn","module","exports"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/twilio/lib/jwt/AccessToken.js"],"sourcesContent":["'use strict';\n\nvar _ = require('lodash');\nvar jwt = require('jsonwebtoken');\nvar util = require('util');\n\n\n/**\n * @constructor\n * @param {object} options - ...\n * @param {string} options.workspaceSid - The workspace unique ID\n * @param {string} options.workerSid - The worker unique ID\n * @param {string} options.role - The role of the grant\n */\nfunction TaskRouterGrant(options) {\n  options = options || {};\n  this.workspaceSid = options.workspaceSid;\n  this.workerSid = options.workerSid;\n  this.role = options.role;\n}\n\n_.extend(TaskRouterGrant.prototype, {\n  key: 'task_router',\n\n  toPayload: function() {\n    var grant = {};\n    if (this.workspaceSid) { grant.workspace_sid = this.workspaceSid; }\n    if (this.workerSid) { grant.worker_sid = this.workerSid; }\n    if (this.role) { grant.role = this.role; }\n    return grant;\n  }\n});\n\n\n/**\n * @constructor\n * @param {object} options - ...\n * @param {string} options.serviceSid - The service unique ID\n * @param {string} options.endpointId - The endpoint ID\n * @param {string} options.deploymentRoleSid - SID of the deployment role to be\n *                 assigned to the user\n * @param {string} options.pushCredentialSid - The Push Credentials SID\n */\nfunction ChatGrant(options) {\n  options = options || {};\n  this.serviceSid = options.serviceSid;\n  this.endpointId = options.endpointId;\n  this.deploymentRoleSid = options.deploymentRoleSid;\n  this.pushCredentialSid = options.pushCredentialSid;\n}\n\n_.extend(ChatGrant.prototype, {\n  key: 'chat',\n\n  toPayload: function() {\n    var grant = {};\n    if (this.serviceSid) { grant.service_sid = this.serviceSid; }\n    if (this.endpointId) { grant.endpoint_id = this.endpointId; }\n    if (this.deploymentRoleSid) {\n      grant.deployment_role_sid = this.deploymentRoleSid;\n    }\n    if (this.pushCredentialSid) {\n      grant.push_credential_sid = this.pushCredentialSid;\n    }\n    return grant;\n  }\n});\n\n/**\n * @deprecated - Use ChatGrant instead.\n *\n * @constructor\n * @param {object} options - ...\n * @param {string} options.serviceSid - The service unique ID\n * @param {string} options.endpointId - The endpoint ID\n * @param {string} options.deploymentRoleSid - SID of the deployment role to be\n *                 assigned to the user\n * @param {string} options.pushCredentialSid - The Push Credentials SID\n */\nfunction IpMessagingGrant(options) {\n  ChatGrant.call(this, options);\n}\n\nIpMessagingGrant.prototype = _.create(ChatGrant.prototype, _.assign({\n  '_super': ChatGrant.prototype,\n  'constructor': ChatGrant\n}));\n\nIpMessagingGrant.prototype.key = 'ip_messaging';\n\n/**\n  * @deprecated - Use VideoGrant instead\n  *\n  * @constructor\n  * @param {object} options - ...\n  * @param {string} options.configurationProfileSid - The configuration\n  *                 profile unique ID\n  */\nfunction ConversationsGrant(options) {\n  options = options || {};\n  this.configurationProfileSid = options.configurationProfileSid;\n}\n\n_.extend(ConversationsGrant.prototype, {\n  key: 'rtc',\n  toPayload: function() {\n    var grant = {};\n    if (this.configurationProfileSid) {\n      grant.configuration_profile_sid = this.configurationProfileSid;\n    }\n    return grant;\n  }\n});\n\n/**\n * @constructor\n * @param {object} options - ...\n * @param {string} options.room - The Room name or Room sid.\n */\nfunction VideoGrant(options) {\n  options = options || {};\n  this.room = options.room;\n}\n\n_.extend(VideoGrant.prototype, {\n  key: 'video',\n  toPayload: function() {\n    var grant = {};\n    if (this.room) { grant.room = this.room; }\n    return grant;\n  }\n});\n\n/**\n * @constructor\n * @param {string} options.serviceSid - The service unique ID\n * @param {string} options.endpointId - The endpoint ID\n */\nfunction SyncGrant(options) {\n  options = options || {};\n  this.serviceSid = options.serviceSid;\n  this.endpointId = options.endpointId;\n}\n\n_.extend(SyncGrant.prototype, {\n  key: 'data_sync',\n\n  toPayload: function() {\n    var grant = {};\n    if (this.serviceSid) { grant.service_sid = this.serviceSid; }\n    if (this.endpointId) { grant.endpoint_id = this.endpointId; }\n    return grant;\n  }\n});\n\n/**\n * @constructor\n * @param {object} options - ...\n * @param {boolean} options.incomingAllow - Whether or not this endpoint is allowed to receive incoming calls as grants.identity\n * @param {string} options.outgoingApplicationSid - application sid to call when placing outgoing call\n * @param {object} options.outgoingApplicationParams - request params to pass to the application\n * @param {string} options.pushCredentialSid - Push Credential Sid to use when registering to receive incoming call notifications\n * @param {string} options.endpointId - Specify an endpoint identifier for this device, which will allow the developer\n *                 to direct calls to a specific endpoint when multiple devices are associated with a single identity\n */\nfunction VoiceGrant(options) {\n  options = options || {};\n  this.incomingAllow = options.incomingAllow;\n  this.outgoingApplicationSid = options.outgoingApplicationSid;\n  this.outgoingApplicationParams = options.outgoingApplicationParams;\n  this.pushCredentialSid = options.pushCredentialSid;\n  this.endpointId = options.endpointId;\n}\n\n_.extend(VoiceGrant.prototype, {\n  key: 'voice',\n  toPayload: function() {\n    var grant = {};\n    if (this.incomingAllow === true) {\n      grant.incoming = { allow: true };\n    }\n\n    if (this.outgoingApplicationSid) {\n      grant.outgoing = {};\n      grant.outgoing.application_sid = this.outgoingApplicationSid;\n\n      if (this.outgoingApplicationParams) {\n        grant.outgoing.params = this.outgoingApplicationParams;\n      }\n    }\n\n    if (this.pushCredentialSid) {\n      grant.push_credential_sid = this.pushCredentialSid;\n    }\n    if (this.endpointId) {\n      grant.endpoint_id = this.endpointId;\n    }\n    return grant;\n  }\n});\n\n/**\n * @constructor\n * @param {object} options - ...\n * @param {string} options.grant - The PlaybackGrant retrieved from Twilio's API\n */\nfunction PlaybackGrant(options) {\n  options = options || {};\n  this.grant = options.grant;\n}\n\n_.extend(PlaybackGrant.prototype, {\n  key: 'player',\n  toPayload: function() {\n    var grant = {};\n    if (this.grant) { grant = this.grant; }\n    return grant;\n  }\n});\n\n/**\n * @constructor\n * @param {string} accountSid - The account's unique ID to which access is scoped\n * @param {string} keySid - The signing key's unique ID\n * @param {string} secret - The secret to sign the token with\n * @param {object} options - ...\n * @param {number} [options.ttl=3600] - Time to live in seconds\n * @param {string} [options.identity] - The identity of the first person\n * @param {number} [options.nbf] - Time from epoch in seconds for not before value\n * @param {string} [options.region] - The region value associated with this account\n */\nfunction AccessToken(accountSid, keySid, secret, options) {\n  if (!accountSid) { throw new Error('accountSid is required'); }\n  if (!keySid) { throw new Error('keySid is required'); }\n  if (!secret) { throw new Error('secret is required'); }\n  options = options || {};\n\n  this.accountSid = accountSid;\n  this.keySid = keySid;\n  this.secret = secret;\n  this.ttl = options.ttl || 3600;\n  this.identity = options.identity;\n  this.nbf = options.nbf;\n  this.region = options.region;\n  this.grants = [];\n}\n\n// Class level properties\nAccessToken.IpMessagingGrant = util.deprecate(IpMessagingGrant, 'IpMessagingGrant is deprecated, use ChatGrant instead.');\nAccessToken.ChatGrant = ChatGrant;\nAccessToken.VoiceGrant = VoiceGrant;\nAccessToken.SyncGrant = SyncGrant;\nAccessToken.VideoGrant = VideoGrant;\nAccessToken.ConversationsGrant = util.deprecate(ConversationsGrant, 'ConversationsGrant is deprecated, use VideoGrant instead.');\nAccessToken.TaskRouterGrant = TaskRouterGrant;\nAccessToken.PlaybackGrant = PlaybackGrant;\nAccessToken.DEFAULT_ALGORITHM = 'HS256';\nAccessToken.ALGORITHMS = [\n  'HS256',\n  'HS384',\n  'HS512'\n];\n\n_.extend(AccessToken.prototype, {\n  addGrant: function(grant) {\n    this.grants.push(grant);\n  },\n\n  toJwt: function(algorithm) {\n    algorithm = algorithm || AccessToken.DEFAULT_ALGORITHM;\n    if (!_.includes(AccessToken.ALGORITHMS, algorithm)) {\n      throw new Error('Algorithm not supported. Allowed values are ' + AccessToken.ALGORITHMS.join(', '));\n    }\n\n    var grants = {};\n    if (_.isInteger(this.identity) || _.isString(this.identity)) { grants.identity = String(this.identity); }\n\n    _.each(this.grants, function(grant) {\n      grants[grant.key] = grant.toPayload();\n    });\n\n    var now = Math.floor(Date.now() / 1000);\n    var payload = {\n      jti: this.keySid + '-' + now,\n      grants: grants\n    };\n    if (_.isNumber(this.nbf)) { payload.nbf = this.nbf; }\n\n    var header = {\n      cty: 'twilio-fpa;v=1',\n      typ: 'JWT'\n    };\n\n    if (this.region && _.isString(this.region)) {\n      header.twr = this.region;\n    }\n\n    return jwt.sign(payload, this.secret, {\n      header: header,\n      algorithm: algorithm,\n      issuer: this.keySid,\n      subject: this.accountSid,\n      expiresIn: this.ttl\n    });\n  }\n});\n\n\nmodule.exports = AccessToken;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}