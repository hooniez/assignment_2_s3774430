{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar serialize = require('../../../../../base/serialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../../base/values');\n/* jshint ignore:line */\n\n\nvar SyncListItemList;\nvar SyncListItemPage;\nvar SyncListItemInstance;\nvar SyncListItemContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the SyncListItemList\n *\n * @constructor Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList\n *\n * @param {Twilio.Sync.V1} version - Version of the resource\n * @param {string} serviceSid -\n *          The SID of the Sync Service that the resource is associated with\n * @param {string} listSid - The SID of the Sync List that contains the List Item\n */\n\n/* jshint ignore:end */\n\nSyncListItemList = function SyncListItemList(version, serviceSid, listSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function syncListItems\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemContext}\n   */\n\n  /* jshint ignore:end */\n  function SyncListItemListInstance(sid) {\n    return SyncListItemListInstance.get(sid);\n  }\n\n  SyncListItemListInstance._version = version; // Path Solution\n\n  SyncListItemListInstance._solution = {\n    serviceSid: serviceSid,\n    listSid: listSid\n  };\n  SyncListItemListInstance._uri = `/Services/${serviceSid}/Lists/${listSid}/Items`;\n  /* jshint ignore:start */\n\n  /**\n   * create a SyncListItemInstance\n   *\n   * @function create\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList#\n   *\n   * @param {object} opts - Options for request\n   * @param {object} opts.data -\n   *          A JSON string that represents an arbitrary, schema-less object that the List Item stores\n   * @param {number} [opts.ttl] - An alias for item_ttl\n   * @param {number} [opts.itemTtl] -\n   *          How long, in seconds, before the List Item expires\n   * @param {number} [opts.collectionTtl] -\n   *          How long, in seconds, before the List Item's parent Sync List expires\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed SyncListItemInstance\n   */\n\n  /* jshint ignore:end */\n\n  SyncListItemListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n\n    if (_.isUndefined(opts['data'])) {\n      throw new Error('Required parameter \"opts[\\'data\\']\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Data': serialize.object(_.get(opts, 'data')),\n      'Ttl': _.get(opts, 'ttl'),\n      'ItemTtl': _.get(opts, 'itemTtl'),\n      'CollectionTtl': _.get(opts, 'collectionTtl')\n    });\n\n    var promise = this._version.create({\n      uri: this._uri,\n      method: 'POST',\n      data: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new SyncListItemInstance(this._version, payload, this._solution.serviceSid, this._solution.listSid, this._solution.index));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Streams SyncListItemInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sync_list_item.query_result_order} [opts.order] -\n   *          The order to return the List Items\n   * @param {string} [opts.from] -\n   *          The index of the first Sync List Item resource to read\n   * @param {sync_list_item.query_from_bound_type} [opts.bounds] -\n   *          Whether to include the List Item referenced by the from parameter\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n\n  SyncListItemListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists SyncListItemInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sync_list_item.query_result_order} [opts.order] -\n   *          The order to return the List Items\n   * @param {string} [opts.from] -\n   *          The index of the first Sync List Item resource to read\n   * @param {sync_list_item.query_from_bound_type} [opts.bounds] -\n   *          Whether to include the List Item referenced by the from parameter\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  SyncListItemListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of SyncListItemInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sync_list_item.query_result_order} [opts.order] -\n   *          The order to return the List Items\n   * @param {string} [opts.from] -\n   *          The index of the first Sync List Item resource to read\n   * @param {sync_list_item.query_from_bound_type} [opts.bounds] -\n   *          Whether to include the List Item referenced by the from parameter\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  SyncListItemListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'Order': _.get(opts, 'order'),\n      'From': _.get(opts, 'from'),\n      'Bounds': _.get(opts, 'bounds'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new SyncListItemPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of SyncListItemInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  SyncListItemListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new SyncListItemPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a sync_list_item\n   *\n   * @function get\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList#\n   *\n   * @param {string} index - The index of the Sync List Item resource to fetch\n   *\n   * @returns {Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  SyncListItemListInstance.get = function get(index) {\n    return new SyncListItemContext(this._version, this._solution.serviceSid, this._solution.listSid, index);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  SyncListItemListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  SyncListItemListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return SyncListItemListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the SyncListItemPage\n *\n * @constructor Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {SyncListItemSolution} solution - Path solution\n *\n * @returns SyncListItemPage\n */\n\n/* jshint ignore:end */\n\n\nSyncListItemPage = function SyncListItemPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(SyncListItemPage.prototype, Page.prototype);\n\nSyncListItemPage.prototype.constructor = SyncListItemPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of SyncListItemInstance\n *\n * @function getInstance\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemPage#\n *\n * @param {SyncListItemPayload} payload - Payload response from the API\n *\n * @returns SyncListItemInstance\n */\n\n/* jshint ignore:end */\n\nSyncListItemPage.prototype.getInstance = function getInstance(payload) {\n  return new SyncListItemInstance(this._version, payload, this._solution.serviceSid, this._solution.listSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nSyncListItemPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nSyncListItemPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the SyncListItemContext\n *\n * @constructor Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemInstance\n *\n * @property {number} index - The automatically generated index of the List Item\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} serviceSid -\n *          The SID of the Sync Service that the resource is associated with\n * @property {string} listSid -\n *          The SID of the Sync List that contains the List Item\n * @property {string} url - The absolute URL of the List Item resource\n * @property {string} revision -\n *          The current revision of the item, represented as a string\n * @property {object} data -\n *          An arbitrary, schema-less object that the List Item stores\n * @property {Date} dateExpires -\n *          The ISO 8601 date and time in GMT when the List Item expires\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the resource was last updated\n * @property {string} createdBy - The identity of the List Item's creator\n *\n * @param {V1} version - Version of the resource\n * @param {SyncListItemPayload} payload - The instance payload\n * @param {sid} serviceSid -\n *          The SID of the Sync Service that the resource is associated with\n * @param {sid} listSid - The SID of the Sync List that contains the List Item\n * @param {integer} index - The index of the Sync List Item resource to fetch\n */\n\n/* jshint ignore:end */\n\n\nSyncListItemInstance = function SyncListItemInstance(version, payload, serviceSid, listSid, index) {\n  this._version = version; // Marshaled Properties\n\n  this.index = deserialize.integer(payload.index); // jshint ignore:line\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n\n  this.listSid = payload.list_sid; // jshint ignore:line\n\n  this.url = payload.url; // jshint ignore:line\n\n  this.revision = payload.revision; // jshint ignore:line\n\n  this.data = payload.data; // jshint ignore:line\n\n  this.dateExpires = deserialize.iso8601DateTime(payload.date_expires); // jshint ignore:line\n\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n\n  this.createdBy = payload.created_by; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    serviceSid: serviceSid,\n    listSid: listSid,\n    index: index || this.index\n  };\n};\n\nObject.defineProperty(SyncListItemInstance.prototype, '_proxy', {\n  get: function () {\n    if (!this._context) {\n      this._context = new SyncListItemContext(this._version, this._solution.serviceSid, this._solution.listSid, this._solution.index);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a SyncListItemInstance\n *\n * @function fetch\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListItemInstance\n */\n\n/* jshint ignore:end */\n\nSyncListItemInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * remove a SyncListItemInstance\n *\n * @function remove\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.ifMatch] - The If-Match HTTP request header\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListItemInstance\n */\n\n/* jshint ignore:end */\n\n\nSyncListItemInstance.prototype.remove = function remove(opts, callback) {\n  return this._proxy.remove(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * update a SyncListItemInstance\n *\n * @function update\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {object} [opts.data] -\n *          A JSON string that represents an arbitrary, schema-less object that the List Item stores\n * @param {number} [opts.ttl] - An alias for item_ttl\n * @param {number} [opts.itemTtl] -\n *          How long, in seconds, before the List Item expires\n * @param {number} [opts.collectionTtl] -\n *          How long, in seconds, before the List Item's parent Sync List expires\n * @param {string} [opts.ifMatch] - The If-Match HTTP request header\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListItemInstance\n */\n\n/* jshint ignore:end */\n\n\nSyncListItemInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nSyncListItemInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nSyncListItemInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the SyncListItemContext\n *\n * @constructor Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid_like} serviceSid -\n *          The SID of the Sync Service with the Sync List Item resource to fetch\n * @param {sid_like} listSid -\n *          The SID of the Sync List with the Sync List Item resource to fetch\n * @param {integer} index - The index of the Sync List Item resource to fetch\n */\n\n/* jshint ignore:end */\n\n\nSyncListItemContext = function SyncListItemContext(version, serviceSid, listSid, index) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    serviceSid: serviceSid,\n    listSid: listSid,\n    index: index\n  };\n  this._uri = `/Services/${serviceSid}/Lists/${listSid}/Items/${index}`;\n};\n/* jshint ignore:start */\n\n/**\n * fetch a SyncListItemInstance\n *\n * @function fetch\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListItemInstance\n */\n\n/* jshint ignore:end */\n\n\nSyncListItemContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new SyncListItemInstance(this._version, payload, this._solution.serviceSid, this._solution.listSid, this._solution.index));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * remove a SyncListItemInstance\n *\n * @function remove\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.ifMatch] - The If-Match HTTP request header\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListItemInstance\n */\n\n/* jshint ignore:end */\n\n\nSyncListItemContext.prototype.remove = function remove(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var headers = values.of({\n    'If-Match': _.get(opts, 'ifMatch')\n  });\n\n  var promise = this._version.remove({\n    uri: this._uri,\n    method: 'DELETE',\n    headers: headers\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * update a SyncListItemInstance\n *\n * @function update\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemContext#\n *\n * @param {object} [opts] - Options for request\n * @param {object} [opts.data] -\n *          A JSON string that represents an arbitrary, schema-less object that the List Item stores\n * @param {number} [opts.ttl] - An alias for item_ttl\n * @param {number} [opts.itemTtl] -\n *          How long, in seconds, before the List Item expires\n * @param {number} [opts.collectionTtl] -\n *          How long, in seconds, before the List Item's parent Sync List expires\n * @param {string} [opts.ifMatch] - The If-Match HTTP request header\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListItemInstance\n */\n\n/* jshint ignore:end */\n\n\nSyncListItemContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n  var deferred = Q.defer();\n  var data = values.of({\n    'Data': serialize.object(_.get(opts, 'data')),\n    'Ttl': _.get(opts, 'ttl'),\n    'ItemTtl': _.get(opts, 'itemTtl'),\n    'CollectionTtl': _.get(opts, 'collectionTtl')\n  });\n  var headers = values.of({\n    'If-Match': _.get(opts, 'ifMatch')\n  });\n\n  var promise = this._version.update({\n    uri: this._uri,\n    method: 'POST',\n    data: data,\n    headers: headers\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new SyncListItemInstance(this._version, payload, this._solution.serviceSid, this._solution.listSid, this._solution.index));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nSyncListItemContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nSyncListItemContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  SyncListItemList: SyncListItemList,\n  SyncListItemPage: SyncListItemPage,\n  SyncListItemInstance: SyncListItemInstance,\n  SyncListItemContext: SyncListItemContext\n};","map":{"version":3,"names":["Q","require","_","util","Page","deserialize","serialize","values","SyncListItemList","SyncListItemPage","SyncListItemInstance","SyncListItemContext","version","serviceSid","listSid","SyncListItemListInstance","sid","get","_version","_solution","_uri","create","opts","callback","isUndefined","Error","deferred","defer","data","of","object","promise","uri","method","then","payload","resolve","index","bind","catch","error","reject","isFunction","nodeify","each","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","fetchNextPage","fn","page","instances","instance","nextPage","merge","list","allResources","resource","push","length","pageToken","pageNumber","params","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","integer","accountSid","account_sid","service_sid","list_sid","url","revision","dateExpires","iso8601DateTime","date_expires","dateCreated","date_created","dateUpdated","date_updated","createdBy","created_by","_context","undefined","Object","defineProperty","fetch","_proxy","remove","update","headers","module","exports"],"sources":["/Users/hooniesun/rmit/fwp/assessment1/lan/node_modules/twilio/lib/rest/sync/v1/service/syncList/syncListItem.js"],"sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../../base/deserialize');  /* jshint ignore:line */\nvar serialize = require(\n    '../../../../../base/serialize');  /* jshint ignore:line */\nvar values = require('../../../../../base/values');  /* jshint ignore:line */\n\nvar SyncListItemList;\nvar SyncListItemPage;\nvar SyncListItemInstance;\nvar SyncListItemContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncListItemList\n *\n * @constructor Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList\n *\n * @param {Twilio.Sync.V1} version - Version of the resource\n * @param {string} serviceSid -\n *          The SID of the Sync Service that the resource is associated with\n * @param {string} listSid - The SID of the Sync List that contains the List Item\n */\n/* jshint ignore:end */\nSyncListItemList = function SyncListItemList(version, serviceSid, listSid) {\n  /* jshint ignore:start */\n  /**\n   * @function syncListItems\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemContext}\n   */\n  /* jshint ignore:end */\n  function SyncListItemListInstance(sid) {\n    return SyncListItemListInstance.get(sid);\n  }\n\n  SyncListItemListInstance._version = version;\n  // Path Solution\n  SyncListItemListInstance._solution = {serviceSid: serviceSid, listSid: listSid};\n  SyncListItemListInstance._uri = `/Services/${serviceSid}/Lists/${listSid}/Items`;\n  /* jshint ignore:start */\n  /**\n   * create a SyncListItemInstance\n   *\n   * @function create\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList#\n   *\n   * @param {object} opts - Options for request\n   * @param {object} opts.data -\n   *          A JSON string that represents an arbitrary, schema-less object that the List Item stores\n   * @param {number} [opts.ttl] - An alias for item_ttl\n   * @param {number} [opts.itemTtl] -\n   *          How long, in seconds, before the List Item expires\n   * @param {number} [opts.collectionTtl] -\n   *          How long, in seconds, before the List Item's parent Sync List expires\n   * @param {function} [callback] - Callback to handle processed record\n   *\n   * @returns {Promise} Resolves to processed SyncListItemInstance\n   */\n  /* jshint ignore:end */\n  SyncListItemListInstance.create = function create(opts, callback) {\n    if (_.isUndefined(opts)) {\n      throw new Error('Required parameter \"opts\" missing.');\n    }\n    if (_.isUndefined(opts['data'])) {\n      throw new Error('Required parameter \"opts[\\'data\\']\" missing.');\n    }\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Data': serialize.object(_.get(opts, 'data')),\n      'Ttl': _.get(opts, 'ttl'),\n      'ItemTtl': _.get(opts, 'itemTtl'),\n      'CollectionTtl': _.get(opts, 'collectionTtl')\n    });\n\n    var promise = this._version.create({uri: this._uri, method: 'POST', data: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new SyncListItemInstance(\n        this._version,\n        payload,\n        this._solution.serviceSid,\n        this._solution.listSid,\n        this._solution.index\n      ));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Streams SyncListItemInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sync_list_item.query_result_order} [opts.order] -\n   *          The order to return the List Items\n   * @param {string} [opts.from] -\n   *          The index of the first Sync List Item resource to read\n   * @param {sync_list_item.query_from_bound_type} [opts.bounds] -\n   *          Whether to include the List Item referenced by the from parameter\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  SyncListItemListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        } else {\n          onComplete();\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists SyncListItemInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sync_list_item.query_result_order} [opts.order] -\n   *          The order to return the List Items\n   * @param {string} [opts.from] -\n   *          The index of the first Sync List Item resource to read\n   * @param {sync_list_item.query_from_bound_type} [opts.bounds] -\n   *          Whether to include the List Item referenced by the from parameter\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SyncListItemListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of SyncListItemInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {sync_list_item.query_result_order} [opts.order] -\n   *          The order to return the List Items\n   * @param {string} [opts.from] -\n   *          The index of the first Sync List Item resource to read\n   * @param {sync_list_item.query_from_bound_type} [opts.bounds] -\n   *          Whether to include the List Item referenced by the from parameter\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SyncListItemListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'Order': _.get(opts, 'order'),\n      'From': _.get(opts, 'from'),\n      'Bounds': _.get(opts, 'bounds'),\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new SyncListItemPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of SyncListItemInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  SyncListItemListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new SyncListItemPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a sync_list_item\n   *\n   * @function get\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList#\n   *\n   * @param {string} index - The index of the Sync List Item resource to fetch\n   *\n   * @returns {Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemContext}\n   */\n  /* jshint ignore:end */\n  SyncListItemListInstance.get = function get(index) {\n    return new SyncListItemContext(\n      this._version,\n      this._solution.serviceSid,\n      this._solution.listSid,\n      index\n    );\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  SyncListItemListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  SyncListItemListInstance[util.inspect.custom] = function inspect(depth, options)\n      {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return SyncListItemListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncListItemPage\n *\n * @constructor Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {SyncListItemSolution} solution - Path solution\n *\n * @returns SyncListItemPage\n */\n/* jshint ignore:end */\nSyncListItemPage = function SyncListItemPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(SyncListItemPage.prototype, Page.prototype);\nSyncListItemPage.prototype.constructor = SyncListItemPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of SyncListItemInstance\n *\n * @function getInstance\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemPage#\n *\n * @param {SyncListItemPayload} payload - Payload response from the API\n *\n * @returns SyncListItemInstance\n */\n/* jshint ignore:end */\nSyncListItemPage.prototype.getInstance = function getInstance(payload) {\n  return new SyncListItemInstance(\n    this._version,\n    payload,\n    this._solution.serviceSid,\n    this._solution.listSid\n  );\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSyncListItemPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nSyncListItemPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncListItemContext\n *\n * @constructor Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemInstance\n *\n * @property {number} index - The automatically generated index of the List Item\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} serviceSid -\n *          The SID of the Sync Service that the resource is associated with\n * @property {string} listSid -\n *          The SID of the Sync List that contains the List Item\n * @property {string} url - The absolute URL of the List Item resource\n * @property {string} revision -\n *          The current revision of the item, represented as a string\n * @property {object} data -\n *          An arbitrary, schema-less object that the List Item stores\n * @property {Date} dateExpires -\n *          The ISO 8601 date and time in GMT when the List Item expires\n * @property {Date} dateCreated -\n *          The ISO 8601 date and time in GMT when the resource was created\n * @property {Date} dateUpdated -\n *          The ISO 8601 date and time in GMT when the resource was last updated\n * @property {string} createdBy - The identity of the List Item's creator\n *\n * @param {V1} version - Version of the resource\n * @param {SyncListItemPayload} payload - The instance payload\n * @param {sid} serviceSid -\n *          The SID of the Sync Service that the resource is associated with\n * @param {sid} listSid - The SID of the Sync List that contains the List Item\n * @param {integer} index - The index of the Sync List Item resource to fetch\n */\n/* jshint ignore:end */\nSyncListItemInstance = function SyncListItemInstance(version, payload,\n                                                      serviceSid, listSid,\n                                                      index) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.index = deserialize.integer(payload.index); // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.serviceSid = payload.service_sid; // jshint ignore:line\n  this.listSid = payload.list_sid; // jshint ignore:line\n  this.url = payload.url; // jshint ignore:line\n  this.revision = payload.revision; // jshint ignore:line\n  this.data = payload.data; // jshint ignore:line\n  this.dateExpires = deserialize.iso8601DateTime(payload.date_expires); // jshint ignore:line\n  this.dateCreated = deserialize.iso8601DateTime(payload.date_created); // jshint ignore:line\n  this.dateUpdated = deserialize.iso8601DateTime(payload.date_updated); // jshint ignore:line\n  this.createdBy = payload.created_by; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {serviceSid: serviceSid, listSid: listSid, index: index || this.index, };\n};\n\nObject.defineProperty(SyncListItemInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new SyncListItemContext(\n          this._version,\n          this._solution.serviceSid,\n          this._solution.listSid,\n          this._solution.index\n        );\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a SyncListItemInstance\n *\n * @function fetch\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListItemInstance\n */\n/* jshint ignore:end */\nSyncListItemInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * remove a SyncListItemInstance\n *\n * @function remove\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.ifMatch] - The If-Match HTTP request header\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListItemInstance\n */\n/* jshint ignore:end */\nSyncListItemInstance.prototype.remove = function remove(opts, callback) {\n  return this._proxy.remove(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * update a SyncListItemInstance\n *\n * @function update\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemInstance#\n *\n * @param {object} [opts] - Options for request\n * @param {object} [opts.data] -\n *          A JSON string that represents an arbitrary, schema-less object that the List Item stores\n * @param {number} [opts.ttl] - An alias for item_ttl\n * @param {number} [opts.itemTtl] -\n *          How long, in seconds, before the List Item expires\n * @param {number} [opts.collectionTtl] -\n *          How long, in seconds, before the List Item's parent Sync List expires\n * @param {string} [opts.ifMatch] - The If-Match HTTP request header\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListItemInstance\n */\n/* jshint ignore:end */\nSyncListItemInstance.prototype.update = function update(opts, callback) {\n  return this._proxy.update(opts, callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSyncListItemInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nSyncListItemInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the SyncListItemContext\n *\n * @constructor Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemContext\n *\n * @param {V1} version - Version of the resource\n * @param {sid_like} serviceSid -\n *          The SID of the Sync Service with the Sync List Item resource to fetch\n * @param {sid_like} listSid -\n *          The SID of the Sync List with the Sync List Item resource to fetch\n * @param {integer} index - The index of the Sync List Item resource to fetch\n */\n/* jshint ignore:end */\nSyncListItemContext = function SyncListItemContext(version, serviceSid, listSid,\n                                                    index) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {serviceSid: serviceSid, listSid: listSid, index: index, };\n  this._uri = `/Services/${serviceSid}/Lists/${listSid}/Items/${index}`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a SyncListItemInstance\n *\n * @function fetch\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListItemInstance\n */\n/* jshint ignore:end */\nSyncListItemContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new SyncListItemInstance(\n      this._version,\n      payload,\n      this._solution.serviceSid,\n      this._solution.listSid,\n      this._solution.index\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * remove a SyncListItemInstance\n *\n * @function remove\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemContext#\n *\n * @param {object} [opts] - Options for request\n * @param {string} [opts.ifMatch] - The If-Match HTTP request header\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListItemInstance\n */\n/* jshint ignore:end */\nSyncListItemContext.prototype.remove = function remove(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var headers = values.of({'If-Match': _.get(opts, 'ifMatch')});\n\n  var promise = this._version.remove({uri: this._uri, method: 'DELETE', headers: headers});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(payload);\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * update a SyncListItemInstance\n *\n * @function update\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemContext#\n *\n * @param {object} [opts] - Options for request\n * @param {object} [opts.data] -\n *          A JSON string that represents an arbitrary, schema-less object that the List Item stores\n * @param {number} [opts.ttl] - An alias for item_ttl\n * @param {number} [opts.itemTtl] -\n *          How long, in seconds, before the List Item expires\n * @param {number} [opts.collectionTtl] -\n *          How long, in seconds, before the List Item's parent Sync List expires\n * @param {string} [opts.ifMatch] - The If-Match HTTP request header\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed SyncListItemInstance\n */\n/* jshint ignore:end */\nSyncListItemContext.prototype.update = function update(opts, callback) {\n  if (_.isFunction(opts)) {\n    callback = opts;\n    opts = {};\n  }\n  opts = opts || {};\n\n  var deferred = Q.defer();\n  var data = values.of({\n    'Data': serialize.object(_.get(opts, 'data')),\n    'Ttl': _.get(opts, 'ttl'),\n    'ItemTtl': _.get(opts, 'itemTtl'),\n    'CollectionTtl': _.get(opts, 'collectionTtl')\n  });\n  var headers = values.of({'If-Match': _.get(opts, 'ifMatch')});\n\n  var promise = this._version.update({uri: this._uri, method: 'POST', data: data, headers: headers});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new SyncListItemInstance(\n      this._version,\n      payload,\n      this._solution.serviceSid,\n      this._solution.listSid,\n      this._solution.index\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Sync.V1.ServiceContext.SyncListContext.SyncListItemContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nSyncListItemContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nSyncListItemContext.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  SyncListItemList: SyncListItemList,\n  SyncListItemPage: SyncListItemPage,\n  SyncListItemInstance: SyncListItemInstance,\n  SyncListItemContext: SyncListItemContext\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}